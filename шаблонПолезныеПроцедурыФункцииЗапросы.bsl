//тут можно найти полезное, 
//включая запросы -- Активы.ОстаткиИобороты, получение ИтоговыхКотировок и ПереоценкуСтоимости инструментов

//обработка -- fc20_20230413_1400_ОКУД_0420431
// -- C:\Tim\1C_DEV_pool\BackOffice\reports_XBRL\dev
// запускалка id=4000

procedure prc_writeMsg( a_msg )
	
	этотОбъект.tbl_messages.Добавить().msg=trimAll( a_msg );
	
endProcedure
//-----------------------------------------------------------------------------
Процедура ПриОткрытии()
		
	clearMessages();
	этотОбъект.tbl_messages.Очистить();
	
	prc_writeMsg( "start: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
	
	этотОбъект.rek_дата_отчета		=конецМесяца( currentDate() );	//=currentDate();
		
	этаФорма.chkBx_обязательства_зачистить						=true;
	этаФорма.chkBx_обязательства_зачистить_закрытыеДоговоры		=true;
	этаФорма.chkBx_остаткиИобороты_зачистить_закрытыеДоговоры	=true;
	
	тзКраткиеСведения_раздел_10.Колонки.Добавить("типКлиента"); 
	тзКраткиеСведения_раздел_10.Колонки.Добавить("квалИнвестор");
    тзКраткиеСведения_раздел_10.Колонки.Добавить("стоимостнаяОценка");
    тзКраткиеСведения_раздел_10.Колонки.Добавить("поступления");
	тзКраткиеСведения_раздел_10.Колонки.Добавить("изъятия");
	тзКраткиеСведения_раздел_10.Колонки.Добавить("ВидДоговора");
	тзКраткиеСведения_раздел_10.Колонки.Добавить("идСтратегии");
		
КонецПроцедуры
//-----------------------------------------------------------------------------
procedure prc_получить_клиентскиеДоговоры()
	var sSQL;
	var v_query;
	var v_result;
	//var v_выборка;
	var v_newRow;
	
	var запрос;
	
	var ar_клДоговоры_отбор;
	var тз_клДоговоры_отбор;
	var v_curr_filter;
	var b_filter;
	
	var v_currRow;
	var dt_датаРасторжения;
	
	
	Отбор=Новый Структура();
	Отбор.Вставить( "flag" ,true );
	ar_клДоговоры_отбор=этотОбъект.tbl_клиентскиеДоговоры_отбор.НайтиСтроки( Отбор );
	тз_клДоговоры_отбор=этотОбъект.tbl_клиентскиеДоговоры_отбор.Выгрузить( ar_клДоговоры_отбор,"клиентскийДоговор" );
	
	b_filter=тз_клДоговоры_отбор.Количество()>0;
	
	sSQL=?( b_filter
				,"
					| select
					|		тз_клДоговоры_отбор.клиентскийДоговор as клиентскийДоговор
					| into tbl_клДоговоры_отбор
					| from
					|	&прм_клДоговоры_отбор as тз_клДоговоры_отбор
					|;"
				,"" )
		+"
		| ВЫБРАТЬ
		|	КлиентскиеДоговора.Ссылка,
		|	КлиентскиеДоговора.ПометкаУдаления,
		|	КлиентскиеДоговора.Код,
		|	КлиентскиеДоговора.Наименование,
		|	КлиентскиеДоговора.Лицо,
		|	""___физЮр_лицо___"" as физЮр_лицо,
		|	КлиентскиеДоговора.Лицо.КодРегионаСтраны3533 as КодРегионаСтраны3533,
		|	КлиентскиеДоговора.ВидДоговора,
		|	КлиентскиеДоговора.ВидДоговораДУ,
		|	КлиентскиеДоговора.Клиент,
		|	КлиентскиеДоговора.Клиент.НалоговыйРезидентРФ as НалоговыйРезидентРФ,
		|	КлиентскиеДоговора.Клиент.КвалифицированныйИнвестор as КвалифицированныйИнвестор,
		|	isNull( КлиентскиеДоговора.Клиент.ИспользованиеБрокеромДСКлиента ,false ) as ИспользованиеБрокеромДСКлиента,	
		|	КлиентскиеДоговора.ВладелецСчета,
		|	КлиентскиеДоговора.ДатаДоговора,
		|	КлиентскиеДоговора.ДатаРасторжения,
		|	КлиентскиеДоговора.ДатаОкончания,
		|	КлиентскиеДоговора.Закрыт
		| into tbl_клДоговоры
		| ИЗ "
			+?( b_filter 
				,"
					|	tbl_клДоговоры_отбор left join Справочник.КлиентскиеДоговора КАК КлиентскиеДоговора
					|		on tbl_клДоговоры_отбор.клиентскийДоговор=КлиентскиеДоговора.Ссылка " 
				,"Справочник.КлиентскиеДоговора КАК КлиентскиеДоговора " )
		+"
		| where
		|		(not КлиентскиеДоговора.ПометкаУдаления)
		|		and((КлиентскиеДоговора.ДатаДоговора<=&прм_датаЗавершения)and(КлиентскиеДоговора.ДатаДоговора>датаВремя(1917,10,25)))
		|		and((КлиентскиеДоговора.ДатаРасторжения>=&прм_датаНачала)or(КлиентскиеДоговора.ДатаРасторжения<датаВремя(1917,10,25)))
		|;
		| ВЫБРАТЬ
		|	Сделка.портфель.договор as Сделка_портфель_договор
		|	,count(Сделка.Ссылка) as cnt_сделка
		| into tbl_сделки
		|ИЗ "
			+?( b_filter 
				,"
					|	tbl_клДоговоры left join Документ.Сделка КАК Сделка
					//|		on tbl_клДоговоры.Ссылка.лицо=Сделка.портфель.лицо " 
					|		on tbl_клДоговоры.Ссылка=Сделка.портфель.договор " 
				,"Документ.Сделка КАК Сделка " )
		+"
		| where
		|		(not Сделка.ПометкаУдаления)
		|		and((Сделка.Дата<=&прм_датаЗавершения)and(Сделка.Дата>датаВремя(1917,10,25)))
		|		and((Сделка.Дата>=&прм_датаНачала)or(Сделка.Дата<датаВремя(1917,10,25)))
		| group by 
		|		Сделка.портфель.договор
		|;
		| select
		|		tbl_клДоговоры.*
		|		,""000 [действует открыт расторгнут]"" as открЗакрДейств
		|		,tbl_сделки.cnt_сделка
		| into tbl_клДоговоры_сделки
		| from
		|		tbl_клДоговоры left join tbl_сделки
		|			on tbl_клДоговоры.ссылка=tbl_сделки.Сделка_портфель_договор
		|;
		|";
	
	v_query=new query;
	v_query.Текст=sSQL;
	//v_query.МенеджерВременныхТаблиц=этотОбъект.rek_ger_into;
	v_query.МенеджерВременныхТаблиц = new МенеджерВременныхТаблиц;
	//v_query.МенеджерВременныхТаблиц=rek_ger_into777;
	v_query.УстановитьПараметр( "прм_датаНачала" ,началоДня( этотОбъект.rek_дата_начало ) );
	v_query.УстановитьПараметр( "прм_датаЗавершения" ,конецДня( этотОбъект.rek_дата_завершения ) );
	if b_filter then
		v_query.УстановитьПараметр( "прм_клДоговоры_отбор" ,тз_клДоговоры_отбор );
	endIf;
	
	v_result=v_query.Выполнить();
	v_выборка=v_result.Выбрать();

	
	if 1=1 then
		запрос = новый запрос;
		запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
		запрос.Текст = "select tbl_клДоговоры_сделки.* from tbl_клДоговоры_сделки as tbl_клДоговоры_сделки order by лицо.наименование";
		этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Колонки.Очистить();
		этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение=запрос.Выполнить().Выгрузить();
		
		
		//заполнить договор действует_открыт_закрыт
			for each v_currRow in этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение do
							
				if date("19171025221100")<v_currRow.ДатаДоговора then
					dt_датаРасторжения=?( v_currRow.датаРасторжения<date("19171025221100") ,date("20711231221100") ,v_currRow.датаРасторжения );
					
					if v_currRow.ДатаДоговора<этотОбъект.rek_дата_начало then
						
						if dt_датаРасторжения<этотОбъект.rek_дата_начало then
							v_currRow.открЗакрДейств="000 вне периода";
						elsIf (этотОбъект.rek_дата_начало<=dt_датаРасторжения)and(dt_датаРасторжения<=этотОбъект.rek_дата_завершения) then
							v_currRow.открЗакрДейств="001 расторгнут в отчетном периоде";
						else
							v_currRow.открЗакрДейств="100 действует";
						endIf;
					
					elsIf (этотОбъект.rek_дата_начало<=v_currRow.ДатаДоговора)and(v_currRow.ДатаДоговора<=этотОбъект.rek_дата_завершения) then
						
						if dt_датаРасторжения<этотОбъект.rek_дата_начало then
							v_currRow.открЗакрДейств="000 вне периода";
						elsIf (этотОбъект.rek_дата_начало<=dt_датаРасторжения)and(dt_датаРасторжения<=этотОбъект.rek_дата_завершения) then
							v_currRow.открЗакрДейств="011 открыт в отчетном периоде и расторгнут";
						else
							v_currRow.открЗакрДейств="110 открыт в отчетном периоде и действует";
						endIf;
						
					else
						v_currRow.открЗакрДейств="000 вне периода";
					endIf;
					
				else
					v_currRow.открЗакрДейств="000 не задана дата договора";
				endIf;
			endDo;
				
		//заполнить поле физЮрЛица
			for each v_currRow in этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение do
				if типЗнч( v_currRow.лицо )=тип( "СправочникСсылка.ФизическиеЛица" ) then
					v_currRow.физЮр_лицо="физЛицо";
				elsIf типЗнч( v_currRow.лицо )=тип( "СправочникСсылка.Организации" ) then
					v_currRow.физЮр_лицо="юрЛицо";
				else
					v_currRow.физЮр_лицо="иноеЛицо";
				endIf;
			endDo;
			
	endIf;
	
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_получить_операции()
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	тз_лицо=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.Скопировать( ,"лицо" );
	
	sSQL="
		| select
		|		тз_лица.лицо as лицо
		| into tbl_лица
		| from
		|	&прм_лица as тз_лица
		|;
		| ВЫБРАТЬ
		|	Операция.Ссылка
		|	,Операция.ПометкаУдаления
		|	,Операция.Номер
		|	,Операция.Дата
		|	,Операция.Проведен
		|	,Операция.ДатаИсполнения
		|	,Операция.Собственник
		|	,Операция.Портфель
		|	,isNull( Операция.Портфель.Договор ,""договор не найден"" ) as портфель_Договор
		|	,Операция.ВидОперации
		|	,Операция.ТипОперации
		|	,Операция.БезПоручения
		|	,Операция.Инструмент
		|	,Операция.Количество
		|	,Операция.Стоимость
		|	,Операция.ВалютаСтоимости
		|	,Операция.КотировкаСтоимости
		|	,Операция.ЦБ
		|	,Операция.Деньги
		|	,Операция.Обязательство
		|	,Операция.Цена
		| into tbl_операции
		| ИЗ
		//|	Документ.Операция КАК Операция
		|	tbl_лица left join Документ.Операция КАК Операция
		|		on tbl_лица.лицо=Операция.Собственник
		| where
		|		(not Операция.ПометкаУдаления)
		|		and(Операция.дата>=&прм_датаНачала)
		|		and(Операция.дата<=&прм_датаЗавершения)
		|";
	
	v_query=new query;
	v_query.Текст=sSQL;
	//v_query.МенеджерВременныхТаблиц=этотОбъект.rek_ger_into;
	v_query.МенеджерВременныхТаблиц = new МенеджерВременныхТаблиц;
	//v_query.МенеджерВременныхТаблиц=rek_ger_into777;
	v_query.УстановитьПараметр( "прм_датаНачала" ,началоДня( этотОбъект.rek_дата_начало ) );
	v_query.УстановитьПараметр( "прм_датаЗавершения" ,конецДня( этотОбъект.rek_дата_завершения ) );
	v_query.УстановитьПараметр( "прм_лица" ,тз_лицо );
	
	v_result=v_query.Выполнить();
	//v_выборка=v_result.Выбрать();
	
	запрос = новый запрос;
	запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	запрос.Текст = "select tbl_операции.* from tbl_операции as tbl_операции";
	
	этаФорма.ЭлементыФормы.тз_операции.Колонки.Очистить();
	этаФорма.ЭлементыФормы.тз_операции.Значение=запрос.Выполнить().Выгрузить();
	
	этаФорма.ЭлементыФормы.тз_операции.Значение.Сортировать( "ссылка asc" );
	
endProcedure
//-----------------------------------------------------------------------------
function fnc_текстЗапроса_обороты( b_filter )
	var fncRes;
	
	
	fncRes=
			//?( b_filter
			//	,"
			//		| select
			//		|		тз_клДоговоры_отбор.клиентскийДоговор as клиентскийДоговор
			//		| into tbl_клДоговоры_отбор
			//		| from
			//		|	&прм_клДоговоры_отбор as тз_клДоговоры_отбор
			//		|;"
			//	,"" )
			//+
			"
			| select
			|		тз_лица.лицо as лицо
			| into tbl_лица
			| from
			|	&прм_лица as тз_лица
			|;
			| ВЫБРАТЬ
			//|	рс_ОбязательстваКлиентов577П_обороты.Период
			|
			|
			|
			|   ВЫБОР 
			|		КОГДА ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.ОплатаСделки)
			|			ИЛИ ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.ПоставкаСделки)
			|			ИЛИ ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.РасходыСделки)
			|			ИЛИ ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.ИсполнениеФорвардов) ТОГДА
			|   	рс_ОбязательстваКлиентов577П_обороты.КЗачислениюОборот
			|		КОГДА ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.Операция)
			|			И ДОКО.ДатаИсполнения = рс_ОбязательстваКлиентов577П_обороты.Период
			|			И ТИПЗНАЧЕНИЯ(ДОКО.Задача) <> ТИП(Задача.ВыдачаЗаймаЦБ) ТОГДА
			|   	рс_ОбязательстваКлиентов577П_обороты.КЗачислениюОборот
			|		КОГДА ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.Операция)
			|			И ДОКО.ДатаИсполнения = рс_ОбязательстваКлиентов577П_обороты.Период
			|			И ТИПЗНАЧЕНИЯ(ДОКО.Задача) = ТИП(Задача.ЗачислениеПроцентовПоЗаймамЦБ) ТОГДА
			|   	рс_ОбязательстваКлиентов577П_обороты.КЗачислениюОборот
			|		ИНАЧЕ
			|   		0
			|	КОНЕЦ КАК КЗачислениюОборот_02,
			|   ВЫБОР 
			|		КОГДА ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.ОплатаСделки)
			|			ИЛИ ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.ПоставкаСделки)
			|			ИЛИ ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.РасходыСделки)
			|			ИЛИ ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.ИсполнениеФорвардов) ТОГДА
			|   	рс_ОбязательстваКлиентов577П_обороты.КСписаниюОборот
			|		КОГДА ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.Операция) 
			|			И ДОКО.ДатаИсполнения = рс_ОбязательстваКлиентов577П_обороты.Период
			|			И ТИПЗНАЧЕНИЯ(ДОКО.Задача) <> ТИП(Задача.ВыдачаЗаймаЦБ) ТОГДА
			|   	рс_ОбязательстваКлиентов577П_обороты.КСписаниюОборот
			|		КОГДА ТИПЗНАЧЕНИЯ(рс_ОбязательстваКлиентов577П_обороты.Регистратор) = ТИП(Документ.Операция) 
			|			И ДОКО.ДатаИсполнения = рс_ОбязательстваКлиентов577П_обороты.Период
			|			И ТИПЗНАЧЕНИЯ(ДОКО.Задача) = ТИП(Задача.ЗачислениеПроцентовПоЗаймамЦБ) ТОГДА
			|   	рс_ОбязательстваКлиентов577П_обороты.КСписаниюОборот
			|		ИНАЧЕ
			|   		0
			|	КОНЕЦ КАК КСписаниюОборот_02,
			|
			|
			|	рс_ОбязательстваКлиентов577П_обороты.*
			| into tbl_обязательства_обороты
			| ИЗ
			|	РегистрНакопления.ОбязательстваКлиентов577П.Обороты(
			|													&прм_датаНачала ,&прм_датаЗавершения 
			|													,Регистратор
			|													, (1=1)
			|													"+?( b_filter ,"and( СчетУчета.ВладелецСчета.Клиент.лицо В (&прм_лица))" ,"" )+"
			|													"+?( этаФорма.chkBx_поИнструменту ," and( Инструмент=&прм_акция ) " ,"" )+"
			|													" +?( этаФорма.chkBx_по_ВидуОперации ," and( видОперации=&прм_видОперации ) " ,"" )+"
			|													) as рс_ОбязательстваКлиентов577П_обороты
			|
			|
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеПараметрыСделок.СрезПоследних( &прм_датаЗавершения, 
			|		) КАК РасчПС
			|		ПО РасчПС.Документ = рс_ОбязательстваКлиентов577П_обороты.ПоДокументу
			|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.Операция КАК ДОКО
			|		ПО ДОКО.Ссылка = рс_ОбязательстваКлиентов577П_обороты.Регистратор
			|
			|
			|
			| where
			|		(1=1)
			//|		"+?( этаФорма.chkBx_обязательства_зачистить ,"and((рс_ОбязательстваКлиентов577П_обороты.КЗачислениюОборот_02<>0.0)"
			//															+"and(рс_ОбязательстваКлиентов577П_обороты.КСписаниюОборот_02<>0.0))","" )+"
			|
			|
			|
			|;
			|";	


	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
procedure prc_получить_обязательства_обороты_данные()
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	
	
	Отбор=Новый Структура();
	Отбор.Вставить( "flag" ,true );
	ar_лица_отбор=этотОбъект.tbl_клиентскиеДоговоры_отбор.НайтиСтроки( Отбор );
	тз_лица_отбор=этотОбъект.tbl_клиентскиеДоговоры_отбор.Выгрузить( ar_лица_отбор,"лицо" );
	
	b_filter=тз_лица_отбор.Количество()>0;
		
	if 1=1 then
		sSQL=fnc_текстЗапроса_обороты( b_filter );
	else
		////варианты экспериментов:
		//	sSQL=fnc_текстЗапроса_остатки();
		//	sSQL=fnc_текстЗапроса_остатки_02();
	endIf;
	
	тз_лицо=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.Скопировать( ,"лицо" );
	
	//v_физЛицо=этотОбъект.rek_лицо;
	v_физЛицо=этаФорма.ed_лицо;
	
		//v_акция=справочники.Акции.НайтиПоРеквизиту( "НомерРегистрации" ,"1-01-00146-A" );		// 20230331 газпром нефть
		//v_акция=справочники.Акции.НайтиПоРеквизиту( "НомерРегистрации" ,"2-02-00074-A" );		// 20230331 ломо ап
		//v_акция=справочники.Акции.НайтиПоРеквизиту( "НомерРегистрации" ,"1-02-00074-A" );		// 20230331 ломо ао
		
	v_акция			=этаФорма.ed_инструмент;
	v_видОперации	=этаФорма.ed_видОперации;
	
	
	v_query=new query;
	v_query.Текст=sSQL;
	//v_query.МенеджерВременныхТаблиц=этотОбъект.rek_ger_into;
	v_query.МенеджерВременныхТаблиц = new МенеджерВременныхТаблиц;
	//v_query.МенеджерВременныхТаблиц=rek_ger_into777;
	v_query.УстановитьПараметр( "прм_датаНачала" ,началоДня( этотОбъект.rek_дата_начало ) );
	v_query.УстановитьПараметр( "прм_датаЗавершения" ,конецДня( этотОбъект.rek_дата_завершения ) );
//	v_query.УстановитьПараметр( "прм_лица" ,тз_лицо );
	v_query.УстановитьПараметр( "прм_физЛицо"		,v_физЛицо );
	v_query.УстановитьПараметр( "прм_акция"			,v_акция );
	v_query.УстановитьПараметр( "прм_видОперации"	,v_видОперации );
	//v_query.УстановитьПараметр( "прм_лица" ,тз_лицо );
	v_query.УстановитьПараметр( "прм_лица" ,тз_лица_отбор );
	 
	
	
	
	v_result=v_query.Выполнить();
	//v_выборка=v_result.Выбрать();
	
	запрос = новый запрос;
	запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	запрос.Текст = "select tbl_обязательства_обороты.* from tbl_обязательства_обороты as tbl_обязательства_обороты"
			+" where (1=1)"
			+?( этаФорма.chkBx_обязательства_зачистить ,"and((tbl_обязательства_обороты.КЗачислениюОборот_02<>0.0)"
																		+"or(tbl_обязательства_обороты.КСписаниюОборот_02<>0.0))","" )
			+"
			|УПОРЯДОЧИТЬ ПО
			|	ПоДокументу
//			|	,f_время
//			|	Порядок
//			|	,Инструмент
//			|	,ПоДокументу
//			|	,Период
////			|	,Регистратор
			|";
			
	
	этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки.Очистить();
	этаФорма.ЭлементыФормы.тз_обязательства_обороты.Значение=запрос.Выполнить().Выгрузить();
	
	этаФорма.ЭлементыФормы.тз_обязательства_обороты.Значение.Колонки.Добавить( "lstColumn" ,new описаниеТипов("строка") ,"lastColumn" ,16 );
	for each v_col in этаФорма.ЭлементыФормы.тз_обязательства_обороты.Значение.Колонки do
		if v_col.Заголовок="Период" then
			v_col.Ширина=22;
		elsIf v_col.Заголовок="Инструмент" then
			v_col.Ширина=32;
		else
			v_col.Ширина=16;
		endIf;
	endDo;
	
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_получить_обязательства_обороты()
	
	этаФорма.ЭлементыФормы.тз_обязательства_обороты.Значение.Очистить();
	
	
	status( "Заполнение обязательств (обороты)" );
	
	prc_получить_обязательства_обороты_данные();
	
	status( "Переоценка обязательств (обороты)" );
	
endProcedure
//-----------------------------------------------------------------------------
function fnc_текстЗапроса_остатки( b_filter )
	var fncRes;
	
	fncRes=
			"
			| ВЫБРАТЬ
			|	""2_кон"" as f_время
			|	,рс_ОбязательстваКлиентов577П_остатки.ПоДокументу
			|	,рс_ОбязательстваКлиентов577П_остатки.Инструмент
			|	,рс_ОбязательстваКлиентов577П_остатки.СчетУчета
			|	,рс_ОбязательстваКлиентов577П_остатки.ВидОперации
			|	,case
			|		when рс_ОбязательстваКлиентов577П_остатки.КЗачислениюОстаток<>рс_ОбязательстваКлиентов577П_остатки.КСписаниюОстаток
			|			then ""<>""
			|		else
			|			""=""
			|		end as разница
			|	,рс_ОбязательстваКлиентов577П_остатки.КЗачислениюОстаток КАК Количество_кЗачислению
			|	,рс_ОбязательстваКлиентов577П_остатки.КСписаниюОстаток КАК Количество_кСписанию
			//|	,рс_ОбязательстваКлиентов577П_остатки.*
			| into tbl_обязательства_остатки
			| ИЗ
			|	РегистрНакопления.ОбязательстваКлиентов577П.Остатки(
			|													&прм_датаЗавершения
			//|													,СчетУчета.ВладелецСчета.Клиент.лицо = &прм_физЛицо
			//|													,СчетУчета.ВладелецСчета.Клиент.лицо В (&прм_лица)
			|													, (1=1)
			|													"+?( b_filter ,"and( СчетУчета.ВладелецСчета.Клиент.лицо В (&прм_лица))" ,"" )+"
			|													"+?( этаФорма.chkBx_поИнструменту ," and( Инструмент=&прм_акция ) " ,"" )+"
			//|													И СчетУчета = &СчетУчета 
			|													" +?( этаФорма.chkBx_по_ВидуОперации ," and( видОперации=&прм_видОперации ) " ,"" )+"
			|													) as рс_ОбязательстваКлиентов577П_остатки
			| where
			|		(1=1)
			|		"+?( этаФорма.chkBx_обязательства_зачистить
									,"and(рс_ОбязательстваКлиентов577П_остатки.КЗачислениюОстаток<>рс_ОбязательстваКлиентов577П_остатки.КСписаниюОстаток)" 
									,"" )
					+"
//			| УПОРЯДОЧИТЬ ПО
//			|	ПоДокументу.МоментВремени
			|;
			|";	
	
	                     
	
//			|"
//			+?( этаФорма.chkBx_поИнструменту ," and( Инструмент=&прм_акция ) " ,"" )
//			+?( этаФорма.chkBx_по_ВидуОперации ," and( видОперации=&прм_видОперации ) " ,"" )
//			+"
////			|		and(видОперации=&прм_видОперации)
//			//|		{
//			//|  		ПоДокументу.*,
//			//|  		Инструмент.*,
//			//|  		СчетУчета.*,
//			//|		ВидОперации
//			//|		}	
//			|	) КАК ОК577П
//			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеПараметрыСделок.СрезПоследних( &прм_датаЗавершения, 
//			|	) КАК РасчПС
//			|	ПО РасчПС.Документ = ОК577П.ПоДокументу
//			|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.Операция КАК ДОКО
//			|	ПО ДОКО.Ссылка = ОК577П.Регистратор
//			//|УПОРЯДОЧИТЬ ПО
//			//|	Порядок,
//			//|	ИнструментПолноеПредставление,
//			//|	ДатаДок,
//			//|	ПоДокументу,
//			//|	Период,
//			//|	Регистратор
//			|";
			
			
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
procedure prc_получить_обязательства_остатки_данные()
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	

	Отбор=Новый Структура();
	Отбор.Вставить( "flag" ,true );
	ar_лица_отбор=этотОбъект.tbl_клиентскиеДоговоры_отбор.НайтиСтроки( Отбор );
	тз_лица_отбор=этотОбъект.tbl_клиентскиеДоговоры_отбор.Выгрузить( ar_лица_отбор,"лицо" );
	
	b_filter=тз_лица_отбор.Количество()>0;
	
	if 1=1 then
		sSQL=fnc_текстЗапроса_остатки( b_filter );
	else
		////варианты экспериментов:
		//	sSQL=fnc_текстЗапроса_остатки();
		//	sSQL=fnc_текстЗапроса_остатки_02();
	endIf;
	
	тз_лицо=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.Скопировать( ,"лицо" );
	
	//v_физЛицо=этотОбъект.rek_лицо;
	v_физЛицо=этаФорма.ed_лицо;
	
		//v_акция=справочники.Акции.НайтиПоРеквизиту( "НомерРегистрации" ,"1-01-00146-A" );		// 20230331 газпром нефть
		//v_акция=справочники.Акции.НайтиПоРеквизиту( "НомерРегистрации" ,"2-02-00074-A" );		// 20230331 ломо ап
		//v_акция=справочники.Акции.НайтиПоРеквизиту( "НомерРегистрации" ,"1-02-00074-A" );		// 20230331 ломо ао
		
	v_акция			=этаФорма.ed_инструмент;
	v_видОперации	=этаФорма.ed_видОперации;
	
	
	v_query=new query;
	v_query.Текст=sSQL;
	//v_query.МенеджерВременныхТаблиц=этотОбъект.rek_ger_into;
	v_query.МенеджерВременныхТаблиц = new МенеджерВременныхТаблиц;
	//v_query.МенеджерВременныхТаблиц=rek_ger_into777;
	v_query.УстановитьПараметр( "прм_датаНачала" ,началоДня( этотОбъект.rek_дата_начало ) );
	v_query.УстановитьПараметр( "прм_датаЗавершения" ,конецДня( этотОбъект.rek_дата_завершения ) );
//	v_query.УстановитьПараметр( "прм_лица" ,тз_лицо );
	v_query.УстановитьПараметр( "прм_физЛицо"		,v_физЛицо );
	v_query.УстановитьПараметр( "прм_акция"			,v_акция );
	v_query.УстановитьПараметр( "прм_видОперации"	,v_видОперации );
	//v_query.УстановитьПараметр( "прм_лица" ,тз_лицо );
	v_query.УстановитьПараметр( "прм_лица" ,тз_лица_отбор );
	 
	
	
	
	v_result=v_query.Выполнить();
	//v_выборка=v_result.Выбрать();
	
	запрос = новый запрос;
	запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	запрос.Текст = "select tbl_обязательства_остатки.* from tbl_обязательства_остатки as tbl_обязательства_остатки"
			+"
			//|УПОРЯДОЧИТЬ ПО
			//|	Порядок,
			//|	ИнструментПолноеПредставление,
			//|	ДатаДок,
			//|	ПоДокументу,
			//|	Период,
			//|	Регистратор
			|УПОРЯДОЧИТЬ ПО
			|	ПоДокументу
			|	,f_время
			|";
			
	
	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки.Очистить();
	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение=запрос.Выполнить().Выгрузить();
	
	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Колонки.Добавить( "lstColumn" ,new описаниеТипов("строка") ,"lastColumn" ,16 );
	for each v_col in этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Колонки do
		if v_col.Заголовок="Период" then
			v_col.Ширина=22;
		elsIf v_col.Заголовок="Инструмент" then
			v_col.Ширина=32;
		else
			v_col.Ширина=16;
		endIf;
	endDo;
	
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_получить_обязательства_остатки()
	
	
	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Очистить();
	
	
	status( "Заполнение обязательств (остатки)" );
	
	prc_получить_обязательства_остатки_данные();
	
	status( "Переоценка обязательств (остатки)" );
	
endProcedure
//-----------------------------------------------------------------------------
function fnc_идентификаторЦБ( прм_инструмент )
	var fncRes;
	
	ТипИнструмента = прм_инструмент.ВидЦБ; 
		
	Если ТипИнструмента <> Справочники.ВидыТипыИнструментов.Фьючерс И ТипИнструмента <> Справочники.ВидыТипыИнструментов.Опцион тогда
		fncRes=?( trimAll( прм_инструмент.НомерРегистрации )="" 
					,"000" 
					,trimAll( прм_инструмент.НомерРегистрации ) )
						+"_"+?( trimAll( прм_инструмент.isin )="" ,"000" ,trimAll( прм_инструмент.isin ) )
						+"_"+?( trimAll( прм_инструмент.КодCFI )="" ,"000" ,trimAll( прм_инструмент.КодCFI ) );
	КонецЕсли;
					
	// !!! сделать(с проверкой резидент_НЕрезидент) предупреждение, если "000" в идентификатор_ЦБ
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
procedure prc_получить_обязательства()
	var v_currRow;
	
	
	//обязательства.обороты
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_обязательства;
		этаФорма.ЭлементыФормы.pnl_обязательства.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_обязательства.Страницы.pg_обязательства_обороты;
		
		prc_получить_обязательства_обороты();
		
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.СоздатьКолонки();
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["ПоДокументу"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["СчетУчета"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["инструмент"]	.ЭлементУправления.КнопкаОткрытия=true;
	
	//обязательства.остатки
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_обязательства;
		этаФорма.ЭлементыФормы.pnl_обязательства.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_обязательства.Страницы.pg_обязательства_остатки;
	
		prc_получить_обязательства_остатки();
		
		
		//добавить и заполнить поля, чтобы Ксюша могла формировать отчёт вручную
			этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Колонки.Вставить( 3 ,"идентификатор_ЦБ" ,new описаниеТипов("строка" ) ,"идентификатор_ЦБ" ,20 );
			этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Колонки.Вставить( 5 ,"договор" ,new описаниеТипов("СправочникСсылка.КлиентскиеДоговора" ) ,"договор" ,20 );
			
		//{если вдруг} исключить закрытые договоры
			if этаФорма.chkBx_обязательства_зачистить_закрытыеДоговоры then
				i_lim=этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Количество()-1;
				for i=0 to i_lim do
					if ( этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение[i_lim-i].договор.датаДоговора > этотОбъект.rek_дата_завершения )
						or( ( date( "19171025221100" )<этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение[i_lim-i].договор.ДатаРасторжения )
							and( этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение[i_lim-i].договор.ДатаРасторжения<этотОбъект.rek_дата_начало ) )
					then
						этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Удалить( i_lim-i );
					endIf;
				endDo;
			endIf;
			
			
			for each v_currRow in этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение do
				if типЗнч( v_currRow.инструмент )<>тип( "СправочникСсылка.Валюты" ) then
					v_currRow.идентификатор_ЦБ=fnc_идентификаторЦБ( v_currRow.инструмент );
				endIf;
				if типЗнч( v_currRow.счетУчета )=тип( "СправочникСсылка.СчетаУчета" ) then
					if ЗначениеЗаполнено(v_currRow.счетУчета.ВладелецСчета) 
						И ТипЗнч(v_currRow.счетУчета.ВладелецСчета) = Тип("СправочникСсылка.КлиентскиеДоговора") 
					then
						v_currRow.договор=v_currRow.счетУчета.ВладелецСчета;
					endIf; 
				endIf;
				
			endDo;
		
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.СоздатьКолонки();
	//	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["Регистратор"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["ПоДокументу"]	.ЭлементУправления.КнопкаОткрытия=true;
	//	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["СчетУчета"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["инструмент"]	.ЭлементУправления.КнопкаОткрытия=true;
	//	//этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["Договор"]		.ЭлементУправления.КнопкаОткрытия=true;
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_получить_остаткиИобороты()
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	var запрос;
	
	var v_currRow;
	var v_отбор;
	var ar_клДоговоры_отбор;
	var тз_клДоговоры_отбор;
	
	var тз_лицо;
	var тз_клиентскиеДоговоры;
	
	var i;
	var i_lim;
	
	
	тз_лицо					=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.Скопировать( ,"лицо" );
	тз_клиентскиеДоговоры	=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.Скопировать( ,"ссылка" );
	
	sSQL="
		| ВЫБРАТЬ
		|	АктивыОстаткиИОбороты.Договор as АОО_договор
		|	,АктивыОстаткиИОбороты.Договор.Клиент as АОО_договор_клиент
		|	,АктивыОстаткиИОбороты.Договор.ВидДоговора as АОО_договор_видДоговора
		|	,АктивыОстаткиИОбороты.Инструмент
		|	,АктивыОстаткиИОбороты.Договор.Лицо.КодРегионаСтраны3533
		|	,АктивыОстаткиИОбороты.Договор.Клиент.КвалифицированныйИнвестор
		|	,АктивыОстаткиИОбороты.СчетХранения.Банк.лицо as АОО_СчетХранения_Банк_лицо	
		|	,сумма( АктивыОстаткиИОбороты.КоличествоНачальныйОстаток ) as начОстаток
		|	,сумма( АктивыОстаткиИОбороты.КоличествоПриход ) as Приход
		|	,сумма( АктивыОстаткиИОбороты.КоличествоРасход ) as Расход
		|	,сумма( АктивыОстаткиИОбороты.КоличествоКонечныйОстаток ) as конОстаток
		| into tbl_остаткиИобороты
		|ИЗ
		|	РегистрНакопления.Активы.ОстаткиИОбороты(&прм_датаНачала, &прм_датаЗавершения 
		|							,Период
		|							,				
		|							, (( Инструмент.ВидЦБ.ссылка в (&прм_ВидЦБ_ДС) ) or ( not( Инструмент.ВидЦБ.ссылка в (&прм_ВидЦБ_ЦБ) ) ))
		|								and( Портфель.Договор в (&прм_клиентскиеДоговоры) )
		|								and( Портфель.Лицо <> &прм_Лицо_ЛМС )
		|								and( Портфель.Владелец = &ФирмаУчета )
		|							) КАК АктивыОстаткиИОбороты
		| ГДЕ ( АктивыОстаткиИОбороты.Договор.Клиент.ссылка <> значение(справочник.КлиентскиеДоговора.пустаяСсылка) )
		| group by
		|		АктивыОстаткиИОбороты.Договор, 
		|		АктивыОстаткиИОбороты.Договор.Клиент ,АктивыОстаткиИОбороты.Договор.ВидДоговора ,АктивыОстаткиИОбороты.Инструмент
		|		,АктивыОстаткиИОбороты.Договор.Лицо.КодРегионаСтраны3533 ,АктивыОстаткиИОбороты.Договор.Клиент.КвалифицированныйИнвестор
		|		,АктивыОстаткиИОбороты.СчетХранения.Банк.лицо
		|";

	ar_видИнструмента_ДС=new array;
		ar_видИнструмента_ДС.Добавить( справочники.ВидыТипыИнструментов.НайтиПоКоду( "Валюта" ) );
	ar_видИнструмента_ЦБ=new array; 	// все ЦБ кроме перечисленных
		ar_видИнструмента_ЦБ.Добавить( справочники.ВидыТипыИнструментов.НайтиПоКоду( "Валюта" ) );
		ar_видИнструмента_ЦБ.Добавить( справочники.ВидыТипыИнструментов.НайтиПоКоду( "Опцион" ) );
		ar_видИнструмента_ЦБ.Добавить( справочники.ВидыТипыИнструментов.НайтиПоКоду( "Фьючерс" ) );

	v_query=new query;
	v_query.Текст=sSQL;
	v_query.МенеджерВременныхТаблиц = new МенеджерВременныхТаблиц;
	v_query.УстановитьПараметр( "прм_датаНачала" ,началоДня( этотОбъект.rek_дата_начало ) );
	v_query.УстановитьПараметр( "прм_датаЗавершения" ,конецДня( этотОбъект.rek_дата_завершения ) );
	
	v_query.УстановитьПараметр( "прм_клиентскиеДоговоры" ,тз_клиентскиеДоговоры );
	v_query.УстановитьПараметр( "прм_лица" ,тз_лицо );
	v_query.УстановитьПараметр( "прм_Лицо_ЛМС" ,справочники.Организации.НайтиПоРеквизиту( "ИНН", "7806027770" ) );
	v_query.УстановитьПараметр( "прм_ВидЦБ_ДС" ,ar_видИнструмента_ДС );
	v_query.УстановитьПараметр( "прм_ВидЦБ_ЦБ" ,ar_видИнструмента_ЦБ );
	v_query.УстановитьПараметр( "ФирмаУчета" ,справочники.ФирмыУчета.НайтиПоКоду( 1 ) );
	
	v_result=v_query.Выполнить();
	
	запрос = новый запрос;
	запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	запрос.Текст = "select tbl_остаткиИобороты.* from tbl_остаткиИобороты as tbl_остаткиИобороты";
	
	этаФорма.ЭлементыФормы.тз_остаткиИобороты.Колонки.Очистить();
	этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение=запрос.Выполнить().Выгрузить();
	
	этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение.Сортировать( "АОО_договор ,АОО_договор_клиент ,АОО_договор_видДоговора,АОО_СчетХранения_Банк_лицо" );
	
	//добавить и заполнить поля, чтобы Ксюша могла формировать отчёт вручную
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение.Колонки.Вставить( 
									7 ,"АОО_СчетХранения_Банк_лицо_ИНН" ,new описаниеТипов( "строка" ) ,"АОО_СчетХранения_Банк_лицо_ИНН" ,16 );
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение.Колонки.Вставить( 
									4 ,"идентификатор_ЦБ" ,new описаниеТипов("строка" ) ,"идентификатор_ЦБ" ,20 );
		
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение.Колонки.Вставить( 
									1 ,"физЮр_лицо" ,new описаниеТипов( "строка" ) ,"физЮр_лицо" ,16 );
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение.Колонки.Вставить( 
									1 ,"cnt_сделка" ,new описаниеТипов( "number" ) ,"cnt_сделка" ,8 );
									
									
		//{если вдруг} исключить закрытые договоры
			if этаФорма.chkBx_остаткиИобороты_зачистить_закрытыеДоговоры then
				i_lim=этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение.Количество()-1;
				for i=0 to i_lim do
					if ( этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение[i_lim-i].АОО_договор.датаДоговора > этотОбъект.rek_дата_завершения )
						or( ( date( "19171025221100" )<этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение[i_lim-i].АОО_договор.ДатаРасторжения )
							and( этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение[i_lim-i].АОО_договор.ДатаРасторжения<этотОбъект.rek_дата_начало ) )
					then
						этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение.Удалить( i_lim-i );
					endIf;
				endDo;
			endIf;
		
		for each v_currRow in этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение do
			
			v_отбор=new структура;
				v_отбор.Вставить( "Ссылка" ,v_currRow.АОО_договор );
			ar_клДоговоры_отбор=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.НайтиСтроки( v_отбор );
			if ar_клДоговоры_отбор.Количество()>0 then
				v_currRow.физЮр_лицо	=ar_клДоговоры_отбор[0].физЮр_лицо;
				v_currRow.cnt_сделка	=ar_клДоговоры_отбор[0].cnt_сделка;
			endIf;
			// !!! if ar_клДоговоры_отбор.Количество()>1 then		нечто странное		сделать предупреждение
				
			if типЗнч( v_currRow.АОО_СчетХранения_Банк_лицо )=тип( "СправочникСсылка.Организации" ) then
				v_currRow.АОО_СчетХранения_Банк_лицо_ИНН=v_currRow.АОО_СчетХранения_Банк_лицо.ИНН;
			endIf;
			
			if типЗнч( v_currRow.инструмент )<>тип( "СправочникСсылка.Валюты" ) then
				v_currRow.идентификатор_ЦБ=fnc_идентификаторЦБ( v_currRow.инструмент );
			endIf;
		endDo;
									
endProcedure
//-----------------------------------------------------------------------------
procedure prc_получить_остаткиИобороты_ПФИ()
	
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	var запрос;
	
	var v_currRow;
	var v_отбор;
	var ar_клДоговоры_отбор;
	var тз_клДоговоры_отбор;
	
	var тз_лицо;
	var тз_клиентскиеДоговоры;
	
	var i;
	var i_lim;
	

	тз_лицо					=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.Скопировать( ,"лицо" );
	тз_клиентскиеДоговоры	=этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.Скопировать( ,"ссылка" );
	
	sSQL="
		| ВЫБРАТЬ
		|	АктивыОстаткиИОбороты.Договор as АОО_договор
		|	,АктивыОстаткиИОбороты.Договор.Клиент as АОО_договор_клиент
		|	,АктивыОстаткиИОбороты.Договор.ВидДоговора as АОО_договор_видДоговора
		|	,АктивыОстаткиИОбороты.Портфель
		|	,АктивыОстаткиИОбороты.Инструмент
		|	,АктивыОстаткиИОбороты.Инструмент.Биржа
		|	,АктивыОстаткиИОбороты.Инструмент.БазовыйАктив
		|	,АктивыОстаткиИОбороты.Договор.Лицо.КодРегионаСтраны3533
		|	,АктивыОстаткиИОбороты.Договор.Клиент.КвалифицированныйИнвестор
		|	,АктивыОстаткиИОбороты.СчетХранения.Банк.лицо as АОО_СчетХранения_Банк_лицо	
		|	,сумма( АктивыОстаткиИОбороты.КоличествоНачальныйОстаток ) as начОстаток
		|	,сумма( АктивыОстаткиИОбороты.КоличествоПриход ) as Приход
		|	,сумма( АктивыОстаткиИОбороты.КоличествоРасход ) as Расход
		|	,сумма( АктивыОстаткиИОбороты.КоличествоКонечныйОстаток ) as конОстаток
		| into tbl_остаткиИобороты_ПФИ
		|ИЗ
		|	РегистрНакопления.Активы.ОстаткиИОбороты(&прм_датаНачала, &прм_датаЗавершения 
		|							,Период
		|							,				
		|							, 	( Инструмент.ВидЦБ.ссылка в (&прм_ВидЦБ_ЦБ) )
		|								and( Портфель.Договор в (&прм_клиентскиеДоговоры) )
		|								and( Портфель.Лицо <> &прм_Лицо_ЛМС )
		|								and( Портфель.Владелец = &ФирмаУчета )
		|							) КАК АктивыОстаткиИОбороты
		| ГДЕ ( АктивыОстаткиИОбороты.Договор.Клиент.ссылка <> значение(справочник.КлиентскиеДоговора.пустаяСсылка) )
		| group by
		|		АктивыОстаткиИОбороты.Договор, 
		|		АктивыОстаткиИОбороты.Договор.Клиент ,АктивыОстаткиИОбороты.Договор.ВидДоговора ,АктивыОстаткиИОбороты.Портфель
		|		,АктивыОстаткиИОбороты.Инструмент
		|		,АктивыОстаткиИОбороты.Инструмент.Биржа , АктивыОстаткиИОбороты.Инструмент.БазовыйАктив
		|		,АктивыОстаткиИОбороты.Договор.Лицо.КодРегионаСтраны3533 ,АктивыОстаткиИОбороты.Договор.Клиент.КвалифицированныйИнвестор
		|		,АктивыОстаткиИОбороты.СчетХранения.Банк.лицо
		|";

	//ar_видИнструмента_ДС=new array;
	//	ar_видИнструмента_ДС.Добавить( справочники.ВидыТипыИнструментов.НайтиПоКоду( "Валюта" ) );
	ar_видИнструмента_ЦБ=new array; 	// все ЦБ кроме перечисленных
		ar_видИнструмента_ЦБ.Добавить( справочники.ВидыТипыИнструментов.НайтиПоКоду( "Опцион" ) );
		ar_видИнструмента_ЦБ.Добавить( справочники.ВидыТипыИнструментов.НайтиПоКоду( "Фьючерс" ) );

	v_query=new query;
	v_query.Текст=sSQL;
	v_query.МенеджерВременныхТаблиц = new МенеджерВременныхТаблиц;
	v_query.УстановитьПараметр( "прм_датаНачала" ,началоДня( этотОбъект.rek_дата_начало ) );
	v_query.УстановитьПараметр( "прм_датаЗавершения" ,конецДня( этотОбъект.rek_дата_завершения ) );
	
	v_query.УстановитьПараметр( "прм_клиентскиеДоговоры" ,тз_клиентскиеДоговоры );
	v_query.УстановитьПараметр( "прм_лица" ,тз_лицо );
	v_query.УстановитьПараметр( "прм_Лицо_ЛМС" ,справочники.Организации.НайтиПоРеквизиту( "ИНН", "7806027770" ) );
	//v_query.УстановитьПараметр( "прм_ВидЦБ_ДС" ,ar_видИнструмента_ДС );
	v_query.УстановитьПараметр( "прм_ВидЦБ_ЦБ" ,ar_видИнструмента_ЦБ );
	v_query.УстановитьПараметр( "ФирмаУчета" ,справочники.ФирмыУчета.НайтиПоКоду( 1 ) );
	
	v_result=v_query.Выполнить();
	
	запрос = новый запрос;
	запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	запрос.Текст = "select tbl_остаткиИобороты_ПФИ.* from tbl_остаткиИобороты_ПФИ as tbl_остаткиИобороты_ПФИ";
	
	этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Колонки.Очистить();
	этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Значение=запрос.Выполнить().Выгрузить();
	
	этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Значение.Сортировать( "АОО_договор ,АОО_договор_клиент ,АОО_договор_видДоговора,АОО_СчетХранения_Банк_лицо" );
	
	if этаФорма.chkBx_остаткиИобороты_зачистить_закрытыеДоговоры then
		i_lim=этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Значение.Количество()-1;
		for i=0 to i_lim do
			if ( этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Значение[i_lim-i].АОО_договор.датаДоговора > этотОбъект.rek_дата_завершения )
				or( ( date( "19171025221100" )<этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Значение[i_lim-i].АОО_договор.ДатаРасторжения )
					and( этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Значение[i_lim-i].АОО_договор.ДатаРасторжения<этотОбъект.rek_дата_начало ) )
			then
				этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Значение.Удалить( i_lim-i );
			endIf;
		endDo;
	endIf;   
	
	//удаляем инструменты с нулевым конОстатком
	индекс = тз_остаткиИобороты_ПФИ.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  Если Не ЗначениеЗаполнено(тз_остаткиИобороты_ПФИ[индекс].конОстаток) тогда
		  тз_остаткиИобороты_ПФИ.Удалить(индекс);
	  ИначеЕсли тз_остаткиИобороты_ПФИ[индекс].конОстаток = 0 тогда
		  тз_остаткиИобороты_ПФИ.Удалить(индекс);
	  КонецЕсли;
	  индекс = индекс - 1;
  	КонецЦикла;               
			
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "направлениеСделки" );
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "типПФИ" );   
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "идПФИ" );
    тз_остаткиИобороты_ПФИ.Колонки.Добавить( "ПФИ" );
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "организаторТоргов" );
	
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "ценаЗакрытия" );
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "ШагЦены" );
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "СтоимостьШагаЦены" );
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "итогКотировка" );
   	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "Количество_вЛоте" ); 
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "ГарантийноеОбеспечение" ); 
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "стоимость" );
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "размерФО" ); 
	тз_остаткиИобороты_ПФИ.Колонки.Добавить( "размерГО" ); 
	
	

	Для каждого элм из тз_остаткиИобороты_ПФИ цикл 
		
		v_ПоследнийРабочийДеньОтчетногоПериода = ПолучитьПоследнийРабочийДеньКонцаПериода( конецДня( этотОбъект.rek_дата_завершения ) );
		ДатаКотировки = КонецДня(v_ПоследнийРабочийДеньОтчетногоПериода); 
		
		//ЗначениеРуб, если базовый актив — ценная бумага; Курс валюты, если базовый актив — валюта. 
		//Котировка берется на последний рабочий день в отчетном месяце, курс на последний календарный день в отчетном месяце.
		Если элм.ИнструментБазовыйАктив <> Неопределено тогда
			Если элм.ИнструментБазовыйАктив.ВидЦБ = Справочники.ВидыТипыИнструментов.Валюта тогда
				КурсВалюты = МодульСервера.КурсВалюты(ДатаКотировки, элм.ИнструментБазовыйАктив);
				v_ик_КурсВалюты = КурсВалюты;
				элм.итогКотировка = v_ик_КурсВалюты;
				
				ИмяКотировки = "Закрытие";
				v_ИК_Закрытие = КэшМодуль.ИтоговыеКотировкиКонтракта(ДатаКотировки, элм.Инструмент, ИмяКотировки, элм.Инструмент.Биржа);
				Если ЗначениеЗаполнено(v_ИК_Закрытие) тогда
					элм.ценаЗакрытия 	= v_ИК_Закрытие.Значение;
				КонецЕсли;
			Иначе
				ИмяКотировки = "Закрытие";
				v_ИК_рыночная3 = 0;
				v_ИК_Закрытие_ПФИ = КэшМодуль.ИтоговыеКотировкиКонтракта(ДатаКотировки, элм.Инструмент, ИмяКотировки, элм.Инструмент.Биржа);  
							
				ЗначенияИК_БазовыйАктив = КэшМодуль.ЗначенияИтоговыхКотировок(ДатаКотировки, элм.Инструмент.БазовыйАктив, 
																				Справочники.Биржи.ММВБ.Ссылка, Истина, Истина, );
				
				
				Если ЗначениеЗаполнено(v_ИК_Закрытие_ПФИ) тогда
					элм.ценаЗакрытия 	= v_ИК_Закрытие_ПФИ.Значение;
				КонецЕсли;  
				
				Если ЗначениеЗаполнено(ЗначенияИК_БазовыйАктив) тогда
					v_ИК_рыночная3 		= ЗначенияИК_БазовыйАктив.рыночная3; 
				КонецЕсли;
						
			КонецЕсли; 
		Иначе
			глСообщитьОбОшибке("Для инструмента: [" + Строка(элм.Инструмент) + "] не указан БазовыйАктив!");
		КонецЕсли;
								
		ИмяКотировки = "ШагЦены";
		v_ИК_ШагЦены = КэшМодуль.ИтоговыеКотировкиКонтракта(ДатаКотировки, элм.Инструмент, ИмяКотировки, элм.Инструмент.Биржа);
		Если ЗначениеЗаполнено(v_ИК_ШагЦены) тогда
			элм.ШагЦены 	= v_ИК_ШагЦены.Значение;
		КонецЕсли;
		
		ИмяКотировки = "СтоимостьШагаЦены";
		v_ИК_СтоимостьШагаЦены = КэшМодуль.ИтоговыеКотировкиКонтракта(ДатаКотировки, элм.Инструмент, ИмяКотировки, элм.Инструмент.Биржа);
        Если ЗначениеЗаполнено(v_ИК_СтоимостьШагаЦены) тогда
			элм.СтоимостьШагаЦены 	= v_ИК_СтоимостьШагаЦены.Значение;
		КонецЕсли; 
		
		//считаем Итоговую котировку для фьючерса и опциона = (Цена закрытия * Стоимость шага цены)/шаг цены 
		Если Не элм.ИнструментБазовыйАктив.ВидЦБ = Справочники.ВидыТипыИнструментов.Валюта тогда
			Если Не ЗначениеЗаполнено(элм.ШагЦены) ИЛИ элм.ШагЦены = 0 тогда
				глСообщитьОбОшибке("Для инструмента: [" + Строка(элм.Инструмент) + "] не указан ШагЦены!");
				ВызватьИсключение НСтр("ru = 'Не указан шаг цены. См. сообщения!'"); 
			Иначе
			 	элм.итогКотировка 	= (v_ИК_рыночная3 * элм.СтоимостьШагаЦены) / элм.ШагЦены;
			КонецЕсли;
		КонецЕсли;
									
		элм.Количество_вЛоте 		= элм.Инструмент.КоличествоКонтракта; 
		
		sSQL= "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПДК.Портфель КАК Портфель,
			|   ПДК.ГО КАК GO,
			|   ПДК.ГО_ЦБ КАК GO_ЦБ
			|ИЗ
			|	РегистрСведений.ПозицииДенегКонтрактов КАК ПДК
			|ГДЕ
			|	ПДК.Портфель = &Портфель	
			|	И ПДК.Период = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
			|";
		
		v_query.Текст = sSQL;
		v_query.УстановитьПараметр( "Портфель" , элм.Портфель );
		v_query.УстановитьПараметр( "Период" , v_ПоследнийРабочийДеньОтчетногоПериода );
		
        v_result = v_query.Выполнить().Выгрузить(); 
		
		Если ЗначениеЗаполнено(v_result) тогда
			элм.ГарантийноеОбеспечение = v_result[0].GO + v_result[0].GO_ЦБ;
		КонецЕсли; 
		
		//Стоимость ПФИ = (Кол-во ПФИ * Цена закрытия * Стоимость шага цены)/шаг цены
		//Размер фактического обязательства = Котировка (курс валюты) * кол-во в лоте * кол-во ПФИ
		элм.стоимость 		= Окр( (элм.конОстаток * элм.ценаЗакрытия * элм.СтоимостьШагаЦены) / элм.ШагЦены, 2);
        элм.размерФО 		= Окр( элм.конОстаток * элм.итогКотировка * элм.Количество_вЛоте, 2);
		//размер фактического обязательства все-таки берем без минуса
		элм.размерФО 		= ?(элм.размерФО > 0, элм.размерФО, -элм.размерФО);
		
		
		Если элм.конОстаток > 0 тогда
			элм.направлениеСделки = "покупка"; 
		Иначе 
			элм.направлениеСделки = "продажа";
		КонецЕсли;
		
		Если элм.Инструмент.ВидЦБ = Справочники.ВидыТипыИнструментов.Фьючерс тогда 
			элм.типПФИ = "фьючерс";
		ИначеЕсли элм.Инструмент.ВидЦБ = Справочники.ВидыТипыИнструментов.Опцион тогда
			элм.типПФИ = "опцион";
		КонецЕсли;
		
		элм.идПФИ				= элм.Инструмент.Код;
		элм.ПФИ 				= элм.Инструмент.Расшифровка;
		элм.организаторТоргов 	= "Московская биржа"; 
				
	КонецЦикла;
	
	//Далее --
	//Суммируются стоимости всех ПФИ по одному внутри одного брокерского договора, затем определяется доля каждого ПФИ.
	//Гарантийное обеспечение по ПФИ = Доля ПФИ * Гарантийное обеспечение по БО-договору.
	тз_остаткиИобороты_ПФИ_свертка = тз_остаткиИобороты_ПФИ.Скопировать();
	тз_остаткиИобороты_ПФИ_свертка.Свернуть("АОО_договор_клиент","стоимость"); 
	
	v_доляПФИ = 0;
	Для каждого элм из тз_остаткиИобороты_ПФИ цикл
		мНайдСтроки = тз_остаткиИобороты_ПФИ_свертка.НайтиСтроки( Новый Структура("АОО_договор_клиент", элм.АОО_договор_клиент) );
		Если ЗначениеЗаполнено(мНайдСтроки) тогда
			v_доляПФИ 			= элм.стоимость / мНайдСтроки[0].стоимость;
			элм.размерГО 		= Окр(v_доляПФИ * элм.ГарантийноеОбеспечение, 2);
		КонецЕсли;
	КонецЦикла;
	
	
endProcedure
//-----------------------------------------------------------------------------	
procedure prc_переоценкаСтоимости_операции()
	var tbl_операции;
	var v_curRow;
	
	var v_ЦБ_котировка;
	
	
	tbl_операции=этаФорма.ЭлементыФормы.тз_операции.Значение;
	//tbl_операции.Колонки.Добавить( "переоценка_коммент" ,new описаниеТипов( "строка" ) ,"Переоценка.коммент" ,24 );
	tbl_операции.Колонки.Вставить( 1 ,"переоценка_значение" ,new описаниеТипов( "number" ) ,"Переоценка.значение" ,24 );
	tbl_операции.Колонки.Вставить( 1 ,"переоценка_коммент" ,new описаниеТипов( "строка" ) ,"Переоценка.коммент" ,24 );
	tbl_операции.Колонки.Вставить( 1 ,"вОтчет" ,new описаниеТипов( "boolean" ) ,"вОтчёт" ,8 );
	
	for each v_curRow in tbl_операции do
		v_curRow.вОтчет=false;
		
		if v_curRow.Деньги then
			//деньги
				//v_curRow.Ссылка.ДатаИсполнения 		{ или v_curRow.ДатаИсполнения }
				
				if not v_curRow.БезПоручения then
					if ((v_curRow.ВидОперации=справочники.ВидыОпераций.ВводАктивов)or(v_curRow.ВидОперации=справочники.ВидыОпераций.ВыводАктивов))
						and((v_curRow.ТипОперации=перечисления.ТипыОпераций.Зачисление)or(v_curRow.ТипОперации=перечисления.ТипыОпераций.Списание))
					then
						v_curRow.переоценка_коммент="нужнаПереоценка";
						v_curRow.вОтчет=true;
						
						//v_curRow.переоценка_значение=v_curRow.конОстаток*fnc_получить_курсВалюты( этотОбъект.rek_дата_завершения ,v_curRow.Инструмент );
						//v_curRow.переоценка_коммент	=v_curRow.переоценка_коммент+?( v_curRow.Инструмент=справочники.Валюты.Рубль ,"_руб" ,"_НЕРУБЛЬ" );
						if v_curRow.инструмент=справочники.Валюты.Рубль then
							v_curRow.переоценка_коммент	=v_curRow.переоценка_коммент
															+"^рубль{наДату:"+format( v_curRow.ссылка.ДатаИсполнения ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}";
							v_curRow.переоценка_значение=v_curRow.стоимость;
							//v_curRow.переоценка_значение=v_curRow.количество*fnc_получить_курсВалюты( v_curRow.ссылка.ДатаИсполнения ,справочники.Валюты.Доллар );
						else
							v_curRow.переоценка_коммент	=v_curRow.переоценка_коммент
															+"^НЕ_рубль{наДату:"+format( v_curRow.ссылка.ДатаИсполнения ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}";
							v_curRow.переоценка_значение=v_curRow.количество*fnc_получить_курсВалюты( v_curRow.ссылка.ДатаИсполнения ,v_curRow.Инструмент );
						endIf;
						
					endIf;
				endIf;
		else	
			//ценныеБумаги
				if v_curRow.БезПоручения then
					if ((v_curRow.ВидОперации=справочники.ВидыОпераций.ВводАктивов)or(v_curRow.ВидОперации=справочники.ВидыОпераций.ВыводАктивов))
						and((v_curRow.ТипОперации=перечисления.ТипыОпераций.Зачисление)or(v_curRow.ТипОперации=перечисления.ТипыОпераций.Списание))
					then
						v_curRow.переоценка_коммент="нужнаПереоценка";
						v_curRow.вОтчет=true;
						
						v_ЦБ_котировка=fnc_ЦБ_получить_котировки_умножитьНаКолво( v_curRow.Ссылка.ДатаИсполнения 
																	,v_curRow
																	,"операции"
																	,v_curRow.Портфель.Договор.ВидДоговора 
																	,v_curRow.Портфель.Клиент
																	,v_curRow.Инструмент
																	,v_curRow.количество
																);
						if v_ЦБ_котировка.success then
							v_curRow.переоценка_значение	=v_ЦБ_котировка.котировка;
							v_curRow.переоценка_коммент		=v_curRow.переоценка_коммент+"^"+v_ЦБ_котировка.msg;
						endIf;
						
					endIf;
				endIf;
		endIf;
	endDo;
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_переоценка_обязательства_обороты()
	

endProcedure
//-----------------------------------------------------------------------------
procedure prc_переоценка_обязательства_остатки()
	var v_curRow;
	var v_ЦБ_котировка;
	

	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Колонки.вставить( 1 ,"delta" ,new описаниеТипов( "number" ) ,"delta" ,16 );
	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Колонки.вставить( 1 ,"delta_переоценка" ,new описаниеТипов( "number" ) ,"delta_переоценка" ,16 );
	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение.Колонки.вставить( 1 ,"msg" ,new описаниеТипов( "string" ) ,"msg" ,24 );
	
	for each v_curRow in этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение do
		v_curRow.delta=v_curRow.количество_кЗачислению-v_curRow.количество_кСписанию;
		
		if типЗнч( v_curRow.инструмент )=тип( "СправочникСсылка.Валюты" ) then
			// деньги
				v_curRow.msg="_ДС";
				
				v_curRow.delta_переоценка	=v_curRow.delta*fnc_получить_курсВалюты( этотОбъект.rek_дата_завершения ,v_curRow.Инструмент );
				v_curRow.msg				=v_curRow.msg+?( v_curRow.Инструмент=справочники.Валюты.Рубль ,"_руб" ,"_НЕРУБЛЬ" );
				
		else
			// ценныеБумаги
				v_ЦБ_котировка=fnc_ЦБ_получить_котировки_умножитьНаКолво( этотОбъект.rek_дата_завершения 
																				,v_curRow
																				,"обязательства_остатки"
																				,v_curRow.договор.видДоговора 
																				,v_curRow.договор.клиент
																				,v_curRow.Инструмент
																				,v_curRow.delta
																			);
				if v_ЦБ_котировка.success then
					//v_curRow.delta_переоценка	=v_ЦБ_котировка.котировка *?( v_curRow.delta<0.0 ,-1.0 ,1.0 );
					v_curRow.delta_переоценка	=v_ЦБ_котировка.котировка;
					v_curRow.msg				=v_ЦБ_котировка.msg;
				endIf;
			
		endIf;
		
	endDo;
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_переоценкаСтоимости_обязательства()
	var tbl_обязательства;
	var v_curRow;
	
	
	//обязательства.обороты
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_обязательства;
		этаФорма.ЭлементыФормы.pnl_обязательства.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_обязательства.Страницы.pg_обязательства_обороты;
		
		prc_переоценка_обязательства_обороты();
		
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.СоздатьКолонки();
		//этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["Регистратор"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["ПоДокументу"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["СчетУчета"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["инструмент"]	.ЭлементУправления.КнопкаОткрытия=true;
		//этаФорма.ЭлементыФормы.тз_обязательства_обороты.Колонки["Договор"]		.ЭлементУправления.КнопкаОткрытия=true;
	
	//обязательства.остатки
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_обязательства;
		этаФорма.ЭлементыФормы.pnl_обязательства.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_обязательства.Страницы.pg_обязательства_остатки;
	
		prc_переоценка_обязательства_остатки();
		
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.СоздатьКолонки();
	//	этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["Регистратор"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["ПоДокументу"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["СчетУчета"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["договор"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["инструмент"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["видОперации"]	.ЭлементУправления.КнопкаОткрытия=true;
	//	//этаФорма.ЭлементыФормы.тз_обязательства_остатки.Колонки["Договор"]		.ЭлементУправления.КнопкаОткрытия=true;
	
	
	
endProcedure
//-----------------------------------------------------------------------------
function fnc_получить_курсВалюты( прм_дата ,a_Currency )
	var fncRes;
	var v_отбор;
	
	
	if a_Currency=справочники.Валюты.Рубль then
		fncRes=1.00;
	else
		fncRes=0.00;
		v_отбор=new структура;
			v_отбор.Вставить( "Валюта" ,a_Currency );
		
		v_курс=регистрыСведений.КурсыВалют.СрезПоследних( прм_дата ,v_отбор );
		//if v_курс<>1 then
		//	!!!!!!! Проверку
		fncRes=v_курс[0].курс;		// =v_курс[0].курсБиржи; надо использовать '=v_курс[0].курс;'
	endIf;
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
function fnc_получить_кодЦБ( прм_Инструмент )
	var fncRes;
	
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	
	fncRes=new структура;
		fncRes.Вставить( "success" ,false );
		fncRes.Вставить( "код" ,"" );
		
	sSQL="
			//| ВЫБРАТЬ первые 1
			| ВЫБРАТЬ 
			|	КодыЦенныхБумаг.Инструмент,
			|	КодыЦенныхБумаг.Нумератор,
			|	КодыЦенныхБумаг.Код,
			|	КодыЦенныхБумаг.Котировки,
			|	КодыЦенныхБумаг.КодСтар,
			|	КодыЦенныхБумаг.ДопКод
			| ИЗ
			|	РегистрСведений.КодыЦенныхБумаг КАК КодыЦенныхБумаг
			| where
			|		КодыЦенныхБумаг.Котировки
			|		and(КодыЦенныхБумаг.Нумератор=&биржа)
			|		and(КодыЦенныхБумаг.Инструмент=&ЦБ)
			|";
	
	
	v_query=new query;
	v_query.Текст=sSQL;
	//v_query.УстановитьПараметр( "датаНач" ,началоДня( этотОбъект.rek_дата_завершения - ((i_глубинаПрошлого-1)*24*3600) ) );
	//v_query.УстановитьПараметр( "датаФин" ,конецДня( этотОбъект.rek_дата_завершения ) );
	v_query.УстановитьПараметр( "ЦБ" ,прм_Инструмент );
	v_query.УстановитьПараметр( "биржа" ,справочники.Нумераторы.НайтиПоРеквизиту( "Нумератор" ,справочники.Биржи.ММВБ ) );
	
	v_result=v_query.Выполнить();
	v_выборка=v_result.Выбрать();
	
	//if v_выборка.Количество()>1 then
	//	//!!!!! Что-то случилось
	//endIf;
	
	while v_выборка.Следующий() do
		fncRes.success=true;
		fncRes.код=v_выборка.Код;
	endDo;

		
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
function fnc_получить_котировкиБиржи( прм_Инструмент ,прм_дата )
	var fncRes;
	var v_котировки_отбор;
	var v_котировки_биржи;
	var i_глубинаПрошлого;
	var s_ЦБ_код;
	
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	fncRes=new структура;
		fncRes.Вставить( "success"		,false );
		fncRes.Вставить( "рыночная3"	,1234567890123456.123456 );
		fncRes.Вставить( "Номинал"		,12345678901234567890.123456 );
		fncRes.Вставить( "НКД"			,1234567890123456.123456 );
		
	//s_ЦБ_код=прм_Инструмент.код;
	s_ЦБ_код=fnc_получить_кодЦБ( прм_Инструмент );
	if s_ЦБ_код.success then
	
		//v_котировки_отбор=new структура;
		//	v_котировки_отбор.Вставить( "биржа" ,справочники.Биржи.ММВБ );		// .ММВБ .ММВБСР .ММВБВР 
		//	v_котировки_отбор.Вставить( "ЦБ" ,прм_Инструмент.код );
		//v_котировки_биржи=регистрыСведений.ИтоговыеКотировки.ПолучитьПоследнее( прм_дата ,v_котировки_отбор );
		
		sSQL="
				| ВЫБРАТЬ первые 1
				|	ИтоговыеКотировки.Период
				|	,ИтоговыеКотировки.ЦБ
				|	,ИтоговыеКотировки.Биржа
				|	,ИтоговыеКотировки.КодВалюты
				|	,ИтоговыеКотировки.Номинал
				|	,ИтоговыеКотировки.Рыночная3
				|	,ИтоговыеКотировки.НКД
				| ИЗ
				|	РегистрСведений.ИтоговыеКотировки КАК ИтоговыеКотировки
				| where
				|		(ИтоговыеКотировки.Период>=&датаНач)and(ИтоговыеКотировки.Период<=&датаФин)
				|		and(ИтоговыеКотировки.Биржа=&биржа)
				|		and(ИтоговыеКотировки.ЦБ=&ЦБ)
				| order by
				|		ИтоговыеКотировки.Период desc
				|";
		
		
		v_query=new query;
		v_query.Текст=sSQL;
		i_глубинаПрошлого=90;	// интервал: 90 дней назад. текущаяДата принадлежит интервалу
		//v_query.УстановитьПараметр( "датаНач" ,началоДня( этотОбъект.rek_дата_завершения - ((i_глубинаПрошлого-1)*24*3600) ) );
		//v_query.УстановитьПараметр( "датаФин" ,конецДня( этотОбъект.rek_дата_завершения ) );
		v_query.УстановитьПараметр( "датаНач" ,началоДня( прм_дата - ((i_глубинаПрошлого-1)*24*3600) ) );
		v_query.УстановитьПараметр( "датаФин" ,конецДня( прм_дата ) );
		v_query.УстановитьПараметр( "ЦБ" ,s_ЦБ_код.код );
		v_query.УстановитьПараметр( "биржа" ,справочники.Биржи.ММВБ );
		
		v_result=v_query.Выполнить();
		v_выборка=v_result.Выбрать();
		
		if v_выборка.Количество()>1 then
			//!!!!! Что-то случилось
		endIf;
		
		while v_выборка.Следующий() do
			fncRes.success	=true;
			fncRes.рыночная3=v_выборка.Рыночная3;
			fncRes.Номинал	=v_выборка.Номинал;
			fncRes.НКД		=v_выборка.НКД;
		endDo;
	endIf;
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
function fnc_получить_котировкиВнебиржевые( прм_Инструмент ,прм_дата )
	var fncRes;
	var i_глубинаПрошлого;
	
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	fncRes=new структура;
		fncRes.Вставить( "success"	,false );
		fncRes.Вставить( "цена"		,123456789.123456 );
		fncRes.Вставить( "Валюта"	,справочники.Валюты.ПустаяСсылка() );
		
		
		sSQL="
				| ВЫБРАТЬ первые 1
				|	ВнебиржевыеКотировки.Период,
				|	ВнебиржевыеКотировки.Регистратор,
				|	ВнебиржевыеКотировки.НомерСтроки,
				|	ВнебиржевыеКотировки.Активность,
				|	ВнебиржевыеКотировки.ВидКотировки,
				|	ВнебиржевыеКотировки.Инструмент,
				|	ВнебиржевыеКотировки.Цена,
				|	ВнебиржевыеКотировки.НКД,
				|	ВнебиржевыеКотировки.Валюта,
				|	ВнебиржевыеКотировки.МоментВремени
				|ИЗ
				|	РегистрСведений.ВнебиржевыеКотировки КАК ВнебиржевыеКотировки
				| where
				|		(ВнебиржевыеКотировки.Период>=&датаНач)and(ВнебиржевыеКотировки.Период<=&датаФин)
				|		and(ВнебиржевыеКотировки.Инструмент=&ЦБ)
				| order by
				|		ВнебиржевыеКотировки.Период desc
				|";
		
		v_query=new query;
		v_query.Текст=sSQL;
		i_глубинаПрошлого=90;	// интервал: 90 дней назад. текущаяДата принадлежит интервалу
		v_query.УстановитьПараметр( "датаНач" ,началоДня( этотОбъект.rek_дата_завершения - ((i_глубинаПрошлого-1)*24*3600) ) );
		v_query.УстановитьПараметр( "датаФин" ,конецДня( этотОбъект.rek_дата_завершения ) );
		//v_query.УстановитьПараметр( "датаНач" ,началоДня( прм_дата - ((i_глубинаПрошлого-1)*24*3600) ) );
		//v_query.УстановитьПараметр( "датаФин" ,конецДня( прм_дата ) );
		v_query.УстановитьПараметр( "ЦБ" ,прм_Инструмент );
		v_query.УстановитьПараметр( "биржа" ,справочники.Биржи.ММВБ );
		
		v_result=v_query.Выполнить();
		v_выборка=v_result.Выбрать();
		
		if v_выборка.Количество()>1 then
			//!!!!! Что-то случилось
		endIf;
		
		while v_выборка.Следующий() do
			fncRes.success	=true;
			fncRes.цена		=v_выборка.Цена;
			fncRes.Валюта	=v_выборка.Валюта;
		endDo;
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
function fnc_получить_котировкиПартии( прм_дата ,прм_клиент ,прм_Инструмент )
	var fncRes;
	var sSQL;
	var v_query;
	var v_result;
	var v_выборка;
	
	
	fncRes=new структура;
		fncRes.Вставить( "success"	,false );
		fncRes.Вставить( "КоличествоОстаток"				,123456789.123456 );
		fncRes.Вставить( "СтоимостьПоПереоценкеОстаток"		,123456789.123456 );
	
    sSQL="
		| ВЫБРАТЬ
		//|	ПартииОстатки.Портфель
		|	ПартииОстатки.ИнвестиционныйСчет
		|	,ПартииОстатки.Инструмент
		//|	,ПартииОстатки.ДокументПартии,
		|	,ПартииОстатки.КоличествоОстаток
		|	,ПартииОстатки.СтоимостьОстаток
		|	,ПартииОстатки.СтоимостьПоПереоценкеОстаток
		//| into tbl_партии
		| ИЗ
		|	РегистрНакопления.Партии.Остатки(
		|									&прм_датаЗавершения
		//|									,( Инструмент = &Инструмент )
		//|										and( ИнвестиционныйСчет В(&МассивИнвестиционныйСчет) )
		//|									,( ИнвестиционныйСчет В(&МассивИнвестиционныйСчет) )
		|									,( ИнвестиционныйСчет.клиент=&клиент )and( Инструмент=&прм_инструмент )
		|									) КАК ПартииОстатки
		|
		|";
	
	v_query=new query;
	v_query.Текст=sSQL;
	v_query.МенеджерВременныхТаблиц = new МенеджерВременныхТаблиц;
	v_query.УстановитьПараметр( "прм_датаЗавершения"	,конецДня( прм_дата ) );
	v_query.УстановитьПараметр( "клиент"				,прм_клиент );
	v_query.УстановитьПараметр( "прм_инструмент"		,прм_Инструмент );
	
	v_result=v_query.Выполнить();
	v_выборка=v_result.Выбрать();
	
	while v_выборка.Следующий() do
		fncRes.success=true;
		fncRes.КоличествоОстаток			=v_выборка.КоличествоОстаток;
		fncRes.СтоимостьПоПереоценкеОстаток	=v_выборка.СтоимостьПоПереоценкеОстаток;
	endDo;
	
	//запрос = новый запрос;
	//запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	//запрос.Текст = "select tbl_партии.* from tbl_партии as tbl_партии";
	//v_выборка=запрос.Выполнить().Выбрать();
	
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
function fnc_получить_котировкиОблигации( прм_инструмент ,прм_дата )
	var fncRes;
	
	
	fncRes=new структура;
		fncRes.Вставить( "success"	,false );
		fncRes.Вставить( "значение"		,123456789.123456 );
	
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
procedure prc_ЦБ_получить_котировки_неНайденаВнебиржа( fncRes ,прм_дата ,прм_currRow ,a_whoIs="" ,прм_видДоговора ,прм_клиент ,прм_инструмент ,прм_количество )
		
		
	if a_whoIs="остаткиИобороты" then
		v_котировки_партии=fnc_получить_котировкиПартии( прм_дата ,прм_клиент ,прм_инструмент );
		if v_котировки_партии.success then
			fncRes.success=true;
			fncRes.котировка=v_котировки_партии.СтоимостьПоПереоценкеОстаток;
			fncRes.msg=fncRes.msg+"^котировкаПартии: "+fncRes.котировка;
			if v_котировки_партии.КоличествоОстаток<>прм_количество then
				fncRes.msg=fncRes.msg
							+"^!!! Кол-воПартии{"
										+format( v_котировки_партии.КоличествоОстаток ,"ЧН=; ЧГ=0" )+"} не равно остатку{"
										+format( прм_количество ,"ЧН=; ЧГ=0" )+"}. ";
			endIf;
			//fncRes.котировка=fncRes.котировка *прм_количество;		// !!! не надо умножать
		else
			fncRes.msg=fncRes.msg+"^неНайденаКотировкаПартий";
			
		endIf;
		
	elsIf a_whoIs="операции" then
		fncRes.success=true;
		fncRes.котировка=прм_currRow.ссылка.стоимость;
		fncRes.msg=fncRes.msg+"^стоимость";
		
	elsIf a_whoIs="обязательства_остатки" then
		if типЗнч( прм_currRow.поДокументу )=тип( "ДокументСсылка.Сделка" ) then
			fncRes.success=true;
			fncRes.котировка=прм_currRow.поДокументу.Цена *прм_количество;
			fncRes.msg=fncRes.msg+"^цена";
		else
			fncRes.msg=fncRes.msg+"^обязательства_остатки; !!! Тип '"+trimAll( типЗнч( прм_currRow.поДокументу ) )+"' не обслуживается алгоритмом.";
		endIf;
	endIf;
		
endProcedure
//-----------------------------------------------------------------------------
function fnc_ЦБ_получить_котировки_умножитьНаКолво( прм_дата ,прм_currRow ,a_whoIs="" ,прм_видДоговора ,прм_клиент ,прм_инструмент ,прм_количество)
	var fncRes;
	var v_котировки_облигации;
	var v_котировки_биржи;
	var v_котировки_внебиржевые;
	var v_котировки_партии;
	
	
	fncRes=new структура;
		fncRes.Вставить( "success" ,false );
		fncRes.Вставить( "котировка" ,123456789.123456 );
		fncRes.Вставить( "msg" ,"" ); 
		
		
	///15.05.2023 15:36 -- https://megaplan.lmsic.com/task/1023868/card
	///Свинина К. -- Еще есть новая информация по оценки цб ДУ. Оценка по партиям, как мы делали изначально, не годится. 
	///Оценку цб по ДУ надо сделать аналогично оценке по БО.	
	if прм_видДоговора=перечисления.ТипыПортфелей.Брокерский ИЛИ прм_видДоговора=перечисления.ТипыПортфелей.ДУ then
		
		Если прм_видДоговора=перечисления.ТипыПортфелей.Брокерский тогда
			fncRes.msg="ЦБ_брок{наДату:"+format( прм_дата ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}"; 
		Иначе 
			fncRes.msg="ЦБ_ДУ{наДату:"+format( прм_дата ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}";
		КонецЕсли;
				
		v_котировки_биржи = fnc_получить_котировкиБиржи( прм_инструмент ,прм_дата );
		if v_котировки_биржи.success then
			
			fncRes.success=true;
			if типЗнч( прм_инструмент )=тип( "СправочникСсылка.Облигации" ) then
				
				// !!! v_котировки_облигации=fnc_получить_котировкиОблигации( прм_инструмент ,прм_дата );
				
				fncRes.котировка=(v_котировки_биржи.Рыночная3 / 100.0)*v_котировки_биржи.Номинал+v_котировки_биржи.НКД;
				fncRes.msg=fncRes.msg+"^(Рыночная3/100)*Номинал+НКД: "+fncRes.котировка;
				fncRes.котировка=fncRes.котировка *прм_количество;
			else
				fncRes.котировка=v_котировки_биржи.Рыночная3;
				fncRes.msg=fncRes.msg+"^рыночная3: "+fncRes.котировка;
				fncRes.котировка=fncRes.котировка *прм_количество;
			endIf;
			
		else
			fncRes.msg=fncRes.msg+"^неНайденаКотировкаБиржи";
			
			v_котировки_внебиржевые=fnc_получить_котировкиВнебиржевые( прм_инструмент ,прм_дата );
			if v_котировки_внебиржевые.success then
				fncRes.success=true;
				fncRes.котировка=v_котировки_внебиржевые.цена;
				fncRes.msg=fncRes.msg+"^ВНЕбиржеваяКотировка: "+fncRes.котировка;
				fncRes.котировка=v_котировки_внебиржевые.цена *прм_количество;
			else
				fncRes.msg=fncRes.msg+"^неНайденаВНЕбиржеваяКотировка";
				
				prc_ЦБ_получить_котировки_неНайденаВнебиржа( fncRes ,прм_дата ,прм_currRow ,a_whoIs ,прм_видДоговора ,прм_клиент ,прм_инструмент ,прм_количество);
				 
			endIf;
		endIf;
		
	else
		fncRes.msg="ЦБ_XZ{наДату:"+format( прм_дата ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}";
	endIf;
	
    /// Оценка ДУ по партиям (до изменений выше -- 15.05.2023 15:36) 
		//////if прм_видДоговора=перечисления.ТипыПортфелей.Брокерский then
		//////		
		//////	fncRes.msg="ЦБ_брок{наДату:"+format( прм_дата ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}";
		//////			
		//////	v_котировки_биржи=fnc_получить_котировкиБиржи( прм_инструмент ,прм_дата );
		//////	if v_котировки_биржи.success then
		//////		
		//////		fncRes.success=true;
		//////		if типЗнч( прм_инструмент )=тип( "СправочникСсылка.Облигации" ) then
		//////			
		//////			// !!! v_котировки_облигации=fnc_получить_котировкиОблигации( прм_инструмент ,прм_дата );
		//////			
		//////			fncRes.котировка=(v_котировки_биржи.Рыночная3 / 100.0)*v_котировки_биржи.Номинал+v_котировки_биржи.НКД;
		//////			fncRes.msg=fncRes.msg+"^(Рыночная3/100)*Номинал+НКД: "+fncRes.котировка;
		//////			fncRes.котировка=fncRes.котировка *прм_количество;
		//////		else
		//////			fncRes.котировка=v_котировки_биржи.Рыночная3;
		//////			fncRes.msg=fncRes.msg+"^рыночная3: "+fncRes.котировка;
		//////			fncRes.котировка=fncRes.котировка *прм_количество;
		//////		endIf;
		//////		
		//////	else
		//////		fncRes.msg=fncRes.msg+"^неНайденаКотировкаБиржи";
		//////		
		//////		v_котировки_внебиржевые=fnc_получить_котировкиВнебиржевые( прм_инструмент ,прм_дата );
		//////		if v_котировки_внебиржевые.success then
		//////			fncRes.success=true;
		//////			fncRes.котировка=v_котировки_внебиржевые.цена;
		//////			fncRes.msg=fncRes.msg+"^ВНЕбиржеваяКотировка: "+fncRes.котировка;
		//////			fncRes.котировка=v_котировки_внебиржевые.цена *прм_количество;
		//////		else
		//////			fncRes.msg=fncRes.msg+"^неНайденаВНЕбиржеваяКотировка";
		//////			
		//////			prc_ЦБ_получить_котировки_неНайденаВнебиржа( fncRes ,прм_дата ,прм_currRow ,a_whoIs ,прм_видДоговора ,прм_клиент ,прм_инструмент ,прм_количество);
		//////			 
		//////		endIf;
		//////	endIf;
		//////elsIf прм_видДоговора=перечисления.ТипыПортфелей.ДУ then
		//////	fncRes.msg="ЦБ_ДУ{наДату:"+format( прм_дата ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}";
		//////	
		//////	prc_ЦБ_получить_котировки_неНайденаВнебиржа( fncRes ,прм_дата ,прм_currRow ,a_whoIs ,прм_видДоговора ,прм_клиент ,прм_инструмент ,прм_количество);
		//////	
		//////else
		//////	fncRes.msg="ЦБ_XZ{наДату:"+format( прм_дата ,"ДФ='yyyy-MM-dd HH:mm:ss'" )+"}";
		//////endIf;

	return fncRes; 
	
endFunction
//-----------------------------------------------------------------------------
function ПолучитьПоследнийРабочийДеньКонцаПериода(ДатаРасчета) 
	
	Перем Сч, НомМесяца;
	
	НомМесяца = Месяц(ДатаРасчета); // для проверки на один и тотже месяц при понижении даты
	
	ДатаРасчета = КонецДня(ДатаРасчета);
	Если НЕ Календарь.ЭтоРабочийДень(ДатаРасчета) Тогда
		
		Сч = 0;
		Пока НЕ Календарь.ЭтоРабочийДень(ДатаРасчета) Цикл
			Сч = Сч + 1;
			ДатаРасчета = ДатаРасчета - ДеньВСекундах();
			Если Сч > 30 ИЛИ Месяц(ДатаРасчета) <> НомМесяца Тогда
				Возврат Неопределено;
			КонецЕсли; 
		КонецЦикла;
		
	КонецЕсли;
	
	return НачалоДня(ДатаРасчета);
	
endFunction
//-----------------------------------------------------------------------------
procedure prc_переоценкаСтоимости_остаткиИобороты()
	var tbl_остаткиИобороты;
	var v_curRow;
	
	var v_ЦБ_котировка;
	var v_котировки_биржи;
	var v_котировки_внебиржевые;
	var v_котировки_партии;
	
	
	tbl_остаткиИобороты=этаФорма.ЭлементыФормы.тз_остаткиИобороты.Значение;
	//tbl_остаткиИобороты.Колонки.Добавить( "переоценка_коммент" ,new описаниеТипов( "строка" ) ,"Переоценка.коммент" ,24 );
	tbl_остаткиИобороты.Колонки.Вставить( 1 ,"переоценка_значение" ,new описаниеТипов( "number" ) ,"Переоценка.значение" ,24 );
	tbl_остаткиИобороты.Колонки.Вставить( 1 ,"переоценка_коммент" ,new описаниеТипов( "строка" ) ,"Переоценка.коммент" ,24 );
	
	for each v_curRow in tbl_остаткиИобороты do
		if типЗнч( v_curRow.Инструмент )=тип("СправочникСсылка.валюты") then
			// деньги
				v_curRow.переоценка_коммент="_ДС";
				
				v_curRow.переоценка_значение=v_curRow.конОстаток*fnc_получить_курсВалюты( этотОбъект.rek_дата_завершения ,v_curRow.Инструмент );
				v_curRow.переоценка_коммент	=v_curRow.переоценка_коммент+?( v_curRow.Инструмент=справочники.Валюты.Рубль ,"_руб" ,"_НЕРУБЛЬ" );

		else
			// ценныеБумаги
				v_ЦБ_котировка=fnc_ЦБ_получить_котировки_умножитьНаКолво( этотОбъект.rek_дата_завершения 
																				,v_curRow
																				,"остаткиИобороты"
																				,v_curRow.АОО_договор_видДоговора 
																				,v_curRow.АОО_договор_клиент
																				,v_curRow.Инструмент
																				,v_curRow.конОстаток
																			);
				if v_ЦБ_котировка.success then
					v_curRow.переоценка_значение	=v_ЦБ_котировка.котировка;
					v_curRow.переоценка_коммент		=v_ЦБ_котировка.msg;
				endIf;
		endIf;
		
	endDo;
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_очистить_таблицыЗначений()
	
	тзКраткиеСведения_раздел_10.Очистить(); 
	
	этотОбъект.tbl_клиентскиеДоговоры	.Очистить();
	
	этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры	.Значение.Очистить();
	этаФорма.ЭлементыФормы.тз_операции				.Значение.Очистить();
	этаФорма.ЭлементыФормы.тз_остаткиИобороты		.Значение.Очистить();
	этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ	.Значение.Очистить();


	этаФорма.ЭлементыФормы.тз_обязательства_обороты		.Значение.Очистить();
	этаФорма.ЭлементыФормы.тз_обязательства_остатки		.Значение.Очистить();
	
	этаФорма.ЭлементыФормы.тз_dbg_test		.Значение.Очистить();
	
	этаФорма.ЭлементыФормы.тз_итоги_1__1_2	.Значение.Очистить();
	этаФорма.ЭлементыФормы.тз_итоги_1__1_3	.Значение.Очистить();
	этаФорма.ЭлементыФормы.тз_итоги_1__1_3_группировка		.Значение.Очистить();
	
	этаФорма.ЭлементыФормы.тз_итоги_7		.Значение.Очистить();
	
endProcedure


//******************** получение и сопоставление данных **********************
procedure prc_заполнитьДанные()
	
	
	//получить клиентскиеДоговоры
		if 1=1 then
			этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_клиентскиеДоговоры;
			prc_получить_клиентскиеДоговоры();
			
			этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.СоздатьКолонки();
			этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Колонки["Ссылка"]	.ЭлементУправления.КнопкаОткрытия=true;
			этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Колонки["лицо"]	.ЭлементУправления.КнопкаОткрытия=true;
			этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Колонки["клиент"]	.ЭлементУправления.КнопкаОткрытия=true;
		endIf;
	
	
	if not этаФорма.ЭлементыФормы.chkBx_пропустить_операции.Значение then
		prc_writeMsg( "операции.start: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_операции;
		
		status( "Заполнение операций" );
		prc_получить_операции();
		
		status( "Переоценка операций" );
		prc_переоценкаСтоимости_операции();
		
		
		этаФорма.ЭлементыФормы.тз_операции.СоздатьКолонки();
		этаФорма.ЭлементыФормы.тз_операции.Колонки["ссылка"]		.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_операции.Колонки["собственник"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_операции.Колонки["портфель"]		.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_операции.Колонки["инструмент"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_операции.Колонки["Обязательство"]	.ЭлементУправления.КнопкаОткрытия=true;
	
		
		prc_writeMsg( "операции.finish: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
	endIf;

	
	if not этаФорма.ЭлементыФормы.chkBx_пропустить_обязательства.Значение then
		prc_writeMsg( "обязательства.start: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
		
		status( "Заполнение обязательств" );
		prc_получить_обязательства();
		
		status( "Переоценка обязательств" );
		prc_переоценкаСтоимости_обязательства();
		
		prc_writeMsg( "обязательства.start: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
	endIf;
	
	if not этаФорма.ЭлементыФормы.chkBx_пропустить_остаткиИобороты.Значение then
		prc_writeMsg( "остаткиИобороты.start: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_остаткиИобороты;
		
		status( "Заполнение остаткиИобороты" );
		prc_получить_остаткиИобороты();	
		prc_получить_остаткиИобороты_ПФИ();//для раздела 6 -- ПФИ
		
		status( "Переоценка остаткиИобороты" );
		prc_переоценкаСтоимости_остаткиИобороты();
		
		
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.СоздатьКолонки();
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Колонки["АОО_договор"]				.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Колонки["АОО_договор_клиент"]			.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Колонки["инструмент"]					.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_остаткиИобороты.Колонки["АОО_СчетХранения_Банк_лицо"]	.ЭлементУправления.КнопкаОткрытия=true; 
		
		этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.СоздатьКолонки();
		этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Колонки["АОО_договор"]				.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Колонки["АОО_договор_клиент"]			.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Колонки["инструмент"]					.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_остаткиИобороты_ПФИ.Колонки["АОО_СчетХранения_Банк_лицо"]	.ЭлементУправления.КнопкаОткрытия=true;	
		
		prc_writeMsg( "остаткиИобороты.finish: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
	endIf;
	
	
endProcedure
//-----------------------------------------------------------------------------
procedure prc_join_договоры_операции( tab_клДоговоры ,tab_операции ,tab_клДоговоры_операции )
	var sSQL;
	var v_query;
	var v_result;
	var запрос;
	
	
	sSQL="
			| select
			|		тз_договоры.*
			| into tbl_договоры_
			| from
			|	&тз_договоры as тз_договоры
			|;
			| select
			|		тз_операции.*
			| into tbl_операции_
			| from
			|	&тз_операции as тз_операции
			|;
			| select
			|		tbl_договоры_.ссылка as tbl_договоры__ссылка
			|		,tbl_операции_.Портфель.Договор as tbl_операции__Портфель_Договор
			|		,tbl_операции_.портфель_Договор as tbl_операции__портфель_Договор_прямо
			|		,isNull( tbl_операции_.вОтчет ,false ) as в_Отчет
			|		,tbl_договоры_.*
			|		,tbl_операции_.*
			| into tbl_договоры_операции
			| from tbl_договоры_ left join tbl_операции_
			//|		on tbl_договоры_.ссылка=tbl_операции_.Портфель.Договор
			|		on tbl_договоры_.ссылка=tbl_операции_.портфель_Договор
			|
			|";
	
	v_query=new( "query" );
	v_query.Текст=sSQL;
	v_query.МенеджерВременныхТаблиц=new МенеджерВременныхТаблиц;
	v_query.УстановитьПараметр( "тз_договоры" ,tab_клДоговоры );
	v_query.УстановитьПараметр( "тз_операции" ,tab_операции );
	
	v_result=v_query.Выполнить();
	
	запрос = новый запрос;
	запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	запрос.Текст = "
					| select
					//|		tbl_договоры_операции.*
					|		tbl_договоры_операции.tbl_договоры__ссылка
					|		,tbl_договоры_операции.tbl_операции__Портфель_Договор
					|		,tbl_договоры_операции.tbl_операции__портфель_Договор_прямо
					|		,case
					|			when tbl_договоры_операции.tbl_договоры__ссылка=tbl_договоры_операции.tbl_операции__Портфель_Договор
					|			then ""договор=операцияДоговор""
					|			else ""!!! договор <> операцияДоговор""
					|		end as сравнение_договор_операцияДоговор
					|		,tbl_договоры_операции.в_Отчет
					|
					|		,tbl_договоры_операции.налоговыйРезидентРФ
					|		,tbl_договоры_операции.кодРегионаСтраны3533
					|		,tbl_договоры_операции.физЮр_лицо
					|		,tbl_договоры_операции.использованиеБрокеромДСклиента
					|
					|		,tbl_договоры_операции.ссылка as договор
					|		,tbl_договоры_операции.видДоговора
					|		,tbl_договоры_операции.видДоговораДУ
					|		,tbl_договоры_операции.квалифицированныйИнвестор
					|		,tbl_договоры_операции.датаДоговора
					|		,tbl_договоры_операции.датаРасторжения
					|		,tbl_договоры_операции.открЗакрДейств
					|		,isNull( tbl_договоры_операции.cnt_сделка ,0 ) as cnt_сделка
					|		,tbl_договоры_операции.ссылка1 as операция
					|		,tbl_договоры_операции.вОтчет
					|		,tbl_договоры_операции.переоценка_коммент
					|		,tbl_договоры_операции.переоценка_значение
					|		,tbl_договоры_операции.видОперации
					|		,tbl_договоры_операции.типОперации
					|		,tbl_договоры_операции.безПоручения
					|		,tbl_договоры_операции.инструмент
					|		,tbl_договоры_операции.количество
					|		,tbl_договоры_операции.стоимость
					|		,tbl_договоры_операции.валютаСтоимости
					|		,tbl_договоры_операции.обязательство
					|		,tbl_договоры_операции.деньги
					|		,tbl_договоры_операции.ЦБ
					//|		,tbl_договоры_операции.цена
					| from tbl_договоры_операции as tbl_договоры_операции
					|";
	
	tab_клДоговоры_операции=запрос.Выполнить().Выгрузить();
	
	if 1=2 then
		этаФорма.ЭлементыФормы.тз_dbg_test.Значение.Очистить();
		этаФорма.ЭлементыФормы.тз_dbg_test.Значение=tab_клДоговоры_операции.Скопировать();
		этаФорма.ЭлементыФормы.тз_dbg_test.Значение.Сортировать( "договор, операция" );
		этаФорма.ЭлементыФормы.тз_dbg_test.СоздатьКолонки();
	endIf;
endProcedure
//-----------------------------------------------------------------------------
procedure prc_join_остатки( tab_остаткиИобороты, tab_обязательства_остатки, tab_остатки, tab_Договоры )
	var sSQL;
	var v_query;
	var v_result;
	var запрос;
	
	var v_currRow;
	
	
	sSQL="
			| select
			|		""остаткиИобороты"" as flag
			|		,тз_остаткиИобороты.АОО_договор as договор
			|		,тз_остаткиИобороты.переоценка_значение as остаток
			//|		,isNull(тз_остаткиИобороты.АОО_договор.Клиент ,""NULL"") as клиент
			//|		,тз_остаткиИобороты.АОО_договор.клиент.лицо as лицо
			| into tbl_остаткиИобороты_
			| from
			|	&тз_остаткиИобороты as тз_остаткиИобороты
			|;
			|
			| select
			|		""обязательства_остатки"" as flag
			|		,тз_обязательства_остатки.договор as договор
			|		,тз_обязательства_остатки.delta_переоценка as остаток
			//|		,isNull( тз_обязательства_остатки.договор.Клиент ,""NULL"" ) as клиент
			//|		,тз_обязательства_остатки.договор.клиент.лицо as лицо
			| into tbl_обязательства_остатки_
			| from
			|	&тз_обязательства_остатки as тз_обязательства_остатки
			|;
			|
			| select
			|		tbl_остаткиИобороты_.*
			| into tbl_остатки
			| from tbl_остаткиИобороты_
			|
			| UNION ALL 
			|
			| select
			|		tbl_обязательства_остатки_.*
			| from tbl_обязательства_остатки_ 
			|;
			|";
	
	v_query=new( "query" );
	v_query.Текст=sSQL;
	v_query.МенеджерВременныхТаблиц=new МенеджерВременныхТаблиц;
	v_query.УстановитьПараметр( "тз_остаткиИобороты"		,tab_остаткиИобороты );
	v_query.УстановитьПараметр( "тз_обязательства_остатки"	,tab_обязательства_остатки );
	
	v_result=v_query.Выполнить();
	
	запрос = новый запрос;
	запрос.МенеджерВременныхТаблиц = v_query.МенеджерВременныхТаблиц;
	запрос.Текст = "
					| select                             
					|		tbl_остатки.*
					| from tbl_остатки
					|";
	
	tab_остатки=запрос.Выполнить().Выгрузить();
	
	
	//было придумано с Димой, когда не верно работал UNION в тексте запроса sSQL; UNION ALL выдает правильные данные
		////tab_остатки = Новый ТаблицаЗначений;
		////tab_остатки.Колонки.Добавить("flag", Новый ОписаниеТипов("Строка"), "flag" ); 
		////tab_остатки.Колонки.Добавить("договор", Новый ОписаниеТипов("СправочникСсылка.КлиентскиеДоговора"), "договор" );
		////tab_остатки.Колонки.Добавить("остаток", Новый ОписаниеТипов("Число"), "остаток" );
		////for each elm in tab_остаткиИобороты do
		////	new_elm = tab_остатки.Добавить();
		////		new_elm.flag = "остаткиИобороты"; 
		////		new_elm.договор = elm.АОО_договор;
		////		new_elm.остаток = elm.переоценка_значение;
		////endDo;     
		////for each elm in tab_обязательства_остатки do
		////	new_elm = tab_остатки.Добавить();
		////		new_elm.flag = "обязательства_остатки"; 
		////		new_elm.договор = elm.договор;
		////		new_elm.остаток = elm.delta_переоценка;
		////endDo;
	

	if 1=2 then
		этаФорма.ЭлементыФормы.тз_dbg_test.Значение.Очистить();
		этаФорма.ЭлементыФормы.тз_dbg_test.Значение=tab_остатки.Скопировать();
		//этаФорма.ЭлементыФормы.тз_dbg_test.Значение.Сортировать( "договор ,операция" );
		этаФорма.ЭлементыФормы.тз_dbg_test.СоздатьКолонки();
	endIf;
	
	tab_остатки.Колонки.Добавить( "видДоговора" ,new описаниеТипов("ПеречислениеСсылка.ТипыПортфелей" ) ,"видДоговора" ,12 );
	tab_остатки.Колонки.Добавить( "клиент" ,new описаниеТипов("СправочникСсылка.КлиентыДУ, СправочникСсылка.КлиентыБрокера" ) ,"клиент" ,20 );
	tab_остатки.Колонки.Добавить( "лицо" ,new описаниеТипов("СправочникСсылка.ФизическиеЛица, СправочникСсылка.Организации" ) ,"лицо" ,20 );
	
	tab_остатки.Колонки.Добавить( "НалоговыйРезидентРФ" ,new описаниеТипов("boolean" ) ,"НалоговыйРезидентРФ" ,8 );
	tab_остатки.Колонки.Добавить( "КвалифицированныйИнвестор" ,new описаниеТипов("boolean" ) ,"КвалифицированныйИнвестор" ,8 );
	tab_остатки.Колонки.Добавить( "КодРегионаСтраны3533" ,new описаниеТипов("string" ) ,"КодРегионаСтраны3533" ,20 );
	
	tab_остатки.Колонки.Добавить( "физЮр_лицо" ,new описаниеТипов("string" ) ,"физЮр_лицо" ,20 );
	tab_остатки.Колонки.Добавить( "cnt_сделка" ,new описаниеТипов("number" ) ,"cnt_сделка" ,20 );
	
		
	for each v_currRow in tab_остатки do
		v_currRow.видДоговора	=v_currRow.договор.видДоговора;
		v_currRow.клиент		=v_currRow.договор.клиент;
		v_currRow.лицо			=v_currRow.договор.клиент.лицо;
		
			v_отбор=new структура;
			v_отбор.Вставить( "Ссылка" ,v_currRow.договор );
			
			ar_клДоговоры_отбор = этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.НайтиСтроки( v_отбор );
			
			if ar_клДоговоры_отбор.Количество() > 0 then
				
				//v_currRow.видДоговора				=ar_клДоговоры_отбор[0].видДоговора;
				v_currRow.НалоговыйРезидентРФ		=ar_клДоговоры_отбор[0].НалоговыйРезидентРФ;
				v_currRow.КвалифицированныйИнвестор	=ar_клДоговоры_отбор[0].КвалифицированныйИнвестор;
				v_currRow.КодРегионаСтраны3533		=ar_клДоговоры_отбор[0].КодРегионаСтраны3533;
				
				v_currRow.физЮр_лицо	=ar_клДоговоры_отбор[0].физЮр_лицо;
				v_currRow.cnt_сделка	=ar_клДоговоры_отбор[0].cnt_сделка;
				
				
			endIf;
			// !!! if ar_клДоговоры_отбор.Количество()>1 then		нечто странное		сделать предупреждение
			
	endDo; 
		 
	
	struct_tab_остатки = Новый Структура; 
	Для каждого элм из tab_остатки Цикл
		Для каждого Колонка Из tab_остатки.Колонки Цикл
		    struct_tab_остатки.Вставить( НРег(Колонка.Имя) );
		КонецЦикла;
	КонецЦикла; 
	struct_тз_клиентскиеДоговоры = Новый Структура;
	Для каждого элм из tab_Договоры Цикл
		Для каждого Колонка Из tab_Договоры.Колонки Цикл
		    struct_тз_клиентскиеДоговоры.Вставить( НРег(Колонка.Имя) );
		КонецЦикла;
	КонецЦикла;
	
	struct_ОтборОдинаковыхКолонок = Новый Структура; 
	struct_ОтборРазличныхКолонок = Новый Структура;
	Для каждого элм из struct_tab_остатки цикл 
		Если struct_тз_клиентскиеДоговоры.Свойство(элм.Ключ) тогда 
			struct_ОтборОдинаковыхКолонок.Вставить(элм.Ключ);
		КонецЕсли;
	КонецЦикла;  
	Для каждого элм из struct_тз_клиентскиеДоговоры цикл 
		Если Не struct_tab_остатки.Свойство(элм.Ключ) тогда 
			struct_ОтборРазличныхКолонок.Вставить(элм.Ключ);
		КонецЕсли;
	КонецЦикла;
				
	prc_ОбъединитьТаблицыЗначений(tab_остатки, tab_Договоры, 
							  		struct_ОтборОдинаковыхКолонок, struct_ОтборРазличныхКолонок, true);	
	
endProcedure
//-----------------------------------------------------------------------------


//******************** обработка полученных данных ***************************
function fnc_собратьДанные_раздел_1_подраздел_1()
	
	var fncRes;
	var тз__раздел_1_1;

	fncRes=new таблицаЗначений;
	
	тз__Данные_раздел_1_2 = fnc_собратьДанные_раздел_1_подраздел_1_2();
	тз__Данные_раздел_2 = fnc_собратьДанные_раздел_2();
	тз__Данные_раздел_4 = fnc_собратьДанные_раздел_4();
    тз__Данные_раздел_7 = fnc_собратьДанные_раздел_7();
	
	тз__раздел_1_1 = тз__Данные_раздел_1_2.Скопировать();
	
	//нужны только ДУ договоры
	индекс = тз__раздел_1_1.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  Если тз__раздел_1_1[индекс].договор.ВидДоговора <> Перечисления.ТипыПортфелей.ДУ тогда
		  тз__раздел_1_1.Удалить(индекс);
	  КонецЕсли;
	  индекс = индекс - 1;
	КонецЦикла;
	
	//удаляем дубликаты
	индекс = тз__раздел_1_1.Количество() - 1; 
	индекс_нач = индекс;
	Пока индекс >= 0 Цикл
		Если индекс <> индекс_нач тогда
			договор_prev = тз__раздел_1_1[индекс + 1].договор;
			Если тз__раздел_1_1[индекс].договор = договор_prev тогда
				тз__раздел_1_1.Удалить(индекс);
			КонецЕсли;	
		КонецЕсли; 
	  	индекс = индекс - 1;
	КонецЦикла;	
	
	тз__раздел_1_1.Колонки.Добавить( "НаименованиеСтратегии" );
	тз__раздел_1_1.Колонки.Добавить( "КолвоДней" );
	
	v_Дата = rek_дата_завершения;
	// Сначала вычисляется последний день в году (напр. 31.12.2014)
	// Затем вычисляет номер дня в году
	v_ДнейВГоду = ДеньГода(КонецГода(v_Дата));
	
	Для каждого элм из тз__раздел_1_1 цикл
		
		элм.КолвоДней = v_ДнейВГоду;
		элм.НаименованиеСтратегии = "Индивидуальная стратегия по договору " +
									 элм.договор.Код + " от " + 
									 Формат(элм.договор.ДатаДоговора, "ДФ=dd.MM.yyyy");
		
	КонецЦикла;
	
	fncRes = тз__раздел_1_1;
		
	return fncRes;
	
endFunction
//-----------------------------------------------------------------------------
function fnc_собратьДанные_раздел_1_подраздел_1_2()
	var fncRes;
	var tab_клДоговоры;
	var tab_операции;
	var tab_клДоговоры_операции;
	
	var v_договор_prev;
	var v_currRow;
	var i;
	var i_lim;

	
	fncRes=new таблицаЗначений;
	tab_клДоговоры_операции=new таблицаЗначений;
		
	tab_клДоговоры	=этаФорма.тз_клиентскиеДоговоры	.Скопировать();
	tab_операции	=этаФорма.тз_операции			.Скопировать();
	
	prc_join_договоры_операции( tab_клДоговоры ,tab_операции ,tab_клДоговоры_операции );
	
	//поля для операций
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ф_А_неК"	,new описаниеТипов("number") ,"п_ДС_ф_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ф_А_К"		,new описаниеТипов("number") ,"п_ДС_ф_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ф_неА_неК"	,new описаниеТипов("number") ,"п_ДС_ф_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ф_неА_К"	,new описаниеТипов("number") ,"п_ДС_ф_неА_К" ,16 );
		
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ю_А_неК"	,new описаниеТипов("number") ,"п_ДС_ю_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ю_А_К"		,new описаниеТипов("number") ,"п_ДС_ю_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ю_неА_неК"	,new описаниеТипов("number") ,"п_ДС_ю_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ДС_ю_неА_К"	,new описаниеТипов("number") ,"п_ДС_ю_неА_К" ,16 );
		
		
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ф_А_неК"	,new описаниеТипов("number") ,"п_ЦБ_ф_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ф_А_К"		,new описаниеТипов("number") ,"п_ЦБ_ф_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ф_неА_неК"	,new описаниеТипов("number") ,"п_ЦБ_ф_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ф_неА_К"	,new описаниеТипов("number") ,"п_ЦБ_ф_неА_К" ,16 );
		
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ю_А_неК"	,new описаниеТипов("number") ,"п_ЦБ_ю_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ю_А_К"		,new описаниеТипов("number") ,"п_ЦБ_ю_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ю_неА_неК"	,new описаниеТипов("number") ,"п_ЦБ_ю_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "п_ЦБ_ю_неА_К"	,new описаниеТипов("number") ,"п_ЦБ_ю_неА_К" ,16 );
		
		
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ф_А_неК"	,new описаниеТипов("number") ,"и_ДС_ф_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ф_А_К"		,new описаниеТипов("number") ,"и_ДС_ф_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ф_неА_неК"	,new описаниеТипов("number") ,"и_ДС_ф_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ф_неА_К"	,new описаниеТипов("number") ,"и_ДС_ф_неА_К" ,16 );
		
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ю_А_неК"	,new описаниеТипов("number") ,"и_ДС_ю_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ю_А_К"		,new описаниеТипов("number") ,"и_ДС_ю_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ю_неА_неК"	,new описаниеТипов("number") ,"и_ДС_ю_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ДС_ю_неА_К"	,new описаниеТипов("number") ,"и_ДС_ю_неА_К" ,16 );
		
		
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ф_А_неК"	,new описаниеТипов("number") ,"и_ЦБ_ф_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ф_А_К"		,new описаниеТипов("number") ,"и_ЦБ_ф_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ф_неА_неК"	,new описаниеТипов("number") ,"и_ЦБ_ф_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ф_неА_К"	,new описаниеТипов("number") ,"и_ЦБ_ф_неА_К" ,16 );
		
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ю_А_неК"	,new описаниеТипов("number") ,"и_ЦБ_ю_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ю_А_К"		,new описаниеТипов("number") ,"и_ЦБ_ю_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ю_неА_неК"	,new описаниеТипов("number") ,"и_ЦБ_ю_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "и_ЦБ_ю_неА_К"	,new описаниеТипов("number") ,"и_ЦБ_ю_неА_К" ,16 );
	
	
	
	//поля для договоров
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ф_А_неК"		,new описаниеТипов("number") ,"дЗ_ф_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ф_А_К"		,new описаниеТипов("number") ,"дЗ_ф_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ф_неА_неК"	,new описаниеТипов("number") ,"дЗ_ф_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ф_неА_К"		,new описаниеТипов("number") ,"дЗ_ф_неА_К" ,16 );
		
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ю_А_неК"		,new описаниеТипов("number") ,"дЗ_ю_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ю_А_К"		,new описаниеТипов("number") ,"дЗ_ю_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ю_неА_неК"	,new описаниеТипов("number") ,"дЗ_ю_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дЗ_ю_неА_К"		,new описаниеТипов("number") ,"дЗ_ю_неА_К" ,16 );
		
		
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ф_А_неК"		,new описаниеТипов("number") ,"дП_ф_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ф_А_К"		,new описаниеТипов("number") ,"дП_ф_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ф_неА_неК"	,new описаниеТипов("number") ,"дП_ф_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ф_неА_К"		,new описаниеТипов("number") ,"дП_ф_неА_К" ,16 );
		
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ю_А_неК"		,new описаниеТипов("number") ,"дП_ю_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ю_А_К"		,new описаниеТипов("number") ,"дП_ю_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ю_неА_неК"	,new описаниеТипов("number") ,"дП_ю_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дП_ю_неА_К"		,new описаниеТипов("number") ,"дП_ю_неА_К" ,16 );
		
		
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ф_А_неК"		,new описаниеТипов("number") ,"дД_ф_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ф_А_К"		,new описаниеТипов("number") ,"дД_ф_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ф_неА_неК"	,new описаниеТипов("number") ,"дД_ф_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ф_неА_К"		,new описаниеТипов("number") ,"дД_ф_неА_К" ,16 );
		
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ю_А_неК"		,new описаниеТипов("number") ,"дД_ю_А_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ю_А_К"		,new описаниеТипов("number") ,"дД_ю_А_К" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ю_неА_неК"	,new описаниеТипов("number") ,"дД_ю_неА_неК" ,16 );
		tab_клДоговоры_операции.Колонки.Добавить( "дД_ю_неА_К"		,new описаниеТипов("number") ,"дД_ю_неА_К" ,16 );  
		
		tab_клДоговоры_операции.Колонки.Добавить( "идСтратегии" );
	
	
	v_договор_prev=справочники.КлиентскиеДоговора.ПустаяСсылка();
	tab_клДоговоры_операции.Сортировать( "договор" ); 
	
	i_lim = tab_клДоговоры_операции.Количество()-1;
	
	
		//for each v_currRow in tab_клДоговоры_операции do
		for i=0 to i_lim do
			
			v_currRow=tab_клДоговоры_операции[i];
			
			v_currRow.идСтратегии = v_currRow.договор.ИдентификаторСтратегии;		
			
			//подсчитываем поступления/изъятия по ДС и бумагам	
				if v_currRow.в_Отчет then
					
					if (v_currRow.видОперации=справочники.ВидыОпераций.ВводАктивов) then
						if (v_currRow.деньги) then
							if v_currRow.физЮр_лицо="физЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ДС_ф_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ДС_ф_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ДС_ф_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ДС_ф_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							elsIf v_currRow.физЮр_лицо="юрЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ДС_ю_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ДС_ю_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ДС_ю_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ДС_ю_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							else
								
							endIf;
							
						else	// ценныеБумаги
							if v_currRow.физЮр_лицо="физЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ЦБ_ф_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ЦБ_ф_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ЦБ_ф_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ЦБ_ф_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							elsIf v_currRow.физЮр_лицо="юрЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ЦБ_ю_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ЦБ_ю_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.п_ЦБ_ю_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.п_ЦБ_ю_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							else
								
							endIf;
						endIf;
						
					elsIf (v_currRow.видОперации=справочники.ВидыОпераций.ВыводАктивов) then
						if (v_currRow.деньги) then
							if v_currRow.физЮр_лицо="физЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ДС_ф_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ДС_ф_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ДС_ф_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ДС_ф_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							elsIf v_currRow.физЮр_лицо="юрЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ДС_ю_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ДС_ю_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ДС_ю_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ДС_ю_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							else
								
							endIf;
							
						else	// ценныеБумаги
							if v_currRow.физЮр_лицо="физЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ЦБ_ф_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ЦБ_ф_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ЦБ_ф_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ЦБ_ф_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							elsIf v_currRow.физЮр_лицо="юрЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ЦБ_ю_А_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ЦБ_ю_А_неК=v_currRow.переоценка_значение;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.и_ЦБ_ю_неА_К=v_currRow.переоценка_значение;
									else
										v_currRow.и_ЦБ_ю_неА_неК=v_currRow.переоценка_значение;
									endIf;
								endIf;
								
							else
								
							endIf;
						endIf
					endIf;
				endIf;	
				
			//обработать количества договоров
				if v_currRow.договор=v_договор_prev then
					v_currRow.дЗ_ф_А_неК	=0.0;
					v_currRow.дЗ_ф_А_К		=0.0;
					v_currRow.дЗ_ф_неА_неК	=0.0;
					v_currRow.дЗ_ф_неА_К	=0.0;
					
					v_currRow.дЗ_ю_А_неК	=0.0;
					v_currRow.дЗ_ю_А_К		=0.0;
					v_currRow.дЗ_ю_неА_неК	=0.0;
					v_currRow.дЗ_ю_неА_К	=0.0;
					
					
					v_currRow.дП_ф_А_неК	=0.0;
					v_currRow.дП_ф_А_К		=0.0;
					v_currRow.дП_ф_неА_неК	=0.0;
					v_currRow.дП_ф_неА_К	=0.0;
					
					v_currRow.дП_ю_А_неК	=0.0;
					v_currRow.дП_ю_А_К		=0.0;
					v_currRow.дП_ю_неА_неК	=0.0;
					v_currRow.дП_ю_неА_К	=0.0;
					
					
					v_currRow.дД_ф_А_неК	=0.0;
					v_currRow.дД_ф_А_К		=0.0;
					v_currRow.дД_ф_неА_неК	=0.0;
					v_currRow.дД_ф_неА_К	=0.0;
					
					v_currRow.дД_ю_А_неК	=0.0;
					v_currRow.дД_ю_А_К		=0.0;
					v_currRow.дД_ю_неА_неК	=0.0;
					v_currRow.дД_ю_неА_К	=0.0;
					
					
				else
					// не учитываются открытые и закрытые в заданном периоде	//!!! 20230503: всё таки надо учитывать
						
						if (mid( v_currRow.открЗакрДейств ,2 ,1 )="1")then		// открыт		
							if v_currRow.физЮр_лицо="физЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дЗ_ф_А_К=1;			
									
									else
										v_currRow.дЗ_ф_А_неК=1;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дЗ_ф_неА_К=1;
									else
										v_currRow.дЗ_ф_неА_неК=1;
									endIf;
								endIf;
								
							elsIf v_currRow.физЮр_лицо="юрЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дЗ_ю_А_К=1;
										
									else
										v_currRow.дЗ_ю_А_неК=1;
												
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дЗ_ю_неА_К=1;
										
									else
										v_currRow.дЗ_ю_неА_неК=1;
									
									endIf;
								endIf;
							else
								
							endIf;
						endIf; 
						
						if (mid( v_currRow.открЗакрДейств ,3 ,1 )="1")then	// расторгнут
							if v_currRow.физЮр_лицо="физЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дП_ф_А_К=1;
									
									else
										v_currRow.дП_ф_А_неК=1;
									
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дП_ф_неА_К=1;
									else
										v_currRow.дП_ф_неА_неК=1;
									
									endIf;
								endIf;
								
							elsIf v_currRow.физЮр_лицо="юрЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дП_ю_А_К=1;
										
									else
										v_currRow.дП_ю_А_неК=1;
										
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дП_ю_неА_К=1;
										
									else
										v_currRow.дП_ю_неА_неК=1;
									
									endIf;
								endIf;
							else
								
							endIf;
						endIf; 
						
						if mid( v_currRow.открЗакрДейств ,1 ,1 )="1" then	// действует
							if v_currRow.физЮр_лицо="физЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дД_ф_А_К=1;
									else
										v_currRow.дД_ф_А_неК=1;
										
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дД_ф_неА_К=1;
										
									else
										v_currRow.дД_ф_неА_неК=1;
										
									endIf;
								endIf;
								
							elsIf v_currRow.физЮр_лицо="юрЛицо" then
								if v_currRow.cnt_сделка>0 then	// активный
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дД_ю_А_К=1;
										
									else
										v_currRow.дД_ю_А_неК=1;
									endIf;
								else	// НЕактивный		If v_currRow.cnt_сделка=0 then
									if v_currRow.квалифицированныйИнвестор then
										v_currRow.дД_ю_неА_К=1;
									else
										v_currRow.дД_ю_неА_неК=1;
									endIf;
								endIf;
							else
								
							endIf;
							
						endIf;
					//endIf;
					
					v_договор_prev=v_currRow.договор;
				endIf;
				
		    // обработать количества операций -- не знаю для чего это делал Дима?  
				try
					if v_currRow.вОтчет then
						iii=777;
					endIf;
				except
					ssss=trimAll( описаниеОшибки() );
				endTry;
					
		endDo;
	
	
	tab_клДоговоры_операции.Сортировать( "договор ,операция" );
	
	fncRes=tab_клДоговоры_операции;
	
	return fncRes;
endFunction
//-----------------------------------------------------------------------------
function fnc_собратьДанные_раздел_1_подраздел_1_3()
	
	var fncRes;
	
	fncRes=new таблицаЗначений;
	
	tab_остатки=new таблицаЗначений;
	
	tab_остаткиИобороты			=этаФорма.тз_остаткиИобороты		.Скопировать();
	tab_обязательства_остатки	=этаФорма.тз_обязательства_остатки	.Скопировать(); 
	tab_Договоры				=этаФорма.тз_клиентскиеДоговоры		.Скопировать();

	
	prc_join_остатки( tab_остаткиИобороты, tab_обязательства_остатки, tab_остатки, tab_Договоры );  //
	
	//после джойна tab_остатки и tab_Договоры могут быть незаполненные поля "договор"
	//тогда вставляем "договор" из "ссылка", где "ссылка" -- добавленная ссылка на Договор из tab_Договоры
	Для каждого элм из tab_остатки цикл
		Если Не ЗначениеЗаполнено(элм.договор) тогда
			элм.договор = элм.ссылка;	
		КонецЕсли;
	КонецЦикла;           
	
	//tab_остатки.Сортировать( "flag ,договор" );
	tab_остатки.Сортировать( "договор" );
	
	fncRes=tab_остатки;	
	
	return fncRes; 
	
endFunction	
//----------------------------------------------------------------------------- 
function fnc_собратьДанные_раздел_2()  
	var fncRes;
	var v_currRow;	
	var tab_обязательства_остатки;
	var tab_раздел_2;

	
	fncRes=new таблицаЗначений;
		
	tab_остаткиИобороты			=этаФорма.тз_остаткиИобороты		.Скопировать();
	tab_Договоры				=этаФорма.тз_клиентскиеДоговоры		.Скопировать();
	
	tab_остаткиИобороты_ДС =new таблицаЗначений; //основная таблица раздела 2 -- только ДС, без цб
	tab_остаткиИобороты_ДС = tab_остаткиИобороты.Скопировать();
	
	//удаляем строки цб
	индекс = tab_остаткиИобороты_ДС.Количество() - 1; 
	Пока индекс >= 0 Цикл
		//если не валюта, то удаляем
		Если Не ТипЗнч(tab_остаткиИобороты_ДС[индекс].Инструмент) = Тип("СправочникСсылка.Валюты") тогда
		    tab_остаткиИобороты_ДС.Удалить(индекс);
		КонецЕсли;
		индекс = индекс - 1;
	КонецЦикла;
	
	//нам нужны только те клиенты, у которых действует договор на конец отчетного периода	
	индекс = tab_остаткиИобороты_ДС.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  v_датаРасторжения = tab_остаткиИобороты_ДС[индекс].АОО_договор.ДатаРасторжения;
	  Если ЗначениеЗаполнено(v_датаРасторжения) тогда
		  Если v_датаРасторжения < этотОбъект.rek_дата_завершения тогда
		  	tab_остаткиИобороты_ДС.Удалить(индекс);
		  КонецЕсли;
	  КонецЕсли; 
	  индекс = индекс - 1;
	КонецЦикла;
	//на всякий случай проверим соответствие с тз_клиентскиеДоговоры 
	индекс = tab_остаткиИобороты_ДС.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  договорСуществует = тз_клиентскиеДоговоры.Найти(tab_остаткиИобороты_ДС[индекс].АОО_договор);
	  //если договора нет в тз_клиентскиеДоговоры, то удалим
	  Если Не ЗначениеЗаполнено(договорСуществует) тогда
		  	tab_остаткиИобороты_ДС.Удалить(индекс);
	  КонецЕсли; 
	  индекс = индекс - 1;
	КонецЦикла;	
	
	tab_остаткиИобороты_ДС.Сортировать( "АОО_договор" ); 
	
	////резидент	
	////ОКАТО_ОКСМ	
	////контрагентДоговор	
	////использование_денСредств	
	////кодВалюты	
	////типКлиента	
	////статусКлиента	
	////квалИнвестор	
	////идБрокер	
	////переоценка_значение	
	////брокер
	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "резидент" ); 
	tab_остаткиИобороты_ДС.Колонки.Добавить( "ОКАТО_ОКСМ" ); //КодРегионаСтраны3533
	tab_остаткиИобороты_ДС.Колонки.Добавить( "ОКАТО_ОКСМ_число" ); //КодРегионаСтраны3533
	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "контрагентДоговор" );	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "использование_денСредств" ); 
	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "кодВалюты");
	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "типКлиента" );
	tab_остаткиИобороты_ДС.Колонки.Добавить( "статусКлиента" ); 	
	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "квалИнвестор" );
	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "идБрокер" );
	tab_остаткиИобороты_ДС.Колонки.Добавить( "брокер" );
	
	tab_остаткиИобороты_ДС.Колонки.Добавить( "идСтратегии" );

	
	i_count = 0;
	try
		for each v_currRow in tab_остаткиИобороты_ДС do 
												
			v_currRow.брокер 		= v_currRow.АОО_СчетХранения_Банк_лицо;
			v_currRow.идБрокер 		= v_currRow.АОО_СчетХранения_Банк_лицо_ИНН;
											
			v_currRow.резидент 					= ?(v_currRow.АОО_договор.Клиент.НалоговыйРезидентРФ, "Резиденты", "Нерезиденты"); 
			
			v_currRow.ОКАТО_ОКСМ 				= v_currRow.АОО_договор.Лицо.КодРегионаСтраны3533;
			v_currRow.ОКАТО_ОКСМ_число			= Число(v_currRow.ОКАТО_ОКСМ);  
			
			//в поле «Контрагент по договору» выводится информация о контрагенте по договору Бо/Ду, а не о контрагенте по сделке
			Если Не v_currRow.АОО_договор.Клиент.ФизическоеЛицо тогда
				v_currRow.контрагентДоговор = "Иное юридическое лицо";
			ИначеЕсли v_currRow.АОО_договор.Клиент.ФизическоеЛицо тогда
				v_currRow.контрагентДоговор = "Физическое лицо";
			Иначе 
				v_currRow.контрагентДоговор = "__нечто__";
			КонецЕсли;	
			
			
			Если v_currRow.АОО_договор.ВидДоговора = Перечисления.ТипыПортфелей.ДУ тогда 
				//Если ДУ то всегда "Без права использования"
				v_currRow.использование_денСредств = "Без права использования";
			ИначеЕсли v_currRow.АОО_договор.ВидДоговора = Перечисления.ТипыПортфелей.Брокерский тогда
				v_currRow.использование_денСредств 	= ?(v_currRow.АОО_договор.Клиент.ИспользованиеБрокеромДСКлиента, 
													"C правом использования", 
													"Без права использования");
			Иначе
				v_currRow.использование_денСредств = "***";
			КонецЕсли; 
			
			s_кодВалюты_символы = "";
			Если v_currRow.Инструмент.Код = "643" тогда
				s_кодВалюты_символы = "RUB";
			Иначе
				s_кодВалюты_символы = ВРег(v_currRow.Инструмент.КодСимв);
			КонецЕсли;
			v_currRow.кодВалюты = v_currRow.Инструмент.Код + "-" + s_кодВалюты_символы;  
			
																
			v_currRow.типКлиента				=  ?(v_currRow.АОО_договор.Клиент.ФизическоеЛицо, "Физические лица", "Юридические лица");
			
			v_currRow.квалИнвестор				=  ?(v_currRow.АОО_договор.Клиент.КвалифицированныйИнвестор,
																		"Квалифицированный инвестор",
											 							"Неквалифицированный инвестор");
			
					
			v_currRow.статусКлиента = ?( v_currRow.cnt_сделка > 0 , "Активные" , "Неактивные" );
			
			v_currRow.идСтратегии = v_currRow.АОО_договор.ИдентификаторСтратегии;
					
			i_count = i_count + 1;
				
		endDo;
	except
		ТекстСообщения = "Перехват на индексе: [" + i_count+ "]. " + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
    	ПоказатьПредупреждение(,НСтр("ru = 'Операция не может быть выполнена по причине:'") + Символы.ПС + ТекстСообщения);
	endTry;
		
	
	fncRes=tab_остаткиИобороты_ДС;	
	
	return fncRes;
	
endFunction	
//----------------------------------------------------------------------------- 
function fnc_собратьДанные_раздел_4() 
	
	var fncRes;
	var v_currRow;	
	var tab_обязательства_остатки;
	var tab_раздел_4;

	
	fncRes=new таблицаЗначений;
		
	tab_остаткиИобороты			=этаФорма.тз_остаткиИобороты		.Скопировать();
	tab_Договоры				=этаФорма.тз_клиентскиеДоговоры		.Скопировать();
	
	tab_остаткиИобороты_ЦБ =new таблицаЗначений; //основная таблица раздела 2 -- только цб, без ДС (т.е. без валюты)
	tab_остаткиИобороты_ЦБ = tab_остаткиИобороты.Скопировать();
	
	//удаляем строки с валютой
	индекс = tab_остаткиИобороты_ЦБ.Количество() - 1; 
	Пока индекс >= 0 Цикл
		//если валюта, то удаляем
		Если ТипЗнч(tab_остаткиИобороты_ЦБ[индекс].Инструмент) = Тип("СправочникСсылка.Валюты") тогда
		    tab_остаткиИобороты_ЦБ.Удалить(индекс);
		КонецЕсли;
		индекс = индекс - 1;
	КонецЦикла;
	
	//нам нужны только те клиенты, у которых действует договор на конец отчетного периода	
	индекс = tab_остаткиИобороты_ЦБ.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  v_датаРасторжения = tab_остаткиИобороты_ЦБ[индекс].АОО_договор.ДатаРасторжения;
	  Если ЗначениеЗаполнено(v_датаРасторжения) тогда
		  Если v_датаРасторжения < этотОбъект.rek_дата_завершения тогда
		  	tab_остаткиИобороты_ЦБ.Удалить(индекс);
		  КонецЕсли;
	  КонецЕсли; 
	  индекс = индекс - 1;
	КонецЦикла;
	//на всякий случай проверим соответствие с тз_клиентскиеДоговоры 
	индекс = tab_остаткиИобороты_ЦБ.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  договорСуществует = тз_клиентскиеДоговоры.Найти(tab_остаткиИобороты_ЦБ[индекс].АОО_договор);
	  //если договора нет в тз_клиентскиеДоговоры, то удалим
	  Если Не ЗначениеЗаполнено(договорСуществует) тогда
		  	tab_остаткиИобороты_ЦБ.Удалить(индекс);
	  КонецЕсли; 
	  индекс = индекс - 1;
	КонецЦикла;	
	//
	
	tab_остаткиИобороты_ЦБ.Сортировать( "АОО_договор" ); 

	////резидент	
	////ОКАТО_ОКСМ	
	////контрагентДоговор	
	////использование_денСредств	
	////Идентификатор ценной бумаги	-- идентификатор_ЦБ 
	////типКлиента	
	////статусКлиента	
	////квалИнвестор	
	////переоценка_значение	
	///Количество ценных бумаг -- конОстаток 
	
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "резидент" ); 
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "ОКАТО_ОКСМ" ); //КодРегионаСтраны3533
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "ОКАТО_ОКСМ_число" ); //КодРегионаСтраны3533
	
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "контрагентДоговор" );	
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "использование_денСредств" ); 
		
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "типКлиента" );
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "статусКлиента" ); 	
	
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "квалИнвестор" );
	
	tab_остаткиИобороты_ЦБ.Колонки.Добавить( "идСтратегии" );
		
	i_count = 0;
	try
		for each v_currRow in tab_остаткиИобороты_ЦБ do 
																							
			v_currRow.резидент 					= ?(v_currRow.АОО_договор.Клиент.НалоговыйРезидентРФ, "Резиденты", "Нерезиденты"); 
			
			v_currRow.ОКАТО_ОКСМ 				= v_currRow.АОО_договор.Лицо.КодРегионаСтраны3533;
			v_currRow.ОКАТО_ОКСМ_число			= Число(v_currRow.ОКАТО_ОКСМ);  
			
			//в поле «Контрагент по договору» выводится информация о контрагенте по договору Бо/Ду, а не о контрагенте по сделке
			Если Не v_currRow.АОО_договор.Клиент.ФизическоеЛицо тогда
				v_currRow.контрагентДоговор = "Иное юридическое лицо";
			ИначеЕсли v_currRow.АОО_договор.Клиент.ФизическоеЛицо тогда
				v_currRow.контрагентДоговор = "Физическое лицо";
			Иначе 
				v_currRow.контрагентДоговор = "__нечто__";
			КонецЕсли;	
					
			Если v_currRow.АОО_договор.ВидДоговора = Перечисления.ТипыПортфелей.ДУ тогда 
				//Если ДУ то всегда "Без права использования"
				v_currRow.использование_денСредств = "Без права использования";
			ИначеЕсли v_currRow.АОО_договор.ВидДоговора = Перечисления.ТипыПортфелей.Брокерский тогда
				v_currRow.использование_денСредств 	= ?(v_currRow.АОО_договор.Клиент.ИспользованиеБрокеромДСКлиента, 
													"C правом использования", 
													"Без права использования");
			Иначе
				v_currRow.использование_денСредств = "***";
			КонецЕсли; 
																			
			v_currRow.типКлиента				=  ?(v_currRow.АОО_договор.Клиент.ФизическоеЛицо, "Физические лица", "Юридические лица");
			
			v_currRow.квалИнвестор				=  ?(v_currRow.АОО_договор.Клиент.КвалифицированныйИнвестор,
																		"Квалифицированный инвестор",
											 							"Неквалифицированный инвестор");
			
					
			v_currRow.статусКлиента = ?( v_currRow.cnt_сделка > 0 , "Активные" , "Неактивные" ); 
			
			v_currRow.идСтратегии = v_currRow.АОО_договор.ИдентификаторСтратегии;
					
			i_count = i_count + 1;
				
		endDo;
	except
		ТекстСообщения = "Перехват на индексе: [" + i_count+ "]. " + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ПоказатьПредупреждение(,НСтр("ru = 'Операция не может быть выполнена по причине:'") + Символы.ПС + ТекстСообщения);
	endTry;
		
	
	fncRes=tab_остаткиИобороты_ЦБ;	
	
	return fncRes;

	
endFunction	
//-----------------------------------------------------------------------------
function fnc_собратьДанные_раздел_6()
	
	var fncRes;

	fncRes=new таблицаЗначений; 
	
	tab_остаткиИобороты_ПФИ	 	=этаФорма.тз_остаткиИобороты_ПФИ		.Скопировать();
	
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "резидент" ); 
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "ОКАТО_ОКСМ" ); //КодРегионаСтраны3533
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "ОКАТО_ОКСМ_число" ); //КодРегионаСтраны3533

	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "контрагентДоговор" );	
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "использование_денСредств" ); 		
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "типКлиента" );
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "статусКлиента" ); 		
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "квалИнвестор" ); 
	
	tab_остаткиИобороты_ПФИ.Колонки.Добавить( "идСтратегии" );
	
	for each v_currRow in tab_остаткиИобороты_ПФИ do
		
		v_currRow.резидент 					= ?(v_currRow.АОО_договор.Клиент.НалоговыйРезидентРФ, "Резиденты", "Нерезиденты"); 
			
		v_currRow.ОКАТО_ОКСМ 				= v_currRow.АОО_договор.Лицо.КодРегионаСтраны3533;
		v_currRow.ОКАТО_ОКСМ_число			= Число(v_currRow.ОКАТО_ОКСМ);  
		
		//в поле «Контрагент по договору» выводится информация о контрагенте по договору Бо/Ду, а не о контрагенте по сделке
		Если Не v_currRow.АОО_договор.Клиент.ФизическоеЛицо тогда
			v_currRow.контрагентДоговор = "Иное юридическое лицо";
		ИначеЕсли v_currRow.АОО_договор.Клиент.ФизическоеЛицо тогда
			v_currRow.контрагентДоговор = "Физическое лицо";
		Иначе 
			v_currRow.контрагентДоговор = "__нечто__";
		КонецЕсли;	
				
		Если v_currRow.АОО_договор.ВидДоговора = Перечисления.ТипыПортфелей.ДУ тогда 
			//Если ДУ то всегда "Без права использования"
			v_currRow.использование_денСредств = "Без права использования";
		ИначеЕсли v_currRow.АОО_договор.ВидДоговора = Перечисления.ТипыПортфелей.Брокерский тогда
			v_currRow.использование_денСредств 	= ?(v_currRow.АОО_договор.Клиент.ИспользованиеБрокеромДСКлиента, 
												"C правом использования", 
												"Без права использования");
		Иначе
			v_currRow.использование_денСредств = "***";
		КонецЕсли; 
																		
		v_currRow.типКлиента				=  ?(v_currRow.АОО_договор.Клиент.ФизическоеЛицо, "Физические лица", "Юридические лица");
		
		v_currRow.квалИнвестор				=  ?(v_currRow.АОО_договор.Клиент.КвалифицированныйИнвестор,
																	"Квалифицированный инвестор",
										 							"Неквалифицированный инвестор");
		
				
			v_отбор=new структура;
			v_отбор.Вставить( "Ссылка" ,v_currRow.АОО_договор );		
			ar_клДоговоры_отбор = этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.НайтиСтроки( v_отбор );	
			if ar_клДоговоры_отбор.Количество() > 0 then	
					cnt_сделка	= ar_клДоговоры_отбор[0].cnt_сделка;
					Если Не ЗначениеЗаполнено(cnt_сделка) тогда
					 	cnt_сделка = 0;
					КонецЕсли;
					v_currRow.статусКлиента = ?( cnt_сделка > 0 , "Активные" , "Неактивные" ); 
			endIf;
		
		v_currRow.идСтратегии = v_currRow.АОО_договор.ИдентификаторСтратегии;
				
	endDo;
		
	
	fncRes = tab_остаткиИобороты_ПФИ;

	return fncRes;
	
endFunction
//-----------------------------------------------------------------------------
function fnc_собратьДанные_раздел_7()
	var fncRes;
	var v_currRow;	
	var tab_обязательства_остатки;
	var tab_раздел_7;

	fncRes=new таблицаЗначений;	
	
	if 1=2 then
		tab_обязательства_остатки	=этаФорма.тз_обязательства_остатки	.Скопировать();
	endIf;
	
	tab_раздел_7	=этаФорма.тз_обязательства_остатки	.Скопировать(); 
	
	
	//нам нужны только те клиенты, у которых действует договор на конец отчетного периода	
	индекс = tab_раздел_7.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  v_датаРасторжения = tab_раздел_7[индекс].договор.ДатаРасторжения;
	  Если ЗначениеЗаполнено(v_датаРасторжения) тогда
		  Если v_датаРасторжения < этотОбъект.rek_дата_завершения тогда
		  	tab_раздел_7.Удалить(индекс);
		  КонецЕсли;
	  КонецЕсли; 
	  индекс = индекс - 1;
	КонецЦикла;
	//на всякий случай проверим соответствие с тз_клиентскиеДоговоры 
	индекс = tab_раздел_7.Количество() - 1; 
	Пока индекс >= 0 Цикл
	  договорСуществует = тз_клиентскиеДоговоры.Найти(tab_раздел_7[индекс].договор);
	  //если договора нет в тз_клиентскиеДоговоры, то удалим
	  Если Не ЗначениеЗаполнено(договорСуществует) тогда
		  	tab_раздел_7.Удалить(индекс);
	  КонецЕсли; 
	  индекс = индекс - 1;
	КонецЦикла;	
		
	tab_раздел_7.Колонки.Добавить( "Клиент" );
	tab_раздел_7.Колонки.Добавить( "видДоговора" );
		
	tab_раздел_7.Колонки.Добавить( "этоСделка"	,new описаниеТипов( "boolean" ) ,"этоСделка" ,8 );
	tab_раздел_7.Колонки.Добавить( "РЕПО"			,new описаниеТипов( "boolean" ) ,"РЕПО" ,8 );
	tab_раздел_7.Колонки.Добавить( "частьРЕПО"	,new описаниеТипов( "number" ) ,"частьРЕПО" ,8 );
	tab_раздел_7.Колонки.Добавить( "МестоСовершения" ,new описаниеТипов( "СправочникСсылка.Биржи" ) ,"МестоСовершения" ,8 );
	tab_раздел_7.Колонки.Добавить( "FORTS"		,new описаниеТипов( "boolean" ) ,"FORTS" ,8 ); 
	
	//////резидент	
	//////ОКАТО_ОКСМ	
	//////контрагентДоговор -- Физическое лицо, Иное юридическое лицо	
	//////использование_денСредств
	//////типКлиента --  Физические лица, Юридические лица	
	//////статусКлиента	
	//////квалИнвестор	
	//////Треб_или_Обяз	
	//////тип_Треб_Обяз	
	//////идКонтрагента	
	//////контрагент	
	//////delta_переоценка
	
	tab_раздел_7.Колонки.Добавить( "резидент" ); 
	tab_раздел_7.Колонки.Добавить( "ОКАТО_ОКСМ" ); //КодРегионаСтраны3533
	tab_раздел_7.Колонки.Добавить( "ОКАТО_ОКСМ_число" ); //КодРегионаСтраны3533
	
	tab_раздел_7.Колонки.Добавить( "контрагентДоговор" );	
	tab_раздел_7.Колонки.Добавить( "использование_денСредств" );
	
	tab_раздел_7.Колонки.Добавить( "типКлиента" );
	tab_раздел_7.Колонки.Добавить( "статусКлиента" ); 	
	tab_раздел_7.Колонки.Добавить( "cnt_сделка" ); //для определения статусКлиента  
	
	tab_раздел_7.Колонки.Добавить( "квалИнвестор" );
	tab_раздел_7.Колонки.Добавить( "Треб_или_Обяз" );
	tab_раздел_7.Колонки.Добавить( "тип_Треб_Обяз" ); 
	
	tab_раздел_7.Колонки.Добавить( "идКонтрагента" );
	tab_раздел_7.Колонки.Добавить( "контрагент" ); 
	
	tab_раздел_7.Колонки.Добавить( "типСделкиРЕПО" ); 
	
	tab_раздел_7.Колонки.Добавить( "идСтратегии" );
	
	i_count = 0;
	try
		for each v_currRow in tab_раздел_7 do 
					
			v_currRow.Клиент = v_currRow.договор.клиент;
			v_currRow.видДоговора	=v_currRow.договор.видДоговора;
			
			v_currRow.этоСделка= типЗнч( v_currRow.поДокументу )=тип( "ДокументСсылка.Сделка" );
			
			if v_currRow.этоСделка then
				v_currRow.РЕПО				=v_currRow.поДокументу.РЕПО;
				v_currRow.частьРЕПО			=v_currRow.поДокументу.частьРЕПО;
				v_currRow.МестоСовершения	=v_currRow.поДокументу.МестоСовершения;
				
				v_currRow.FORTS = (v_currRow.МестоСовершения=Справочники.Биржи.ФОРТС);
				
				v_currRow.контрагент 		= v_currRow.ПоДокументу.Контрагент;
				v_currRow.идКонтрагента 	= v_currRow.ПоДокументу.Контрагент.ИНН;
				
				//если Сделка ФОРТС -- > это Тип требования = ПФИ	
				Если v_currRow.FORTS тогда
					v_currRow.тип_Треб_Обяз = "ПФИ";
				Иначе 
					//Если РЕПО то Тип требования = "Cделки репо", иначе "Cделки с ценными бумагами, за исключением сделок репо"  
					v_currRow.тип_Треб_Обяз = ?(v_currRow.РЕПО, 
												"Cделки репо",
												"Cделки с ценными бумагами, за исключением сделок репо");
					
					Если v_currRow.РЕПО тогда //заполняем поле "Тип сделки репо"
						v_сделка = v_currRow.поДокументу;
						
						//Прямое РЕПО - 1ая часть сделки = Покупка
						//Обратное РЕПО - 1ая часть сделки = Продажа
						
						//Определяем вид 1й части сделки
						v_ВидСделки_Часть_1 = ""; 	
					
						Если v_сделка.ЧастьРЕПО = 1 тогда
							Если v_сделка.ВидСделки = Перечисления.ВидыСделок.Покупка тогда
								v_ВидСделки_Часть_1 = Перечисления.ВидыСделок.Покупка;	
							ИначеЕсли v_сделка.ВидСделки = Перечисления.ВидыСделок.Продажа тогда
								v_ВидСделки_Часть_1 = Перечисления.ВидыСделок.Продажа;
							Иначе
								v_ВидСделки_Часть_1 = "";
							КонецЕсли;	
						Иначе
							//делаем наоборот, то есть: если 2 часть сделки -- продажа, то первая покупка 
							Если v_сделка.ВидСделки = Перечисления.ВидыСделок.Покупка тогда
								v_ВидСделки_Часть_1 = Перечисления.ВидыСделок.Продажа;	
							ИначеЕсли v_сделка.ВидСделки = Перечисления.ВидыСделок.Продажа тогда
								v_ВидСделки_Часть_1 = Перечисления.ВидыСделок.Покупка;
							Иначе
								v_ВидСделки_Часть_1 = "";
							КонецЕсли;
						КонецЕсли;	
						
						//Прямое РЕПО - 1ая часть сделки = Покупка
						Если v_ВидСделки_Часть_1 = Перечисления.ВидыСделок.Покупка тогда
							v_currRow.типСделкиРЕПО = "Репо обратное";	
						ИначеЕсли v_ВидСделки_Часть_1 = Перечисления.ВидыСделок.Продажа тогда
							v_currRow.типСделкиРЕПО = "Репо прямое";
						Иначе
							v_currRow.типСделкиРЕПО = "__***__";
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
					
			else  
				//если не Сделка -- > это Тип требования = Прочее
				v_currRow.тип_Треб_Обяз = "Прочее";
				
				//Поле Контрагент (Прочее — Контрагент => заполняем наименование АО ЛМС полностью) если Вид операции = Вознаграждение
				Если v_currRow.ВидОперации.Вознаграждение тогда
					v_currRow.контрагент 		= Справочники.Организации.ОсновнаяФирма;
					v_currRow.идКонтрагента 	= Справочники.Организации.ОсновнаяФирма.ИНН; 
				Иначе
				    v_currRow.контрагент 		= "****ЭтоНеСделка и НеВознаграждение***";
					v_currRow.идКонтрагента 	= "***"; 
				КонецЕсли;
				
			endIf;	
			
			v_currRow.резидент 					= ?(v_currRow.договор.Клиент.НалоговыйРезидентРФ, "Резиденты", "Нерезиденты");
			

			
			//в поле «Контрагент по договору» выводится информация о контрагенте по договору Бо/Ду, а не о контрагенте по сделке
			Если Не v_currRow.договор.Клиент.ФизическоеЛицо тогда
				v_currRow.контрагентДоговор = "Иное юридическое лицо";
			ИначеЕсли v_currRow.договор.Клиент.ФизическоеЛицо тогда
				v_currRow.контрагентДоговор = "Физическое лицо";
			Иначе 
				v_currRow.контрагентДоговор = "__нечто__";
			КонецЕсли;		
			
			
			v_currRow.ОКАТО_ОКСМ 				= v_currRow.договор.Лицо.КодРегионаСтраны3533;
			v_currRow.ОКАТО_ОКСМ_число			= Число(v_currRow.ОКАТО_ОКСМ);
			
			
			Если v_currRow.договор.ВидДоговора = Перечисления.ТипыПортфелей.ДУ тогда 
				//Если ДУ то всегда "Без права использования"
				v_currRow.использование_денСредств = "Без права использования";
			ИначеЕсли v_currRow.договор.ВидДоговора = Перечисления.ТипыПортфелей.Брокерский тогда
				v_currRow.использование_денСредств 	= ?(v_currRow.договор.Клиент.ИспользованиеБрокеромДСКлиента, 
													"C правом использования", 
													"Без права использования");
			Иначе
				v_currRow.использование_денСредств = "***";
			КонецЕсли;
			
																
			v_currRow.типКлиента				=  ?(v_currRow.договор.Клиент.ФизическоеЛицо, "Физические лица", "Юридические лица");
			
			v_currRow.квалИнвестор				=  ?(v_currRow.договор.Клиент.КвалифицированныйИнвестор,
																		"Квалифицированный инвестор",
											 							"Неквалифицированный инвестор");
			
			v_currRow.Треб_или_Обяз 			= ?(v_currRow.delta_переоценка < 0, "Обязательство", "Требование");
			
			v_currRow.идСтратегии 				= v_currRow.договор.ИдентификаторСтратегии;
			
				v_отбор=new структура;
				v_отбор.Вставить( "Ссылка" ,v_currRow.договор );		
				ar_клДоговоры_отбор = этаФорма.ЭлементыФормы.тз_клиентскиеДоговоры.Значение.НайтиСтроки( v_отбор );	
				if ar_клДоговоры_отбор.Количество() > 0 then	
						v_currRow.cnt_сделка	= ar_клДоговоры_отбор[0].cnt_сделка;
						Если Не ЗначениеЗаполнено(v_currRow.cnt_сделка) тогда
						 	v_currRow.cnt_сделка = 0;
						КонецЕсли;
						v_currRow.статусКлиента = ?( v_currRow.cnt_сделка > 0 , "Активные" , "Неактивные" ); 
				endIf;
				
			i_count = i_count + 1;
				
		endDo;
	except
		ТекстСообщения = "Перехват на индексе: [" + i_count+ "]. " + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
    	ПоказатьПредупреждение(,НСтр("ru = 'Операция не может быть выполнена по причине:'") + Символы.ПС + ТекстСообщения);
	endTry;
				
	fncRes = tab_раздел_7;	
	
	return fncRes;
	
endFunction	
//-----------------------------------------------------------------------------
function fnc_собратьДанные_раздел_10()
	
	var fncRes;

	fncRes=new таблицаЗначений;
	
	тз__Данные_раздел_1_2 = fnc_собратьДанные_раздел_1_подраздел_1_2();
	тз__Данные_раздел_2 = fnc_собратьДанные_раздел_2();
	тз__Данные_раздел_4 = fnc_собратьДанные_раздел_4();
    тз__Данные_раздел_7 = fnc_собратьДанные_раздел_7(); 
	
		
	тз__Данные_раздел_1_2.Свернуть("договор, ВидДоговора, ТипОперации, идСтратегии",
									"переоценка_значение"); 
		
	//10 -- ДУ
	//10_2 -- БО
	Для каждого элм из тз__Данные_раздел_1_2 цикл
		
		Если элм.ТипОперации = Перечисления.ТипыОпераций.Списание ИЛИ
			 элм.ТипОперации = Перечисления.ТипыОпераций.Зачисление тогда //
			 
				s_типКлиента 	= ?(элм.договор.Клиент.ФизическоеЛицо, "Физические лица", "Юридические лица");
				s_квалИнвестор 	= ?(элм.договор.Клиент.КвалифицированныйИнвестор,
																			"Квалифицированный инвестор",
												 							"Неквалифицированный инвестор");
				
				Если элм.ТипОперации = Перечисления.ТипыОпераций.Списание тогда //из'ятие
					v_поступления = 0;
					v_изъятия     = элм.переоценка_значение;
				ИначеЕсли элм.ТипОперации = Перечисления.ТипыОпераций.Зачисление тогда //поступление
					v_поступления = элм.переоценка_значение;
					v_изъятия     = 0;
				КонецЕсли;
				
				
				новСтр = тзКраткиеСведения_раздел_10.Добавить();	
				новСтр.типКлиента 		= s_типКлиента; 
				новСтр.квалИнвестор 	= s_квалИнвестор;
				новСтр.поступления 		= v_поступления; 
				новСтр.изъятия 			= v_изъятия;
				
				новСтр.ВидДоговора 		= элм.ВидДоговора;
				новСтр.идСтратегии      = элм.идСтратегии;
		КонецЕсли;
			
	КонецЦикла;
	
	тзКраткиеСведения_раздел_10.Свернуть( "типКлиента, квалИнвестор, ВидДоговора, стоимостнаяОценка, идСтратегии",
										  "поступления, изъятия");	
	
	//СУММА(Раздел 2; Раздел 4; Раздел 6; Раздел 7)
	//ищем соответствия в разделах 2, 4, 7
	Для каждого элм из тзКраткиеСведения_раздел_10 цикл
		
		Отбор = Новый Структура;
	    Отбор.Вставить("АОО_договор_видДоговора", элм.ВидДоговора); 
		Отбор.Вставить("типКлиента", элм.типКлиента);
		Отбор.Вставить("квалИнвестор", элм.квалИнвестор);
		Отбор.Вставить("идСтратегии", элм.идСтратегии);
	    строки_тз__раздел_2 = тз__Данные_раздел_2.НайтиСтроки(Отбор); 
		строки_тз__раздел_4 = тз__Данные_раздел_4.НайтиСтроки(Отбор); 
		
		Отбор = Новый Структура;
	    Отбор.Вставить("видДоговора", элм.ВидДоговора); 
		Отбор.Вставить("типКлиента", элм.типКлиента);
		Отбор.Вставить("квалИнвестор", элм.квалИнвестор);
		Отбор.Вставить("идСтратегии", элм.идСтратегии);
	    строки_тз__раздел_7 = тз__Данные_раздел_7.НайтиСтроки(Отбор); 
		
		
		//сумма тз__раздел_2 
		тз__раздел_2_сумма_переоценка_значение = 0;
		Для i = 0 По строки_тз__раздел_2.ВГраница() Цикл
			тз__раздел_2_сумма_переоценка_значение = тз__раздел_2_сумма_переоценка_значение + строки_тз__раздел_2[i].переоценка_значение;
		КонецЦикла;		
		
		//сумма тз__раздел_4 
		тз__раздел_4_сумма_переоценка_значение = 0;
		Для i = 0 По строки_тз__раздел_4.ВГраница() Цикл
			тз__раздел_4_сумма_переоценка_значение = тз__раздел_4_сумма_переоценка_значение + строки_тз__раздел_4[i].переоценка_значение;
		КонецЦикла;
	
		//сумма тз__раздел_7 
		тз__раздел_7_сумма_delta_переоценка = 0;
		Для i = 0 По строки_тз__раздел_7.ВГраница() Цикл
			тз__раздел_7_сумма_delta_переоценка = тз__раздел_7_сумма_delta_переоценка + строки_тз__раздел_7[i].delta_переоценка;
		КонецЦикла;	
		
		элм.стоимостнаяОценка = тз__раздел_2_сумма_переоценка_значение +
								тз__раздел_4_сумма_переоценка_значение +
			                    тз__раздел_7_сумма_delta_переоценка;		
		
	КонецЦикла; 
		
	fncRes = тзКраткиеСведения_раздел_10;	
	
	return fncRes;
	
endFunction	
//-----------------------------------------------------------------------------

//******************** вывод печатных форм ************************************
Процедура prc_вывести_печатнуюФорму_1_1( тз__раздел_1_подраздел_1 ) 
	
	s_cell_даты	=	format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
					+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
					+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" ) ;
					
	v_Макет = ПолучитьМакет("rep_0420431_раздел_1_подраздел_1");
	
	v_ПечатнаяФорма = Новый ТабличныйДокумент;
		
	
	v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок");
	v_Шапка = v_Макет.ПолучитьОбласть("обл_таблица_шапка");	
	
	v_Шапка.Параметры.cell_даты = s_cell_даты;
	
	v_ПечатнаяФорма.Вывести( v_Заголовок ); 
	v_ПечатнаяФорма.Вывести( v_Шапка ); 
	
	Для каждого элм из тз__раздел_1_подраздел_1 цикл
		
		v_таблица_строка = v_Макет.ПолучитьОбласть("обл_таблица_строка");		
		v_таблица_строка.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
			 			
		v_ПечатнаяФорма.Вывести( v_таблица_строка );
		
	КонецЦикла;

	v_ПечатнаяФорма.Показать( "ОКУД 0420431 раздел 1.1" );

КонецПроцедуры
//-----------------------------------------------------------------------------
procedure prc_вывести_печатнуюФорму_1_1_2( тз_1__1_2 , прм_видДоговора )
	var тз_oper;
	var v_Макет;
	var v_ПечатнаяФорма;
	var v_Шапка;
	var v_таблица_строка;

	
	тз_oper=new таблицаЗначений;
	тз_oper=тз_1__1_2.скопировать();
	тз_oper.Свернуть( "видДоговора,налоговыйРезидентРФ,кодРегионаСтраны3533,физЮр_лицо,использованиеБрокеромДСклиента,идСтратегии" 
						,"п_ДС_ф_А_неК, п_ДС_ф_А_К, п_ДС_ф_неА_неК, п_ДС_ф_неА_К,"
						+"п_ДС_ю_А_неК, п_ДС_ю_А_К, п_ДС_ю_неА_неК, п_ДС_ю_неА_К,"
						+"п_ЦБ_ф_А_неК, п_ЦБ_ф_А_К, п_ЦБ_ф_неА_неК, п_ЦБ_ф_неА_К,"
						+"п_ЦБ_ю_А_неК, п_ЦБ_ю_А_К, п_ЦБ_ю_неА_неК, п_ЦБ_ю_неА_К,"
						
						+"и_ДС_ф_А_неК, и_ДС_ф_А_К, и_ДС_ф_неА_неК, и_ДС_ф_неА_К,"
						+"и_ДС_ю_А_неК, и_ДС_ю_А_К, и_ДС_ю_неА_неК, и_ДС_ю_неА_К,"
						+"и_ЦБ_ф_А_неК, и_ЦБ_ф_А_К, и_ЦБ_ф_неА_неК, и_ЦБ_ф_неА_К,"
						+"и_ЦБ_ю_А_неК, и_ЦБ_ю_А_К, и_ЦБ_ю_неА_неК, и_ЦБ_ю_неА_К,"
						
						
						+"дЗ_ф_А_неК, дЗ_ф_А_К, дЗ_ф_неА_неК, дЗ_ф_неА_К,"
						+"дЗ_ю_А_неК, дЗ_ю_А_К, дЗ_ю_неА_неК, дЗ_ю_неА_К,"
						
						+"дП_ф_А_неК, дП_ф_А_К, дП_ф_неА_неК, дП_ф_неА_К,"
						+"дП_ю_А_неК, дП_ю_А_К, дП_ю_неА_неК, дП_ю_неА_К,"
						
						+"дД_ф_А_неК, дД_ф_А_К, дД_ф_неА_неК, дД_ф_неА_К,"
						+"дД_ю_А_неК, дД_ю_А_К, дД_ю_неА_неК, дД_ю_неА_К"
						
						);
						
	тз_oper.сортировать( "видДоговора,налоговыйРезидентРФ desc,кодРегионаСтраны3533,физЮр_лицо,использованиеБрокеромДСклиента,идСтратегии" );
	
		// --- зеленая муть! ---
		///нужно искать ненулевое количество договоров и нулевые суммы по (деньгам или цб) 
		/// -- они потом попадут в печатную форму => 
		/// => нулевые суммы по (ДС или цб) заполнять нулями в печатной форме
				//s_префикс = ""; 
				//s_окончание = ""; 
				//Для каждого элм из тз_oper цикл
				//	bp=1;
				//КонецЦикла;
				
				//Если ТипЗнч(v_currRow.Инструмент) = Тип("СправочникСсылка.Валюты") тогда
				//	Если v_currRow.п_ДС_ю_неА_неК = 0 тогда
				//		v_currRow.п_ДС_ю_неА_неК = -1;
				//	КонецЕсли; 
				//	Если v_currRow.и_ДС_ю_неА_неК = 0 тогда
				//		v_currRow.и_ДС_ю_неА_неК = -1;
				//	КонецЕсли;
				//Иначе 
				//	Если v_currRow.п_ЦБ_ю_неА_неК = 0 тогда
				//		v_currRow.п_ЦБ_ю_неА_неК = -1;
				//	КонецЕсли;
				//	Если v_currRow.и_ЦБ_ю_неА_неК = 0 тогда
				//		v_currRow.и_ЦБ_ю_неА_неК = -1;
				//	КонецЕсли;
				//КонецЕсли
	
						
	v_Макет=ПолучитьМакет("rep_0420431_раздел_1_подраздел_1_2");    
 
    v_ПечатнаяФорма=Новый ТабличныйДокумент;
 
    // # Шапка документа #
 
    v_Шапка = v_Макет.ПолучитьОбласть("обл_шапка");
		
	v_ПечатнаяФорма.Вывести( v_Шапка );
		
	v_ШапкаТаблицы = v_Макет.ПолучитьОбласть("обл_таблица_шапка|Область_БОиДУ");	
	v_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьДанные");
	v_ОбластьСтолбецДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьСтолбецДУ");
		
		v_ОбластьДанные.Параметры.cell_даты=format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
											+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
											+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" );
		if прм_видДоговора=перечисления.ТипыПортфелей.Брокерский then
			v_ОбластьДанные.Параметры.видДеятельности="Вид деятельности-Брокерская деятельность";
		elsIf прм_видДоговора=перечисления.ТипыПортфелей.ДУ then
			v_ОбластьДанные.Параметры.видДеятельности="Вид деятельности-Доверительное управление";
		else
			v_ОбластьДанные.Параметры.видДеятельности="__??_что-то непонятное_??__";
		endIf;
		
	v_ПечатнаяФорма.Вывести( v_ШапкаТаблицы );
	Если прм_видДоговора=перечисления.ТипыПортфелей.ДУ тогда
		v_ПечатнаяФорма.Присоединить(v_ОбластьСтолбецДУ); // (см. макет печатной формы)
	КонецЕсли;
	v_ПечатнаяФорма.Присоединить(v_ОбластьДанные); // (см. макет печатной формы)
				
	v_таблица_строка_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ"); 
	v_таблица_строка_ОбластьСтолбецДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьСтолбецДУ");
	v_таблица_строка_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");

	for each v_currRow in тз_oper do
		if v_currRow.видДоговора<>прм_видДоговора then
			continue ;
		endIf;
		
		
		Если v_currRow.НалоговыйРезидентРФ тогда
			v_таблица_строка_Область_БОиДУ.Параметры.резидент = "Резиденты";
		Иначе
			v_таблица_строка_Область_БОиДУ.Параметры.резидент = "Нерезиденты";
		КонецЕсли;
		
		v_таблица_строка_Область_БОиДУ.Параметры.ОКАТО_ОКСМ	=v_currRow.кодРегионаСтраны3533;
		
		if trimAll( v_currRow.физЮр_лицо )="физЛицо" then
			v_таблица_строка_Область_БОиДУ.Параметры.физ_юр		="Физическое лицо";
		elsIf trimAll( v_currRow.физЮр_лицо )="юрЛицо" then
			v_таблица_строка_Область_БОиДУ.Параметры.физ_юр		="Иное юридическое лицо";
		else
			v_таблица_строка_Область_БОиДУ.Параметры.физ_юр		="_нечто_";
		endIf;
			
		
		v_таблица_строка_Область_БОиДУ.Параметры.использование_денСредств	=?( v_currRow.ИспользованиеБрокеромДСКлиента	// v_currRow.клиент.ИспользованиеБрокеромДСКлиента;
																,"C правом использования"
																,"Без права использования"
																);  
		
		v_ПечатнаяФорма.Вывести( v_таблица_строка_Область_БОиДУ ); //выводим общую часть для БО и ДУ (см. макет печатной формы) 
					
		Если прм_видДоговора=перечисления.ТипыПортфелей.ДУ тогда
			v_таблица_строка_ОбластьСтолбецДУ.Параметры.Заполнить( v_currRow );
			v_ПечатнаяФорма.Присоединить( v_таблица_строка_ОбластьСтолбецДУ ); // (см. макет печатной формы)
		КонецЕсли;
		
		v_таблица_строка_ОбластьДанные.Параметры.Заполнить( v_currRow );
		
		v_ПечатнаяФорма.Присоединить( v_таблица_строка_ОбластьДанные ); //добавляем данные (см. макет печатной формы)
	endDo;	
	
	v_ПечатнаяФорма.Показать( "ОКУД 0420431 раздел 1 подраздел 1.2" );
endProcedure
//-----------------------------------------------------------------------------
procedure prc_вывести_печатнуюФорму_1_1_3( тз_1__1_3_итог , прм_видДоговора )
	var тз_oper;
	var v_Макет;
	var v_ПечатнаяФорма;
	var v_Шапка;
	var v_таблица_строка;
	var v_currRow;
	var s_sell_name;
	var s_sell_колво;
	var s_sell_колво_new;
	var s_sell_колво_lost;
	var v_СуммаСчетовПоСтроке;
	
	var v_параметр;

	
	тз_oper=new таблицаЗначений;
	тз_oper=тз_1__1_3_итог.скопировать();
	
	тз_oper.Колонки.Добавить("КодРегионаСтраны3533_число"); 
	for each v_currRow in тз_oper do
	 	v_currRow.КодРегионаСтраны3533_число = Число(v_currRow.КодРегионаСтраны3533);	
	endDo;
	
	тз_oper.сортировать( "КодРегионаСтраны3533_число" );
	
	v_Макет=ПолучитьМакет("rep_0420431_раздел_1_подраздел_1_3");    
    v_Шапка=v_Макет.ПолучитьОбласть("обл_шапка");
	
	v_ПечатнаяФорма=Новый ТабличныйДокумент;
	v_ПечатнаяФорма.Вывести( v_Шапка );
	
	v_ШапкаТаблицы=v_Макет.ПолучитьОбласть("обл_таблица_шапка");
	
		v_ШапкаТаблицы.Параметры.cell_даты=format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
											+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
											+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" ) ;
		v_ШапкаТаблицы.Параметры.cell_брок_ДУ=?( прм_видДоговора=перечисления.ТипыПортфелей.Брокерский 
													,"Z= (Вид деятельности-Брокерская деятельность)" 
													,"Z= (Вид деятельности-Доверительное управление)" );
		
	v_ПечатнаяФорма.Вывести( v_ШапкаТаблицы );
	
	for each v_currRow in тз_oper do
		
		if v_currRow.видДоговора=прм_видДоговора then					
				
			v_таблица_строка=v_Макет.ПолучитьОбласть("обл_таблица_строка"); 
			
			v_таблица_строка.Параметры.Заполнить( v_currRow ); //заполняем
			
				//доп_Условие_1 -- Если портфель клиента = 0, то этот ноль надо записать в ячейку, а не оставлять ее пустой.
					//это сделаем следующим образом:
					Если v_currRow.размерСчета_0 < 0 тогда //до этого мы идентифицировали нулевые портфели -- 
														   //-- (заполнили отрицательными числами) в тз__раздел_1_подраздел_1_3_группировка
						v_таблица_строка.Параметры.размерСчета_0 = Формат(0, "ЧН=0,00");//пишем нуль							
					КонецЕсли;	
					//			
							
				Если v_currRow.НалоговыйРезидентРФ тогда
					v_таблица_строка.Параметры.резидент = "Резиденты";
				Иначе
					v_таблица_строка.Параметры.резидент = "Нерезиденты";
				КонецЕсли;
				
				v_таблица_строка.Параметры.ОКАТО_ОКСМ	=v_currRow.кодРегионаСтраны3533;  
				
				if trimAll( v_currRow.физЮр_лицо )="физЛицо" then
					v_таблица_строка.Параметры.физ_юр		="Физические лица";
				elsIf trimAll( v_currRow.физЮр_лицо )="юрЛицо" then
					v_таблица_строка.Параметры.физ_юр		="Юридические лица";
				else
					v_таблица_строка.Параметры.физ_юр		="_нечто_";
				endIf;
							
				v_таблица_строка.Параметры.статусКлиента=?( v_currRow.cnt_сделка=1 ,"Активный" ,"Неактивный" );
				
				//Квалифицированный инвестор/Неквалифицированный инвестор
				Если v_currRow.КвалифицированныйИнвестор тогда
					v_таблица_строка.Параметры.квалИнвестор	= "Квалифицированный инвестор";
				Иначе
					v_таблица_строка.Параметры.квалИнвестор	= "Неквалифицированный инвестор";
				КонецЕсли;
																			
			v_ПечатнаяФорма.Вывести( v_таблица_строка ); 
			
		endIf;
		
	endDo;
	
	
	v_ПечатнаяФорма.Показать( "ОКУД 0420431 раздел 1 подраздел 1.3" );
endProcedure
//-----------------------------------------------------------------------------
Процедура prc_вывести_печатнуюФорму_7( тз__раздел_7_группировка )
	
	var count_обл_заголовок_7;
	var count_обл_заголовок_7_2;
	var count_обл_заголовок_7_3;
	var count_обл_заголовок_7_4;
	var count_обл_заголовок_7_5;
	var count_обл_заголовок_7_6;
	
	count_обл_заголовок_7=0;
	count_обл_заголовок_7_2=0;
	count_обл_заголовок_7_3=0;
	count_обл_заголовок_7_4=0;
	count_обл_заголовок_7_5=0;
	count_обл_заголовок_7_6=0;
	
	s_cell_даты	=	format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
							+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
							+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" ) ;	
	
	v_Макет = ПолучитьМакет("rep_0420431_раздел_7");
	
	v_ПечатнаяФорма_7 = Новый ТабличныйДокумент; 
	v_ПечатнаяФорма_7_2 = Новый ТабличныйДокумент;
	v_ПечатнаяФорма_7_3 = Новый ТабличныйДокумент;
	v_ПечатнаяФорма_7_4 = Новый ТабличныйДокумент;
	v_ПечатнаяФорма_7_5 = Новый ТабличныйДокумент;
    v_ПечатнаяФорма_7_6 = Новый ТабличныйДокумент;
	
	//обл_заголовок_7
	//обл_шапка_7
	//обл_таблица_строка_7_4
	Для каждого элм из тз__раздел_7_группировка цикл
		
		/// Названия см. в макете:	
		////7 -- ДУ репо
		////7.2 -- БО репо
		////7.3 -- ДУ кроме репо
		////7.4 -- БО кроме репо
		////7.5 -- ДУ прочее
		////7.6 -- БО прочее	 
			Если элм.видДоговора = Перечисления.ТипыПортфелей.ДУ тогда
				Если элм.тип_Треб_Обяз = "Cделки репо" тогда ////7 -- ДУ репо
					
					Если count_обл_заголовок_7 = 0 тогда
						v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_7");
						v_Шапка = v_Макет.ПолучитьОбласть("обл_шапка_7");
						v_Шапка.Параметры.cell_даты = s_cell_даты;
						v_ПечатнаяФорма_7.Вывести( v_Заголовок );
                        v_ПечатнаяФорма_7.Вывести( v_Шапка );
						
						count_обл_заголовок_7 = count_обл_заголовок_7 + 1;
						
						v_таблица_строка_7 = v_Макет.ПолучитьОбласть("обл_таблица_строка_7");
						
						v_таблица_строка_7.Параметры.Заполнить( элм ); ////заполняем строку данных	 
						v_ПечатнаяФорма_7.Вывести( v_таблица_строка_7 ); 
					Иначе
						v_таблица_строка_7.Параметры.Заполнить( элм ); ////заполняем строку данных	
						v_ПечатнаяФорма_7.Вывести( v_таблица_строка_7 ); 
					КонецЕсли;
					
				КонецЕсли;
				
				Если элм.тип_Треб_Обяз = "Cделки с ценными бумагами, за исключением сделок репо" ИЛИ
					 элм.тип_Треб_Обяз = "ПФИ" тогда //7.3 -- ДУ кроме репо
					 
					Если count_обл_заголовок_7_3 = 0 тогда
						v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_7_3");
						v_Шапка = v_Макет.ПолучитьОбласть("обл_шапка_7_3");
						v_Шапка.Параметры.cell_даты = s_cell_даты;
						v_ПечатнаяФорма_7_3.Вывести( v_Заголовок );
                        v_ПечатнаяФорма_7_3.Вывести( v_Шапка ); 
						
						count_обл_заголовок_7_3 = count_обл_заголовок_7_3 + 1;
						
						v_таблица_строка_7_3 = v_Макет.ПолучитьОбласть("обл_таблица_строка_7_3");
						
						v_таблица_строка_7_3.Параметры.Заполнить( элм ); ////заполняем строку данных	 
						v_ПечатнаяФорма_7_3.Вывести( v_таблица_строка_7_3 ); 
					Иначе
						v_таблица_строка_7_3.Параметры.Заполнить( элм ); ////заполняем строку данных	
						v_ПечатнаяФорма_7_3.Вывести( v_таблица_строка_7_3 ); 
					КонецЕсли;
 
					
				КонецЕсли;
				 
                Если элм.тип_Треб_Обяз = "Прочее" тогда //7.5 -- ДУ прочее
					
					Если count_обл_заголовок_7_5 = 0 тогда
						v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_7_5");
						v_Шапка = v_Макет.ПолучитьОбласть("обл_шапка_7_5");
						v_Шапка.Параметры.cell_даты = s_cell_даты;
						v_ПечатнаяФорма_7_5.Вывести( v_Заголовок );
                        v_ПечатнаяФорма_7_5.Вывести( v_Шапка ); 
						
						count_обл_заголовок_7_5 = count_обл_заголовок_7_5 + 1;
						
						v_таблица_строка_7_5 = v_Макет.ПолучитьОбласть("обл_таблица_строка_7_5");
						
						v_таблица_строка_7_5.Параметры.Заполнить( элм ); //заполняем строку данных	
						v_ПечатнаяФорма_7_5.Вывести( v_таблица_строка_7_5 ); 
					Иначе
						v_таблица_строка_7_5.Параметры.Заполнить( элм ); //заполняем строку данных
						v_ПечатнаяФорма_7_5.Вывести( v_таблица_строка_7_5 ); 
					КонецЕсли;
  					
				КонецЕсли;
			КонецЕсли;
					
			//РЕПО в 7.2, сделки, кроме РЕПО, и ПФИ — в 7.4, Прочее — в 7.6
			
			Если элм.видДоговора = Перечисления.ТипыПортфелей.Брокерский тогда
				Если элм.тип_Треб_Обяз = "Cделки репо" тогда //7.2 -- БО репо
					
					Если count_обл_заголовок_7_2 = 0 тогда
						v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_7_2");
						v_Шапка = v_Макет.ПолучитьОбласть("обл_шапка_7_2");
						v_Шапка.Параметры.cell_даты = s_cell_даты;
						v_ПечатнаяФорма_7_2.Вывести( v_Заголовок );
                        v_ПечатнаяФорма_7_2.Вывести( v_Шапка );
						
						count_обл_заголовок_7_2 = count_обл_заголовок_7_2 + 1;
						
						v_таблица_строка_7_2 = v_Макет.ПолучитьОбласть("обл_таблица_строка_7_2");
						
						v_таблица_строка_7_2.Параметры.Заполнить( элм ); //заполняем строку данных	
						v_ПечатнаяФорма_7_2.Вывести( v_таблица_строка_7_2 ); 
					Иначе
						v_таблица_строка_7_2.Параметры.Заполнить( элм ); //заполняем строку данных
						v_ПечатнаяФорма_7_2.Вывести( v_таблица_строка_7_2 ); 
					КонецЕсли;
		
				КонецЕсли;
				
				Если элм.тип_Треб_Обяз = "Cделки с ценными бумагами, за исключением сделок репо" ИЛИ
					 элм.тип_Треб_Обяз = "ПФИ" тогда //7.4 -- БО кроме репо 
					 
					Если count_обл_заголовок_7_4 = 0 тогда
						v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_7_4");
						v_Шапка = v_Макет.ПолучитьОбласть("обл_шапка_7_4");
						v_Шапка.Параметры.cell_даты = s_cell_даты;
						v_ПечатнаяФорма_7_4.Вывести( v_Заголовок );
                        v_ПечатнаяФорма_7_4.Вывести( v_Шапка ); 
						
						count_обл_заголовок_7_4 = count_обл_заголовок_7_4 + 1;
						
						v_таблица_строка_7_4 = v_Макет.ПолучитьОбласть("обл_таблица_строка_7_4");
						
						v_таблица_строка_7_4.Параметры.Заполнить( элм ); //заполняем строку данных	
						v_ПечатнаяФорма_7_4.Вывести( v_таблица_строка_7_4 ); 
					Иначе
						v_таблица_строка_7_4.Параметры.Заполнить( элм ); //заполняем строку данных
						v_ПечатнаяФорма_7_4.Вывести( v_таблица_строка_7_4 );		
					КонецЕсли;
		 
				 КонецЕсли;
				 
                Если элм.тип_Треб_Обяз = "Прочее" тогда //7.6 -- БО прочее 
					
					Если count_обл_заголовок_7_6 = 0 тогда
						v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_7_6");
						v_Шапка = v_Макет.ПолучитьОбласть("обл_шапка_7_6");
						v_Шапка.Параметры.cell_даты = s_cell_даты;
						v_ПечатнаяФорма_7_6.Вывести( v_Заголовок );
                        v_ПечатнаяФорма_7_6.Вывести( v_Шапка ); 
						
						count_обл_заголовок_7_6 = count_обл_заголовок_7_6 + 1;
						
						v_таблица_строка_7_6 = v_Макет.ПолучитьОбласть("обл_таблица_строка_7_6");
						
						v_таблица_строка_7_6.Параметры.Заполнить( элм ); //заполняем строку данных 
						v_ПечатнаяФорма_7_6.Вывести( v_таблица_строка_7_6 );			
					Иначе
						v_таблица_строка_7_6.Параметры.Заполнить( элм ); //заполняем строку данных
						v_ПечатнаяФорма_7_6.Вывести( v_таблица_строка_7_6 );	
					КонецЕсли;

				КонецЕсли;
			КонецЕсли;
								
	КонецЦикла;
	
	Если count_обл_заголовок_7 > 0 тогда
		v_ПечатнаяФорма_7.Показать( "ОКУД 0420431 раздел 7" );
	КонецЕсли;
	Если count_обл_заголовок_7_2 > 0 тогда
		v_ПечатнаяФорма_7_2.Показать( "ОКУД 0420431 раздел 7.2" );
	КонецЕсли;
	Если count_обл_заголовок_7_3 > 0 тогда
		v_ПечатнаяФорма_7_3.Показать( "ОКУД 0420431 раздел 7.3" );
	КонецЕсли;
	Если count_обл_заголовок_7_4 > 0 тогда
		v_ПечатнаяФорма_7_4.Показать( "ОКУД 0420431 раздел 7.4" );
	КонецЕсли;
	Если count_обл_заголовок_7_5 > 0 тогда
		v_ПечатнаяФорма_7_5.Показать( "ОКУД 0420431 раздел 7.5" );
	КонецЕсли;
	Если count_обл_заголовок_7_6 > 0 тогда
		v_ПечатнаяФорма_7_6.Показать( "ОКУД 0420431 раздел 7.6" );	
	КонецЕсли;
	
КонецПроцедуры
//-----------------------------------------------------------------------------
Процедура prc_вывести_печатнуюФорму_2 ( тз__раздел_2_группировка ) 
	var count_обл_заголовок_2;
	var count_обл_заголовок_2_2;
		
	count_обл_заголовок_2   =0;
	count_обл_заголовок_2_2 =0;
		
	s_cell_даты	=	format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
							+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
							+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" ) ;	
	
	v_Макет = ПолучитьМакет("rep_0420431_раздел_2");
	
	v_ПечатнаяФорма_2 = Новый ТабличныйДокумент; 
	v_ПечатнаяФорма_2_2 = Новый ТабличныйДокумент; 
	
	v_Шапка_БО_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|Область_БОиДУ");
	v_Шапка_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьСтолбецДУ");
    v_Шапка_данные = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьДанные");
	
		
	//обл_заголовок_2
	//обл_шапка_2
	//обл_таблица_строка_2_2
	Для каждого элм из тз__раздел_2_группировка цикл
		
		//выводить строку с нулевым остатком остатком не нужно. 
		Если элм.переоценка_значение <> 0 тогда	
			/// Названия см. в макете:	
			////2 -- ДС ДУ
			////2.2 -- ДС БО	 
			Если элм.АОО_договор_видДоговора = Перечисления.ТипыПортфелей.ДУ тогда
								
				Если count_обл_заголовок_2 = 0 тогда
					v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_2");
					
					v_Шапка_данные.Параметры.cell_даты = s_cell_даты;
					v_Шапка_данные.Параметры.s_ВидДеятельности = "Доверительное управление";
					
					v_ПечатнаяФорма_2.Вывести( v_Заголовок ); 
					v_ПечатнаяФорма_2.Вывести( v_Шапка_БО_ДУ );
					v_ПечатнаяФорма_2.Присоединить( v_Шапка_ДУ );
			        v_ПечатнаяФорма_2.Присоединить( v_Шапка_данные );
					
					count_обл_заголовок_2 = count_обл_заголовок_2 + 1;
					
					v_таблица_строка_2_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ"); 
					v_таблица_строка_2_ОбластьСтолбецДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьСтолбецДУ"); 					
					v_таблица_строка_2_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");

					
					v_таблица_строка_2_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных
					v_таблица_строка_2_ОбластьСтолбецДУ.Параметры.Заполнить( элм );
					v_таблица_строка_2_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 				
					v_ПечатнаяФорма_2.Вывести( v_таблица_строка_2_Область_БОиДУ );
					v_ПечатнаяФорма_2.Присоединить( v_таблица_строка_2_ОбластьСтолбецДУ );
					v_ПечатнаяФорма_2.Присоединить( v_таблица_строка_2_ОбластьДанные );
					
				Иначе
					v_таблица_строка_2_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных
					v_таблица_строка_2_ОбластьСтолбецДУ.Параметры.Заполнить( элм );
					v_таблица_строка_2_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 				
					v_ПечатнаяФорма_2.Вывести( v_таблица_строка_2_Область_БОиДУ );
					v_ПечатнаяФорма_2.Присоединить( v_таблица_строка_2_ОбластьСтолбецДУ );
					v_ПечатнаяФорма_2.Присоединить( v_таблица_строка_2_ОбластьДанные );
				КонецЕсли;
					
			КонецЕсли;
					
				
			Если элм.АОО_договор_видДоговора = Перечисления.ТипыПортфелей.Брокерский тогда 
				
				Если count_обл_заголовок_2_2 = 0 тогда
					v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_2_2");
					
					v_Шапка_данные.Параметры.cell_даты = s_cell_даты;
					v_Шапка_данные.Параметры.s_ВидДеятельности = "Брокерская деятельность";
					
					v_ПечатнаяФорма_2_2.Вывести( v_Заголовок ); 
					v_ПечатнаяФорма_2_2.Вывести( v_Шапка_БО_ДУ );
			        v_ПечатнаяФорма_2_2.Присоединить( v_Шапка_данные );
					
					count_обл_заголовок_2_2 = count_обл_заголовок_2_2 + 1;
					
					v_таблица_строка_2_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ");					
					v_таблица_строка_2_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");
					
					v_таблица_строка_2_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
					v_таблица_строка_2_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 				
					v_ПечатнаяФорма_2_2.Вывести( v_таблица_строка_2_Область_БОиДУ );
					v_ПечатнаяФорма_2_2.Присоединить( v_таблица_строка_2_ОбластьДанные );
					
				Иначе
					v_таблица_строка_2_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
					v_таблица_строка_2_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 				
					v_ПечатнаяФорма_2_2.Вывести( v_таблица_строка_2_Область_БОиДУ );
					v_ПечатнаяФорма_2_2.Присоединить( v_таблица_строка_2_ОбластьДанные );
				КонецЕсли;	
			
			КонецЕсли;
		КонецЕсли;
								
	КонецЦикла;
	
	Если count_обл_заголовок_2 > 0 тогда
		v_ПечатнаяФорма_2.Показать( "ОКУД 0420431 раздел 2" );
	КонецЕсли;
	Если count_обл_заголовок_2_2 > 0 тогда
		v_ПечатнаяФорма_2_2.Показать( "ОКУД 0420431 раздел 2.2" );
	КонецЕсли;
	
КонецПроцедуры 
//-----------------------------------------------------------------------------
Процедура prc_вывести_печатнуюФорму_4 ( тз__раздел_4_группировка ) 
	var count_обл_заголовок_4;
	var count_обл_заголовок_4_2;
		
	count_обл_заголовок_4   =0;
	count_обл_заголовок_4_2 =0;
		
	s_cell_даты	=	format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
							+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
							+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" ) ;	
	
	v_Макет = ПолучитьМакет("rep_0420431_раздел_4");
	
	v_ПечатнаяФорма_4 = Новый ТабличныйДокумент; 
	v_ПечатнаяФорма_4_2 = Новый ТабличныйДокумент; 
	
	v_Шапка_БО_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|Область_БОиДУ");
	v_Шапка_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьСтолбецДУ");
	v_Шапка_данные = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьДанные");
	
	Для каждого элм из тз__раздел_4_группировка цикл
		
		//Если кол-во цб на конец периода ≠ 0, их надо выводить в раздел
		Если элм.конОстаток <> 0 тогда	
			/// Названия см. в макете:	
			////4 -- ДС ДУ
			////4.2 -- ДС БО	 
			Если элм.АОО_договор_видДоговора = Перечисления.ТипыПортфелей.ДУ тогда
								
				Если count_обл_заголовок_4 = 0 тогда
					v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_4");
					
					v_Шапка_данные.Параметры.cell_даты = s_cell_даты;
					v_Шапка_данные.Параметры.s_ВидДеятельности = "Доверительное управление";
					
					v_ПечатнаяФорма_4.Вывести( v_Заголовок ); 
					v_ПечатнаяФорма_4.Вывести( v_Шапка_БО_ДУ );
					v_ПечатнаяФорма_4.Присоединить( v_Шапка_ДУ );
			        v_ПечатнаяФорма_4.Присоединить( v_Шапка_данные );
					
					count_обл_заголовок_4 = count_обл_заголовок_4 + 1;
					
					v_таблица_строка_4_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ"); 
					v_таблица_строка_4_ОбластьСтолбецДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьСтолбецДУ"); 					
					v_таблица_строка_4_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");

					
					v_таблица_строка_4_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных
					v_таблица_строка_4_ОбластьСтолбецДУ.Параметры.Заполнить( элм );
					v_таблица_строка_4_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
	 			
					v_ПечатнаяФорма_4.Вывести( v_таблица_строка_4_Область_БОиДУ );
					v_ПечатнаяФорма_4.Присоединить( v_таблица_строка_4_ОбластьСтолбецДУ );
					v_ПечатнаяФорма_4.Присоединить( v_таблица_строка_4_ОбластьДанные );
					
				Иначе
					v_таблица_строка_4_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных
					v_таблица_строка_4_ОбластьСтолбецДУ.Параметры.Заполнить( элм );
					v_таблица_строка_4_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
	 			
					v_ПечатнаяФорма_4.Вывести( v_таблица_строка_4_Область_БОиДУ );
					v_ПечатнаяФорма_4.Присоединить( v_таблица_строка_4_ОбластьСтолбецДУ );
					v_ПечатнаяФорма_4.Присоединить( v_таблица_строка_4_ОбластьДанные );
				КонецЕсли;
					
			КонецЕсли;
					
				
			Если элм.АОО_договор_видДоговора = Перечисления.ТипыПортфелей.Брокерский тогда 
				
				Если count_обл_заголовок_4_2 = 0 тогда
					v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_4_2");
					
					v_Шапка_данные.Параметры.cell_даты = s_cell_даты;
					v_Шапка_данные.Параметры.s_ВидДеятельности = "Брокерская деятельность";
					
					v_ПечатнаяФорма_4_2.Вывести( v_Заголовок ); 
					v_ПечатнаяФорма_4_2.Вывести( v_Шапка_БО_ДУ );
			        v_ПечатнаяФорма_4_2.Присоединить( v_Шапка_данные );
					
					count_обл_заголовок_4_2 = count_обл_заголовок_4_2 + 1;
					
					v_таблица_строка_4_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ");					
					v_таблица_строка_4_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");
					
					v_таблица_строка_4_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
					v_таблица_строка_4_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
	 			
					v_ПечатнаяФорма_4_2.Вывести( v_таблица_строка_4_Область_БОиДУ );
					v_ПечатнаяФорма_4_2.Присоединить( v_таблица_строка_4_ОбластьДанные );
					
				Иначе
					v_таблица_строка_4_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
					v_таблица_строка_4_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
	 			
					v_ПечатнаяФорма_4_2.Вывести( v_таблица_строка_4_Область_БОиДУ );
					v_ПечатнаяФорма_4_2.Присоединить( v_таблица_строка_4_ОбластьДанные );
				КонецЕсли;	
			
			КонецЕсли;
		КонецЕсли;
								
	КонецЦикла;
	
	Если count_обл_заголовок_4 > 0 тогда
		v_ПечатнаяФорма_4.Показать( "ОКУД 0420431 раздел 4" );
	КонецЕсли;
	Если count_обл_заголовок_4_2 > 0 тогда
		v_ПечатнаяФорма_4_2.Показать( "ОКУД 0420431 раздел 4.2" );
	КонецЕсли;
	
КонецПроцедуры
//-----------------------------------------------------------------------------
Процедура prc_вывести_печатнуюФорму_6 ( тз__раздел_6_группировка )
	
	var count_обл_заголовок_6;
	var count_обл_заголовок_6_2;
		
	count_обл_заголовок_6   =0;
	count_обл_заголовок_6_2 =0;
		
	s_cell_даты	=	format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
							+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
							+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" ) ;	
	
	v_Макет = ПолучитьМакет("rep_0420431_раздел_6_ПФИ");
	
	v_ПечатнаяФорма_6_2 = Новый ТабличныйДокумент;//пока только БО - 6.2
	
	v_Шапка_БО_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|Область_БОиДУ");
	v_Шапка_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьСтолбецДУ");
	v_Шапка_данные = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьДанные");
	
	Для каждого элм из тз__раздел_6_группировка цикл
			
		/// Названия см. в макете:	
		////6 -- ДУ
		////6.2 -- БО			
		Если элм.АОО_договор_видДоговора = Перечисления.ТипыПортфелей.Брокерский тогда 
			
			Если count_обл_заголовок_6_2 = 0 тогда
				v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_6_2");
				
				v_Шапка_данные.Параметры.cell_даты = s_cell_даты;
				v_Шапка_данные.Параметры.s_ВидДеятельности = "Брокерская деятельность";
				
				v_ПечатнаяФорма_6_2.Вывести( v_Заголовок ); 
				v_ПечатнаяФорма_6_2.Вывести( v_Шапка_БО_ДУ );
		        v_ПечатнаяФорма_6_2.Присоединить( v_Шапка_данные );
				
				count_обл_заголовок_6_2 = count_обл_заголовок_6_2 + 1;
				
				v_таблица_строка_6_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ");					
				v_таблица_строка_6_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");
				
				v_таблица_строка_6_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
				v_таблица_строка_6_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 			
				v_ПечатнаяФорма_6_2.Вывести( v_таблица_строка_6_Область_БОиДУ );
				v_ПечатнаяФорма_6_2.Присоединить( v_таблица_строка_6_ОбластьДанные );
				
			Иначе
				v_таблица_строка_6_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
				v_таблица_строка_6_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 			
				v_ПечатнаяФорма_6_2.Вывести( v_таблица_строка_6_Область_БОиДУ );
				v_ПечатнаяФорма_6_2.Присоединить( v_таблица_строка_6_ОбластьДанные );
			КонецЕсли;	
		
		КонецЕсли;
			
	КонецЦикла;
	
	Если count_обл_заголовок_6_2 > 0 тогда
		v_ПечатнаяФорма_6_2.Показать( "ОКУД 0420431 раздел 6.2" );
	КонецЕсли
	
КонецПроцедуры
//-----------------------------------------------------------------------------
Процедура prc_вывести_печатнуюФорму_10( тз__раздел_10 ) 
	
	var count_обл_заголовок_10;
	var count_обл_заголовок_10_2;
		
	count_обл_заголовок_10   =0;
	count_обл_заголовок_10_2 =0;
		
	s_cell_даты	=	format( этотОбъект.rek_дата_начало ,"ДФ=yyyy-MM-dd" )+" - "
							+format( этотОбъект.rek_дата_завершения ,"ДФ=yyyy-MM-dd" )+", "
							+format( этотОбъект.rek_дата_отчета ,"ДФ=yyyy-MM-dd" ) ;	
	
	v_Макет = ПолучитьМакет("rep_0420431_раздел_10");
	
	v_ПечатнаяФорма_10 = Новый ТабличныйДокумент; 
	v_ПечатнаяФорма_10_2 = Новый ТабличныйДокумент;
	
	v_Шапка_БО_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|Область_БОиДУ");
	v_Шапка_ДУ = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьСтолбецДУ");
	v_Шапка_данные = v_Макет.ПолучитьОбласть("обл_таблица_шапка|ОбластьДанные");
	
	Для каждого элм из тз__раздел_10 цикл
		
		/// Названия см. в макете:	
		////10 -- ДС ДУ
		////10.2 -- ДС БО	 
		Если элм.видДоговора = Перечисления.ТипыПортфелей.ДУ тогда
							
			Если count_обл_заголовок_10 = 0 тогда
				v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_10");
				
				v_Шапка_данные.Параметры.cell_даты = s_cell_даты;
				v_Шапка_данные.Параметры.s_ВидДеятельности = "Доверительное управление";
				
				v_ПечатнаяФорма_10.Вывести( v_Заголовок ); 
				v_ПечатнаяФорма_10.Вывести( v_Шапка_БО_ДУ );
				v_ПечатнаяФорма_10.Присоединить( v_Шапка_ДУ );
		        v_ПечатнаяФорма_10.Присоединить( v_Шапка_данные );
				
				count_обл_заголовок_10 = count_обл_заголовок_10 + 1;
				
				v_таблица_строка_10_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ"); 
				v_таблица_строка_10_ОбластьСтолбецДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьСтолбецДУ"); 					
				v_таблица_строка_10_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");

				
				v_таблица_строка_10_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
				v_таблица_строка_10_ОбластьСтолбецДУ.Параметры.Заполнить( элм);
				v_таблица_строка_10_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 			
				v_ПечатнаяФорма_10.Вывести( v_таблица_строка_10_Область_БОиДУ );
				v_ПечатнаяФорма_10.Присоединить( v_таблица_строка_10_ОбластьСтолбецДУ );
				v_ПечатнаяФорма_10.Присоединить( v_таблица_строка_10_ОбластьДанные );
				
			Иначе
				v_таблица_строка_10_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных
				v_таблица_строка_10_ОбластьСтолбецДУ.Параметры.Заполнить( элм);
				v_таблица_строка_10_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 			
				v_ПечатнаяФорма_10.Вывести( v_таблица_строка_10_Область_БОиДУ );
				v_ПечатнаяФорма_10.Присоединить( v_таблица_строка_10_ОбластьСтолбецДУ );
				v_ПечатнаяФорма_10.Присоединить( v_таблица_строка_10_ОбластьДанные );
			КонецЕсли;
				
		КонецЕсли;
				
			
		Если элм.видДоговора = Перечисления.ТипыПортфелей.Брокерский тогда 
			
			Если count_обл_заголовок_10_2 = 0 тогда
				v_Заголовок = v_Макет.ПолучитьОбласть("обл_заголовок_10_2");
				
				v_Шапка_данные.Параметры.cell_даты = s_cell_даты;
				v_Шапка_данные.Параметры.s_ВидДеятельности = "Брокерская деятельность";
				
				v_ПечатнаяФорма_10_2.Вывести( v_Заголовок ); 
				v_ПечатнаяФорма_10_2.Вывести( v_Шапка_БО_ДУ );
		        v_ПечатнаяФорма_10_2.Присоединить( v_Шапка_данные );
				
				count_обл_заголовок_10_2 = count_обл_заголовок_10_2 + 1;
				
				v_таблица_строка_10_Область_БОиДУ = v_Макет.ПолучитьОбласть("обл_таблица_строка|Область_БОиДУ");					
				v_таблица_строка_10_ОбластьДанные = v_Макет.ПолучитьОбласть("обл_таблица_строка|ОбластьДанные");
				
				v_таблица_строка_10_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
				v_таблица_строка_10_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 			
				v_ПечатнаяФорма_10_2.Вывести( v_таблица_строка_10_Область_БОиДУ );
				v_ПечатнаяФорма_10_2.Присоединить( v_таблица_строка_10_ОбластьДанные );
				
			Иначе
				v_таблица_строка_10_Область_БОиДУ.Параметры.Заполнить( элм ); ////заполняем Область строку данных 
				v_таблица_строка_10_ОбластьДанные.Параметры.Заполнить( элм ); ////заполняем Область строку данных
 			
				v_ПечатнаяФорма_10_2.Вывести( v_таблица_строка_10_Область_БОиДУ );
				v_ПечатнаяФорма_10_2.Присоединить( v_таблица_строка_10_ОбластьДанные );
			КонецЕсли;	
		
		КонецЕсли;
				
	КонецЦикла;
	
	Если count_обл_заголовок_10 > 0 тогда
		v_ПечатнаяФорма_10.Показать( "ОКУД 0420431 раздел 10" );
	КонецЕсли;
	Если count_обл_заголовок_10_2 > 0 тогда
		v_ПечатнаяФорма_10_2.Показать( "ОКУД 0420431 раздел 10.2" );
	КонецЕсли;


	
КонецПроцедуры


Процедура КнопкаВыполнитьНажатие(Кнопка)
	var тз__раздел_1_подраздел_1;
	var тз__раздел_1_подраздел_1_2;
	var тз__раздел_1_подраздел_1_3;
	var тз__раздел_1_подраздел_1_3_группировка;
	var тз__раздел_1_подраздел_1_3_группировка_свернуть;
	var тз__раздел_7;
	var тз__раздел_2; 
	var тз__раздел_4;
	var тз__раздел_6_ПФИ;
	var тз__раздел_10;
	
	var v_currRow;
	var i;
	var i_lim;
	
	var s_sell_name;
	var s_sell_колво;
	var s_sell_колво_new;
	var s_sell_колво_lost;
		
	prc_очистить_таблицыЗначений();
	
	prc_writeMsg( "--------------------"+" Работа с данными: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
	
	prc_заполнитьДанные();
	
	prc_writeMsg( "--------------------"+" Работа с данными завершена: "+format( currentDate() ,"ДФ='yyyy.MM.dd HH:mm:ss'" ) );
	
	//раздел_1_1
	if not этаФорма.chkBx_пропустить_печатнуюФорму_1_1 then
		
		тз__раздел_1_подраздел_1 = fnc_собратьДанные_раздел_1_подраздел_1();
			
		prc_вывести_печатнуюФорму_1_1( тз__раздел_1_подраздел_1 );
		
	endIf;
	
	//раздел_1_1_2
	if not этаФорма.chkBx_пропустить_печатнуюФорму_1_1_2 then
		
		тз__раздел_1_подраздел_1_2=fnc_собратьДанные_раздел_1_подраздел_1_2();
		
		//этаФорма.ЭлементыФормы.тз_итоги_1__1_2.Значение=тз__раздел_1_подраздел_1_2.скопировать();
		этаФорма.тз_итоги_1__1_2=тз__раздел_1_подраздел_1_2.скопировать();     
		
		этаФорма.ЭлементыФормы.тз_итоги_1__1_2.создатьКолонки();
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_итоги;
		этаФорма.ЭлементыФормы.pnl_итоги.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_итоги.Страницы.pg_1__1_2;
			
		prc_вывести_печатнуюФорму_1_1_2( тз__раздел_1_подраздел_1_2 ,перечисления.ТипыПортфелей.Брокерский );
		prc_вывести_печатнуюФорму_1_1_2( тз__раздел_1_подраздел_1_2 ,перечисления.ТипыПортфелей.ДУ );
	endIf;
	
	//раздел_1_1_3
	if not этаФорма.chkBx_пропустить_печатнуюФорму_1_1_3 then
		
		тз__раздел_1_подраздел_1_3=fnc_собратьДанные_раздел_1_подраздел_1_3();
		
		i_lim=тз__раздел_1_подраздел_1_3.Количество()-1;
		for i = 0 to i_lim do
			v_договор = тз__раздел_1_подраздел_1_3[i_lim - i].договор;
			if ( (date("19171025221100") < v_договор.датаРасторжения) and (v_договор.датаРасторжения < этотОбъект.rek_дата_начало) )
				or ( этотОбъект.rek_дата_завершения < v_договор.датаДоговора )
			then
				тз__раздел_1_подраздел_1_3.удалить( (i_lim - i) );
			endIf;
		endDo;
		
		этаФорма.тз_итоги_1__1_3 = тз__раздел_1_подраздел_1_3.скопировать();
		этаФорма.ЭлементыФормы.тз_итоги_1__1_3.создатьКолонки();
		
		этаФорма.ЭлементыФормы.тз_итоги_1__1_3.Колонки["договор"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_итоги_1__1_3.Колонки["клиент"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_итоги_1__1_3.Колонки["лицо"]		.ЭлементУправления.КнопкаОткрытия=true;
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_итоги;
		этаФорма.ЭлементыФормы.pnl_итоги.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_итоги.Страницы.pg_1__1_3;
		этаФорма.ЭлементыФормы.pnl_1__1_3.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_1__1_3.Страницы.pg_1__1_3_развёрнуто;
		
			
		тз__раздел_1_подраздел_1_3_группировка = new таблицаЗначений;
		тз__раздел_1_подраздел_1_3_группировка = тз__раздел_1_подраздел_1_3.скопировать();
		
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_наНачало"	,new описаниеТипов("number" ) ,"колво_наНачало" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_откр"		,new описаниеТипов("number" ) ,"колво_откр" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_закр"		,new описаниеТипов("number" ) ,"колво_закр" ,8 );
			
			for each v_currRow in тз__раздел_1_подраздел_1_3_группировка do
				v_currRow.cnt_сделка = ?( v_currRow.cnt_сделка > 0.0 , 1 , 0 );
				
				if v_currRow.договор.датаДоговора<этотОбъект.rek_дата_начало then
					v_currRow.колво_наНачало=1;
				else
					v_currRow.колво_наНачало=0;
				endIf;
				if (этотОбъект.rek_дата_начало<=v_currRow.договор.датаДоговора)and(v_currRow.договор.датаДоговора<=этотОбъект.rek_дата_завершения) then
					v_currRow.колво_откр=1;
				else
					v_currRow.колво_откр=0;
				endIf;
				if (этотОбъект.rek_дата_начало<=v_currRow.договор.ДатаРасторжения)and(v_currRow.договор.ДатаРасторжения<=этотОбъект.rek_дата_завершения) then
					v_currRow.колво_закр=1;
				else
					v_currRow.колво_закр=0;
				endIf;
			endDo;
			
			
			тз__раздел_1_подраздел_1_3_группировка.Свернуть(
										"видДоговора,лицо,налоговыйРезидентРФ,квалифицированныйИнвестор,кодРегионаСтраны3533,физЮр_лицо,cnt_сделка"
										,"остаток ,колво_наНачало ,колво_откр ,колво_закр"
										);
										
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "cnt_вГруппе"		,new описаниеТипов("number" ) ,"cnt_вГруппе" ,8 );
			
			for each v_currRow in тз__раздел_1_подраздел_1_3_группировка do
				v_currRow.колво_наНачало =?( v_currRow.колво_наНачало>0 ,1 ,0 );
				v_currRow.колво_откр	 =?( v_currRow.колво_откр>0 ,1 ,0 );
				v_currRow.колво_закр	 =?( v_currRow.колво_закр>0 ,1 ,0 );
				
				v_currRow.cnt_вГруппе=1;
			endDo;
		
		// новые клиенты и совсем ушедшие
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_приход"		,new описаниеТипов("number" ) ,"колво_приход" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_уход"		,new описаниеТипов("number" ) ,"колво_уход" ,8 );
			
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_sub_0"	,new описаниеТипов("number" ) ,"размерСчета_sub_0" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_0"		,new описаниеТипов("number" ) ,"размерСчета_0" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_10К"		,new описаниеТипов("number" ) ,"размерСчета_10К" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_100К"		,new описаниеТипов("number" ) ,"размерСчета_100К" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_1М"		,new описаниеТипов("number" ) ,"размерСчета_1М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_6М"		,new описаниеТипов("number" ) ,"размерСчета_6М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_10М"		,new описаниеТипов("number" ) ,"размерСчета_10М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_50М"		,new описаниеТипов("number" ) ,"размерСчета_50М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_100М"		,new описаниеТипов("number" ) ,"размерСчета_100М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_500М"		,new описаниеТипов("number" ) ,"размерСчета_500М" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_1Г"		,new описаниеТипов("number" ) ,"размерСчета_1Г" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "размерСчета_over_1Г"	,new описаниеТипов("number" ) ,"размерСчета_over_1Г" ,8 );
			
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_sub_0"	,new описаниеТипов("number" ) ,"колво_sub_0" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_0"		,new описаниеТипов("number" ) ,"колво_0" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_10К"	,new описаниеТипов("number" ) ,"колво_10К" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_100К"	,new описаниеТипов("number" ) ,"колво_100К" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_1М"		,new описаниеТипов("number" ) ,"колво_1М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_6М"		,new описаниеТипов("number" ) ,"колво_6М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_10М"	,new описаниеТипов("number" ) ,"колво_10М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_50М"	,new описаниеТипов("number" ) ,"колво_50М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_100М"	,new описаниеТипов("number" ) ,"колво_100М" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_500М"	,new описаниеТипов("number" ) ,"колво_500М" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_1Г"		,new описаниеТипов("number" ) ,"колво_1Г" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_over_1Г",new описаниеТипов("number" ) ,"колво_over_1Г" ,8 );
			
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_sub_0_new"	,new описаниеТипов("number" ) ,"колво_sub_0_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_0_new"		,new описаниеТипов("number" ) ,"колво_0_new" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_10К_new"	,new описаниеТипов("number" ) ,"колво_10К_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_100К_new"		,new описаниеТипов("number" ) ,"колво_100К_new" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_1М_new"		,new описаниеТипов("number" ) ,"колво_1М_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_6М_new"		,new описаниеТипов("number" ) ,"колво_6М_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_10М_new"	,new описаниеТипов("number" ) ,"колво_10М_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_50М_new"	,new описаниеТипов("number" ) ,"колво_50М_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_100М_new"	,new описаниеТипов("number" ) ,"колво_100М_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_500М_new"	,new описаниеТипов("number" ) ,"колво_500М_new" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_1Г_new"		,new описаниеТипов("number" ) ,"колво_1Г_new" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_over_1Г_new",new описаниеТипов("number" ) ,"колво_over_1Г_new" ,8 );
			
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_sub_0_lost"	,new описаниеТипов("number" ) ,"колво_sub_0_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_0_lost"		,new описаниеТипов("number" ) ,"колво_0_lost" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_10К_lost"	,new описаниеТипов("number" ) ,"колво_10К_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_100К_lost"	,new описаниеТипов("number" ) ,"колво_100К_lost" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_1М_lost"	,new описаниеТипов("number" ) ,"колво_1М_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_6М_lost"	,new описаниеТипов("number" ) ,"колво_6М_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_10М_lost"	,new описаниеТипов("number" ) ,"колво_10М_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_50М_lost"	,new описаниеТипов("number" ) ,"колво_50М_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_100М_lost"	,new описаниеТипов("number" ) ,"колво_100М_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_500М_lost"	,new описаниеТипов("number" ) ,"колво_500М_lost" ,8 );
			
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_1Г_lost"	,new описаниеТипов("number" ) ,"колво_1Г_lost" ,8 );
			тз__раздел_1_подраздел_1_3_группировка.Колонки.Добавить( "колво_over_1Г_lost",new описаниеТипов("number" ) ,"колво_over_1Г_lost" ,8 );
		
		
			for each v_currRow in тз__раздел_1_подраздел_1_3_группировка do
				
				if v_currRow.колво_наНачало = 0 then
					if v_currRow.колво_откр > v_currRow.колво_закр then
						v_currRow.колво_приход = 1;
					endIf;
				else
					if v_currRow.колво_наНачало + v_currRow.колво_откр = v_currRow.колво_закр then
						v_currRow.колво_уход = 1;
					endIf;
				endIf;
				
				if v_currRow.остаток < 0.0 then
					//v_таблица_строка.Параметры.размерСчета_sub_0=v_currRow.остаток;
					s_sell_name="размерСчета_sub_0";
					
					s_sell_колво		="колво_sub_0";
					s_sell_колво_new	="колво_sub_0_new";
					s_sell_колво_lost	="колво_sub_0_lost";
					
				elsIf v_currRow.остаток = 0.0 then
					s_sell_name="размерСчета_0";
					
					s_sell_колво		="колво_0";
					s_sell_колво_new	="колво_0_new";
					s_sell_колво_lost	="колво_0_lost";
					
				elsIf v_currRow.остаток<=10000.0 then
					s_sell_name="размерСчета_10К";
					
					s_sell_колво		="колво_10К";
					s_sell_колво_new	="колво_10К_new";
					s_sell_колво_lost	="колво_10К_lost";
					
				elsIf v_currRow.остаток <= 100000.0 then
					s_sell_name="размерСчета_100К";
					
					s_sell_колво		="колво_100К";
					s_sell_колво_new	="колво_100К_new";
					s_sell_колво_lost	="колво_100К_lost";
								
				elsIf v_currRow.остаток <= 1000000.0 then
					s_sell_name="размерСчета_1М";
					
					s_sell_колво		="колво_1М";
					s_sell_колво_new	="колво_1М_new";
					s_sell_колво_lost	="колво_1М_lost";
					
				elsIf v_currRow.остаток <= 6000000.0 then
					s_sell_name="размерСчета_6М";
					
					s_sell_колво		="колво_6М";
					s_sell_колво_new	="колво_6М_new";
					s_sell_колво_lost	="колво_6М_lost";
					
				elsIf v_currRow.остаток <= 10000000.0 then
					s_sell_name="размерСчета_10М";
					
					s_sell_колво		="колво_10М";
					s_sell_колво_new	="колво_10М_new";
					s_sell_колво_lost	="колво_10М_lost";
					
				elsIf v_currRow.остаток <= 50000000.0 then
					s_sell_name="размерСчета_50М";
					
					s_sell_колво		="колво_50М";
					s_sell_колво_new	="колво_50М_new";
					s_sell_колво_lost	="колво_50М_lost";	
					
					
				elsIf v_currRow.остаток <= 100000000.0 then
					s_sell_name="размерСчета_100М";    
					
					s_sell_колво		="колво_100М";
					s_sell_колво_new	="колво_100М_new";
					s_sell_колво_lost	="колво_100М_lost";
					
				elsIf v_currRow.остаток <= 500000000.0 then
					s_sell_name="размерСчета_500М";
					
					s_sell_колво		="колво_500М";
					s_sell_колво_new	="колво_500М_new";
					s_sell_колво_lost	="колво_500М_lost";
							
				elsIf v_currRow.остаток <= 1000000000.0 then
					
					s_sell_name="размерСчета_1Г";
					
					s_sell_колво		="колво_1Г";
					s_sell_колво_new	="колво_1Г_new";
					s_sell_колво_lost	="колво_1Г_lost";
					
				elsIf v_currRow.остаток > 1000000000.0 then
					s_sell_name="размерСчета_over_1Г";
					
					s_sell_колво		="колво_over_1Г";
					s_sell_колво_new	="колво_over_1Г_new";
					s_sell_колво_lost	="колво_over_1Г_lost";
					
				else
					s_sell_name="";
					
					s_sell_колво		="";
					s_sell_колво_new	="";
					s_sell_колво_lost	="";
					
				endIf;
				
				//распределение количества клиентов по группам:
					//"Количество клиентов по группе" -- s_sell_колво
					//"Количество клиентов, заключивших договор" -- s_sell_колво_new
					//"Количество клиентов, расторгнувших договор" -- s_sell_колво_lost 
					
					Если v_currRow.остаток <> 0 тогда 
						v_currRow[s_sell_name]  = v_currRow.остаток;//соотносим остаток с размером счета
					Иначе 
						//доп_Условие_1 -- Если портфель клиента = 0, то этот ноль надо записать в ячейку, а не оставлять ее пустой.
						v_currRow["размерСчета_0"]  = -1; //идентифицируем нулевые портфели
					КонецЕсли;
					
					v_currRow[s_sell_колво]	= ?( s_sell_колво = "", 0 ,1 ); //"Количество клиентов по группе" -- s_sell_колво
					
					if v_currRow.колво_наНачало = 0 then
						if v_currRow.колво_откр > v_currRow.колво_закр then
							v_currRow[s_sell_колво_new] = ?( s_sell_колво_new="", 0 ,1 ); //"Количество клиентов, заключивших договор"
						endIf;
					else 
						//соотносим клиентов, которые расторгли договор
						if v_currRow.колво_наНачало + v_currRow.колво_откр = v_currRow.колво_закр then  
							v_currRow[s_sell_колво_lost] = ?( s_sell_колво_lost="", 0 ,1 );
							
							//доп_Условие_2 -- В блок "Количество клиентов по группе" попадают ТОЛЬКО те клиенты, 
							//	у которых есть действующий договор на конец отчетного периода.
							//Клиенты, которые расторгли договор в отчетном периоде, 
							// 	должны попасть ТОЛЬКО в блок "Количество клиентов, расторгнувших договор".
							//это сделаем следующим образом:
							//"Количество клиентов по группе" минус "Количество клиентов, расторгнувших договор"
							v_currRow[s_sell_колво] = v_currRow[s_sell_колво] - v_currRow[s_sell_колво_lost];  //
							
						endIf;
					endIf;
				
			endDo;

			
		этаФорма.тз_итоги_1__1_3_группировка=тз__раздел_1_подраздел_1_3_группировка.скопировать();
		этаФорма.ЭлементыФормы.тз_итоги_1__1_3_группировка.создатьКолонки();
		
		этаФорма.ЭлементыФормы.тз_итоги_1__1_3_группировка.Колонки["лицо"]		.ЭлементУправления.КнопкаОткрытия=true;
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница = этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_итоги;
		этаФорма.ЭлементыФормы.pnl_итоги.ТекущаяСтраница    = этаФорма.ЭлементыФормы.pnl_итоги.Страницы.pg_1__1_3;
		этаФорма.ЭлементыФормы.pnl_1__1_3.ТекущаяСтраница   = этаФорма.ЭлементыФормы.pnl_1__1_3.Страницы.pg_1__1_3_группировка;
			
		тз__раздел_1_подраздел_1_3_группировка_свернуть=тз__раздел_1_подраздел_1_3_группировка.скопировать();
		тз__раздел_1_подраздел_1_3_группировка_свернуть.Свернуть(
										"видДоговора,налоговыйРезидентРФ,квалифицированныйИнвестор,кодРегионаСтраны3533,физЮр_лицо,cnt_сделка"
										,"остаток ,cnt_вГруппе ,колво_приход ,колво_уход"
										
										+",размерСчета_sub_0 ,размерСчета_0 ,размерСчета_10К ,размерСчета_100К"
										+",размерСчета_1М ,размерСчета_6М ,размерСчета_10М ,размерСчета_50М ,размерСчета_100М ,размерСчета_500М"
										+",размерСчета_1Г ,размерСчета_over_1Г"
										
										+",колво_sub_0 ,колво_0 ,колво_10К ,колво_100К"
										+",колво_1М ,колво_6М ,колво_10М ,колво_50М ,колво_100М ,колво_500М"
										+",колво_1Г ,колво_over_1Г"
										
										+",колво_sub_0_new ,колво_0_new ,колво_10К_new ,колво_100К_new"
										+",колво_1М_new ,колво_6М_new ,колво_10М_new ,колво_50М_new ,колво_100М_new ,колво_500М_new"
										+",колво_1Г_new ,колво_over_1Г_new"
										
										+",колво_sub_0_lost ,колво_0_lost ,колво_10К_lost ,колво_100К_lost"
										+",колво_1М_lost ,колво_6М_lost ,колво_10М_lost ,колво_50М_lost ,колво_100М_lost ,колво_500М_lost"
										+",колво_1Г_lost ,колво_over_1Г_lost"
										);
										
		
		if 1=2 then
			этаФорма.ЭлементыФормы.тз_dbg_test.Значение.Очистить();
			этаФорма.ЭлементыФормы.тз_dbg_test.Значение=тз__раздел_1_подраздел_1_3_группировка_свернуть.Скопировать();
			//этаФорма.ЭлементыФормы.тз_dbg_test.Значение.Сортировать( "договор ,операция" );
			этаФорма.ЭлементыФормы.тз_dbg_test.СоздатьКолонки();
		endIf;
		
		
		prc_вывести_печатнуюФорму_1_1_3( тз__раздел_1_подраздел_1_3_группировка_свернуть ,перечисления.ТипыПортфелей.Брокерский );
		prc_вывести_печатнуюФорму_1_1_3( тз__раздел_1_подраздел_1_3_группировка_свернуть ,перечисления.ТипыПортфелей.ДУ );
	endIf;	
	
	//раздел_2
	if not этаФорма.chkBx_пропустить_печатныеФормы_2 then 
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_итоги;
		этаФорма.ЭлементыФормы.pnl_итоги.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_итоги.Страницы.pg_2;
		
		тз__раздел_2 = fnc_собратьДанные_раздел_2();		
		тз__раздел_2_группировка = тз__раздел_2.Скопировать();
		тз__раздел_2_группировка.Сортировать("ОКАТО_ОКСМ_число");		
		тз__раздел_2_группировка.Свернуть(
										"АОО_договор_видДоговора, резидент, квалИнвестор, ОКАТО_ОКСМ, идСтратегии," +
										"контрагентДоговор, использование_денСредств, кодВалюты, типКлиента, статусКлиента," +
										"идБрокер, брокер"
										,"переоценка_значение"
										);
		
		
		этаФорма.тз_итоги_2 = тз__раздел_2.скопировать();
		
		этаФорма.ЭлементыФормы.тз_итоги_2.создатьКолонки();
		
		этаФорма.ЭлементыФормы.тз_итоги_2.Колонки["АОО_договор"].ЭлементУправления.КнопкаОткрытия = true; 
		
		prc_вывести_печатнуюФорму_2( тз__раздел_2_группировка ); //здесь выводим все подразделы формы 2
  		
	endIf;
	
	
	//раздел_4
	if not этаФорма.chkBx_пропустить_печатныеФормы_4 then
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_итоги;
		этаФорма.ЭлементыФормы.pnl_итоги.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_итоги.Страницы.pg_4;
		
		тз__раздел_4 = fnc_собратьДанные_раздел_4();		
		тз__раздел_4_группировка = тз__раздел_4.Скопировать(); 
		тз__раздел_4_группировка.Сортировать("ОКАТО_ОКСМ_число"); 
		тз__раздел_4_группировка.Свернуть(
									"АОО_договор_видДоговора, резидент, квалИнвестор, ОКАТО_ОКСМ, идСтратегии," +
									"контрагентДоговор, использование_денСредств, идентификатор_ЦБ, типКлиента, статусКлиента"
									,"переоценка_значение, конОстаток"
									);
									
									
		этаФорма.тз_итоги_4 = тз__раздел_4.скопировать();
		этаФорма.ЭлементыФормы.тз_итоги_4.создатьКолонки();
		
		этаФорма.ЭлементыФормы.тз_итоги_4.Колонки["АОО_договор"].ЭлементУправления.КнопкаОткрытия = true;
		
		prc_вывести_печатнуюФорму_4( тз__раздел_4_группировка ); //здесь выводим все подразделы формы 4
		
	endIf;
	
	//раздел_6_ПФИ
	if not этаФорма.chkBx_пропустить_печатнуюФорму_6 then
		
		тз__раздел_6_ПФИ = fnc_собратьДанные_раздел_6();
		
		тз__раздел_6_группировка = тз__раздел_6_ПФИ.Скопировать(); 
		тз__раздел_6_группировка.Сортировать("ОКАТО_ОКСМ_число");
		
		//резидент	
		//ОКАТО_ОКСМ	
		//контрагентДоговор	
		//использование_денСредств	
		//типКлиента	
		//статусКлиента	
		//квалИнвестор	
		//направлениеСделки	
		//типПФИ	
		//идПФИ		
		//организаторТоргов	
		//ПФИ	
		//конОстаток	
		//стоимость	
		//размерФО	
		//размерГО
		
		тз__раздел_6_группировка.Свернуть(
									"АОО_договор_видДоговора, резидент, квалИнвестор, ОКАТО_ОКСМ," +
									"контрагентДоговор, использование_денСредств, типКлиента, статусКлиента, квалИнвестор," +
									"направлениеСделки, типПФИ, идПФИ, ПФИ, организаторТоргов"
									,"конОстаток, стоимость, размерФО, размерГО"
									); 
									
		Для каждого элм из тз__раздел_6_группировка цикл	
			элм.конОстаток = ?(элм.конОстаток > 0, элм.конОстаток, -элм.конОстаток);
		КонецЦикла;
		
		prc_вывести_печатнуюФорму_6( тз__раздел_6_группировка );
		
	endIf;
	
	
	//раздел_7
	if not этаФорма.chkBx_пропустить_печатныеФормы_7 then
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_итоги;
		этаФорма.ЭлементыФормы.pnl_итоги.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_итоги.Страницы.pg_7;
		
		тз__раздел_7 = fnc_собратьДанные_раздел_7(); 
			
		тз__раздел_7_группировка = тз__раздел_7.Скопировать(); 	
		тз__раздел_7_группировка.Сортировать("ОКАТО_ОКСМ_число");		
		тз__раздел_7_группировка.Свернуть(
										"видДоговора, резидент, квалИнвестор, ОКАТО_ОКСМ, типКлиента, идСтратегии," +
										"контрагентДоговор, использование_денСредств, типКлиента, статусКлиента," +
										"Треб_или_Обяз, тип_Треб_Обяз, идКонтрагента, контрагент, типСделкиРЕПО"
										,"delta_переоценка"
										);
										
		
		этаФорма.тз_итоги_7 = тз__раздел_7.скопировать();
		
		этаФорма.ЭлементыФормы.тз_итоги_7.создатьКолонки();
		
		этаФорма.ЭлементыФормы.тз_итоги_7.Колонки["поДокументу"].ЭлементУправления.КнопкаОткрытия = true; 
		
		prc_вывести_печатнуюФорму_7( тз__раздел_7_группировка ); //здесь выводим все подразделы формы 7
		
	endIf;
		
	//раздел_10
	if not этаФорма.chkBx_пропустить_печатныеФормы_10 then
		
		тз__раздел_10 = fnc_собратьДанные_раздел_10();
		
		prc_вывести_печатнуюФорму_10( тз__раздел_10 ); //здесь выводим все подразделы формы 10
			
	endIf;
		
КонецПроцедуры


Функция __123__() экспорт
	
	перем res;
		
	return res;
	
КонецФункции



//-----------------------------------------------------------------------------
Процедура тз_клиентскиеДоговоры_отборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Элемент.ТекущаяСтрока.лицо=Элемент.ТекущаяСтрока.клиентскийДоговор.лицо;
	
КонецПроцедуры
//-----------------------------------------------------------------------------	
Процедура тз_обязательства_оборотыПриАктивизацииСтроки(Элемент)
	if этаФорма.тз_обязательства_обороты.Количество()>0 then
		этаФорма.ed_документ=Элемент.ТекущаяСтрока.ПоДокументу;
	endIf;
КонецПроцедуры

Процедура тз_обязательства_остаткиПриАктивизацииСтроки(Элемент)
	if этаФорма.тз_обязательства_остатки.Количество()>0 then
		этаФорма.ed_документ=Элемент.ТекущаяСтрока.ПоДокументу;
	endIf;
КонецПроцедуры
//-----------------------------------------------------------------------------
Процедура btn_фильтрНажатие(Элемент)
	
	этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки.Очистить();
	
	if trimAll( этаФорма.ed_документ )<>"" then
		v_отбор=new структура;
			v_отбор.Вставить( "ПоДокументу" ,этаФорма.ed_документ );
		тз_источник=этаФорма.ЭлементыФормы.тз_обязательства_обороты.Значение;
		//=этаФорма.ЭлементыФормы.тз_обязательства.НайтиСтроки( v_отбор );
		//тз_источник=этаФорма.тз_обязательства.НайтиСтроки( v_отбор );
		ar_=тз_источник.НайтиСтроки( v_отбор );
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение=тз_источник.Скопировать( ar_ );
		
		//этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Сортировать( "Регистратор" );
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Сортировать( "Период,Регистратор" );
		
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.СоздатьКолонки();
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["Регистратор"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["ПоДокументу"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["СчетУчета"]		.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["инструмент"]	.ЭлементУправления.КнопкаОткрытия=true;
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_обязательства;
		этаФорма.ЭлементыФормы.pnl_обязательства.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_обязательства.Страницы.pg_обязательства_фильтр;
		
		
		//------------------------
		//тз_источник	=0;
		//ar_			=0;
		
		////тз_источник=этаФорма.ЭлементыФормы.pg_остатки_обороты.Значение;
		//тз_источник=этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение;
		////=этаФорма.ЭлементыФормы.тз_обязательства.НайтиСтроки( v_отбор );
		////тз_источник=этаФорма.тз_обязательства.НайтиСтроки( v_отбор );
		//ar_=тз_источник.НайтиСтроки( v_отбор );
		//этаФорма.ЭлементыФормы.тз_остатки_обороты.Значение=тз_источник.Скопировать( ar_ );
		//
		//этаФорма.ЭлементыФормы.тз_остатки_обороты.СоздатьКолонки();
		
		//------------------------
		тз_источник_02=этаФорма.ЭлементыФормы.тз_обязательства_остатки.Значение;
		//=этаФорма.ЭлементыФормы.тз_обязательства.НайтиСтроки( v_отбор );
		//тз_источник=этаФорма.тз_обязательства.НайтиСтроки( v_отбор );
		ar_=тз_источник_02.НайтиСтроки( v_отбор );
		
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Колонки.Вставить( 0, "whoIs" ,new описаниеТипов( "строка" ), "whoIs" ,16 );
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Колонки.Вставить( этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Колонки.Количество()-1
																			,"ост_кЗачислению" ,new описаниеТипов( "number" ), "ост_кЗачислению" ,16 );
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Колонки.Вставить( этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Колонки.Количество()-1
																			,"ост_кСписанию" ,new описаниеТипов( "number" ), "ост_кСписанию" ,16 );
		
		
		тз_oper=тз_источник_02.Скопировать( ar_ );
		for each v_currRow in тз_oper do
			v_newRow=этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Добавить();
			
				v_newRow.whoIs="остатки";
				
				v_newRow.ПоДокументу	=v_currRow.ПоДокументу;
				v_newRow.инструмент		=v_currRow.инструмент;
				
				v_newRow.СчетУчета		=v_currRow.СчетУчета;
				v_newRow.ВидОперации	=v_currRow.ВидОперации;
				
				v_newRow.ост_кЗачислению	=v_currRow.количество_кЗачислению;
				v_newRow.ост_кСписанию		=v_currRow.количество_кСписанию;
		endDo;
		
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Значение.Сортировать( "whoIs ,Период,Регистратор" );
		
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.СоздатьКолонки();
		
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["Регистратор"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["ПоДокументу"]	.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["СчетУчета"]		.ЭлементУправления.КнопкаОткрытия=true;
		этаФорма.ЭлементыФормы.тз_обязательства_фильтр.Колонки["инструмент"]	.ЭлементУправления.КнопкаОткрытия=true;
		
		
		этаФорма.ЭлементыФормы.pnl_закладки.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_закладки.Страницы.pg_обязательства;
		этаФорма.ЭлементыФормы.pnl_обязательства.ТекущаяСтраница=этаФорма.ЭлементыФормы.pnl_обязательства.Страницы.pg_обязательства_фильтр;
	endIf;
	
КонецПроцедуры

Процедура chkBx_пропустить_операцииПриИзменении(Элемент)
	
	Если ЭтаФорма.chkBx_пропустить_операции тогда
		ЭтаФорма.chkBx_пропустить_печатнуюФорму_1_1_2 = true;	
	КонецЕсли;
	
КонецПроцедуры
//-----------------------------------------------------------------------------

// Объединить 2 таблицы значения
// тзОсновная - таблица к которой будут добавляться данные
// тзПрисоединяемая - таблица из которой будут браться данные
// стОтборОдинаковых - стурктура со списком полей по которым определяется одинаковость записи
// ДобавлятьНеНайденное  - ИСТИНА => не существующие записи в тзОсновная будут браться из тзПрисоединяемая
Процедура prc_ОбъединитьТаблицыЗначений(тзОсновная, тзПрисоединяемая, стОтборОдинаковых, 
																	  стОтборРазличных, ДобавлятьНеНайденное = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(стОтборРазличных) тогда
		Для каждого элм из стОтборРазличных цикл 
			тзОсновная.Колонки.Добавить(элм.Ключ);	
		КонецЦикла;
	КонецЕсли;
	
	Для каждого текПрисоединяемаяЗапись из тзПрисоединяемая цикл
        ЗаполнитьЗначенияСвойств(стОтборОдинаковых, текПрисоединяемаяЗапись);
        НайденыеСтроки = тзОсновная.НайтиСтроки(стОтборОдинаковых);
        Если НайденыеСтроки.Количество() > 0 тогда
            Для каждого текНайденная из НайденыеСтроки цикл
                ЗаполнитьЗначенияСвойств(текНайденная,текПрисоединяемаяЗапись);
            КонецЦикла;
        ИначеЕсли ДобавлятьНеНайденное тогда
            НовСтрокаОсновном = тзОсновная.Добавить();
            ЗаполнитьЗначенияСвойств(НовСтрокаОсновном,текПрисоединяемаяЗапись);
        КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

